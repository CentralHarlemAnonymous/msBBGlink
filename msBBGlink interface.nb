(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    277191,       5998]
NotebookOptionsPosition[    273949,       5885]
NotebookOutlinePosition[    274295,       5900]
CellTagsIndexPosition[    274252,       5897]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["msBBGlink interface", "Title",
 CellChangeTimes->{{3.6661146254891186`*^9, 3.6661146364958797`*^9}, 
   3.693330620937371*^9, 3.69333517557185*^9, 3.6936631242638783`*^9, {
   3.6936721524392605`*^9, 
   3.693672152730277*^9}},ExpressionUUID->"3368f855-c887-4e18-b669-\
e47647e363cf"],

Cell[BoxData["Null"], "Input",
 CellChangeTimes->{{3.6933372139844403`*^9, 
  3.693337214518471*^9}},ExpressionUUID->"e1b86ef5-5c2e-48a8-8abc-\
3feab7801e44"],

Cell["\<\
January 17, 2017:
A new binary that unifies my bloomberg-to-mathematica functions into a single \
connection, and which adds new features to the intraday functions.

A modern update to my 2009-era code that used to be available on GitHub. It \
newly includes (1) ability to turn DPDF setting on and off, if there are \
times when you want to adjust for dividends and corporate action and other \
times you don\[CloseCurlyQuote]t, and (2) the functions are renamed to share \
a common scheme with my other bloomberg-to-Mathematica functions, and (3) all \
the capabilities of this interface -- current data, historical data, intraday \
trades and intraday \[OpenCurlyDoubleQuote]bars\[CloseCurlyDoubleQuote] -- \
are now in a single binary, which lets you use all these functions with a \
single persistent connection. (4) Compiled binary is now 64bit, though it \
compiles just fine in 32bit if you need that.

The interface code relies on Associations and DateObjects, so won\
\[CloseCurlyQuote]t work with older versions of Mathematica, but the binary \
accepts and returns strings, so could be used from any version of Mathematica \
that works with WSTP (and probably even MathLink). The current version of the \
interface is smarter than older versions about error handling and data \
formatting.\
\>", "Text",
 CellChangeTimes->{{3.6936623767801247`*^9, 3.6936624652821865`*^9}, {
   3.6936625642638483`*^9, 3.693662652689906*^9}, {3.693662720495784*^9, 
   3.6936627553427773`*^9}, {3.693662793003931*^9, 3.693662861064824*^9}, 
   3.69366310209661*^9, {3.6936721578565702`*^9, 3.6936722121976786`*^9}, {
   3.6973007920364084`*^9, 3.6973007983207684`*^9}, {3.697300867294713*^9, 
   3.697300892798172*^9}, {3.697300933736513*^9, 3.697300957185855*^9}, {
   3.6973015558190947`*^9, 
   3.697301589798038*^9}},ExpressionUUID->"813d1f24-48ab-47f6-8c14-\
1d8cdc7a9574"],

Cell[TextData[{
 "This interface consists of four commands:\n\n",
 StyleBox["msBBGhistory:",
  FontWeight->"Bold"],
 " returns historical data from Bloomberg, normally in TemporalData format \
though alternatives are available. Can be used for example to retrieve U.S. \
CPI monthly back to 1969, or the closing price of Apple Inc. daily since \
1978.\n",
 StyleBox["msBBGcurrent:",
  FontWeight->"Bold"],
 " Returns Bloomberg data for a single field for one or more securities. \
Works for both single-number responses (such as current market cap) and \
multi-field responses (such as all registered owners). The FLDS command in \
the Bloomberg terminal can be used to identify what data is available for \
each security and which overrides, if any, are allowed.\n",
 StyleBox["msBBGintraday",
  FontWeight->"Bold"],
 ": returns intraday trade data (or ask data, or bid data)\n",
 StyleBox["msBBGintradayBars",
  FontWeight->"Bold"],
 ":  returns periodic intraday data (price snapshots every minute, for \
example, aggregating volume from that minute).\n\nThe source code for these \
functions is available at\n",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"github", ".", "com"}], "/", "MichaelSternNYC"}], "/"}]}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://github.com/MichaelSternNYC/"], None},
    ButtonNote->"https://github.com/MichaelSternNYC/"], TraditionalForm]],
  ExpressionUUID->"8a4ba213-42dd-4c8f-b1e8-18c62d84a3e3"]
}], "Text",
 CellChangeTimes->{
  3.6937439090396614`*^9, 3.693744003498064*^9, {3.69384065227194*^9, 
   3.6938406526149597`*^9}},ExpressionUUID->"967af88f-a648-482b-a855-\
e3e9e453e404"],

Cell[CellGroupData[{

Cell["utilities", "Section",
 CellChangeTimes->{{3.693840148833145*^9, 
  3.6938401496861935`*^9}},ExpressionUUID->"7078d3b4-2963-419d-8923-\
adb867b53538"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "[", "date_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dtO", "}"}], ",", 
     RowBox[{
      RowBox[{"dtO", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringQ", "[", "date", "]"}], "&&", 
          RowBox[{
           RowBox[{"StringLength", "[", "date", "]"}], "\[Equal]", "0"}]}], 
         ",", 
         RowBox[{"DateObject", "[", "]"}], ",", 
         RowBox[{
          RowBox[{"Head", "[", "date", "]"}], "===", "DateObject"}], ",", 
         "date", ",", "True", ",", 
         RowBox[{"DateObject", "[", "date", "]"}]}], "]"}]}], ";", 
      RowBox[{"DateString", "[", 
       RowBox[{"dtO", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
         "}"}]}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "[", "]"}], ":=", 
   RowBox[{"bbgifyDate", "[", "Today", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "::", "usage"}], " ", "=", " ", 
   "\"\<bbgifyDate[]: Converts date in any format to the string format \
Bloomberg wants. If given nothing or an empty string, returns today's date. \
Neeed for any dates that appear in overrides within API calls.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6938400966031575`*^9, 3.6938401084848375`*^9}, {
   3.6938401624119215`*^9, 3.693840166793172*^9}, 
   3.69384083375032*^9},ExpressionUUID->"481b23d2-326a-47a3-9702-\
49958638dc19"]
}, Closed]],

Cell[CellGroupData[{

Cell["links", "Section",
 CellChangeTimes->{{3.693655067316047*^9, 3.693655067768073*^9}, {
  3.693840143530842*^9, 
  3.693840145371947*^9}},ExpressionUUID->"a03fcc61-d850-43a5-bd27-\
df509886db4a"],

Cell[CellGroupData[{

Cell["manual", "Subsection",
 CellChangeTimes->{{3.6938405791357565`*^9, 
  3.693840579727791*^9}},ExpressionUUID->"c419fe07-8725-4851-aabd-\
dea01d94bf90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"link1", "=", " ", 
  RowBox[{"Install", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], ",", 
        RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
      "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "debugging"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.69365530968391*^9, {3.6936587909300256`*^9, 3.6936587922441006`*^9}, 
   3.6936726106624975`*^9, 3.693743191446617*^9, {3.69730399293849*^9, 
   3.6973039970537252`*^9}},ExpressionUUID->"2f9a809d-6d2f-45b6-8581-\
5d8dcfc16e0d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{
           {Thickness[0.038461538461538464`], {
             {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
               25.499999999999996`, 2.5}, {25.499999999999996`, 
               1.3953100000000003`}, {24.604699999999998`, 
               0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
               0.49999999999999994`}, {1.3953100000000003`, 
               0.49999999999999994`}, {0.49999999999999994`, 
               1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
               0.49999999999999994`, 23.5}, {0.49999999999999994`, 
               24.604699999999998`}, {1.3953100000000003`, 
               25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
               25.499999999999996`}, {24.604699999999998`, 
               25.499999999999996`}, {25.499999999999996`, 
               24.604699999999998`}, {25.499999999999996`, 23.5}, {
               25.499999999999996`, 2.5}}}]}}, {
             {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
               19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832,
                20.021499999999996`}, {6.930469999999999, 
               20.021499999999996`}, {6.930469999999999, 
               18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832,
                16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445,
                11.079700000000003`}, {9.46445, 12.933999999999997`}, {
               18.917199999999998`, 12.933999999999997`}, {
               18.917199999999998`, 14.7438}, {9.46445, 14.7438}, {9.46445, 
               16.598}, {5.30508, 13.8391}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445,
                11.079700000000003`}, {9.46445, 12.933999999999997`}, {
               18.917199999999998`, 12.933999999999997`}, {
               18.917199999999998`, 14.7438}, {9.46445, 14.7438}, {9.46445, 
               16.598}, {5.30508, 13.8391}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
               "]], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
               4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
               5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
               8.29796625}, {14.163129999999999`, 8.29796625}, {
               14.163129999999999`, 4.337966249999999}}}]}}}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Users\\\\Michael\\\\Box \
Sync\\\\programming\\\\bloomberg to mathematica\\\\msGetBBGunified \
0.2\\\\Debug\\\\msBBGlink.exe\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{
           {Thickness[0.038461538461538464`], {
             {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
               25.499999999999996`, 2.5}, {25.499999999999996`, 
               1.3953100000000003`}, {24.604699999999998`, 
               0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
               0.49999999999999994`}, {1.3953100000000003`, 
               0.49999999999999994`}, {0.49999999999999994`, 
               1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
               0.49999999999999994`, 23.5}, {0.49999999999999994`, 
               24.604699999999998`}, {1.3953100000000003`, 
               25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
               25.499999999999996`}, {24.604699999999998`, 
               25.499999999999996`}, {25.499999999999996`, 
               24.604699999999998`}, {25.499999999999996`, 23.5}, {
               25.499999999999996`, 2.5}}}]}}, {
             {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
               19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832,
                20.021499999999996`}, {6.930469999999999, 
               20.021499999999996`}, {6.930469999999999, 
               18.212100000000003`}, {16.3832, 18.212100000000003`}, {16.3832,
                16.357399999999995`}, {20.5426, 19.116799999999998`}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445,
                11.079700000000003`}, {9.46445, 12.933999999999997`}, {
               18.917199999999998`, 12.933999999999997`}, {
               18.917199999999998`, 14.7438}, {9.46445, 14.7438}, {9.46445, 
               16.598}, {5.30508, 13.8391}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445,
                11.079700000000003`}, {9.46445, 12.933999999999997`}, {
               18.917199999999998`, 12.933999999999997`}, {
               18.917199999999998`, 14.7438}, {9.46445, 14.7438}, {9.46445, 
               16.598}, {5.30508, 13.8391}}}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
               0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
               "]], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
               4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813, 
               5.047809999999999}, {14.98813, 5.047809999999999}, {14.98813, 
               8.29796625}, {14.163129999999999`, 8.29796625}, {
               14.163129999999999`, 4.337966249999999}}}]}}}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Users\\\\Michael\\\\Box \
Sync\\\\programming\\\\bloomberg to mathematica\\\\msGetBBGunified \
0.2\\\\Debug\\\\msBBGlink.exe\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Users\\Michael\\Box Sync\\programming\\bloomberg to \
mathematica\\msGetBBGunified 0.2\\Debug\\msBBGlink.exe\"", 1015, 4],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6936593101537237`*^9, 3.693661787982447*^9, 
  3.693661935495885*^9, 
  3.6936765594962206`*^9},ExpressionUUID->"b3194f94-640b-4934-be14-\
436086422628"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"linkUnified1", "=", 
    RowBox[{"Install", "[", 
     RowBox[{"LinkConnect", "[", "\"\<123\>\"", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", "debugging", " ", "*)"}]}]], "Input",ExpressionUUID->\
"a77d4e3f-549c-4b05-9b14-7661b1e8edac"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Off", "[", 
    StyleBox[
     RowBox[{"Unset", "::", "norep"}], "MessageName"], 
    StyleBox["]", "MessageName"]}], 
   StyleBox[";", "MessageName"]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "link1", "]"}], "===", "LinkObject"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Off", "[", 
       StyleBox[
        RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
       StyleBox["]", "MessageName"]}], 
      StyleBox[";", "MessageName"], 
      StyleBox["\[IndentingNewLine]", "MessageName"], 
      RowBox[{"Uninstall", "[", "link1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", "link1", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "link1", "]"}], "===", "Symbol"}], ",", 
     RowBox[{"Remove", "[", "link1", "]"}]}], "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"On", "[", 
    StyleBox[
     RowBox[{"Unset", "::", "norep"}], "MessageName"], 
    StyleBox["]", "MessageName"]}], 
   StyleBox[";", "MessageName"]}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.6936551361209826`*^9, 3.6936551363599963`*^9}, 
   3.693655209140159*^9, {3.6936564654100137`*^9, 3.69365646709511*^9}, {
   3.6936578015424356`*^9, 3.693657816246277*^9}, {3.693658787078806*^9, 
   3.6936588181935854`*^9}, 3.6936588736227555`*^9, {3.693661683438468*^9, 
   3.693661687256686*^9}},ExpressionUUID->"ddc18e93-c15a-458f-892c-\
8fe703592dcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["programatic", "Subsection",
 CellChangeTimes->{{3.693840584645072*^9, 
  3.693840586798195*^9}},ExpressionUUID->"7ec52b2e-ca40-4b5a-a6eb-\
469430026d48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGmakeLink", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], ",", 
          RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
        "\"\<msBBGlink.exe\>\""}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGmakeLink", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Install", "[", 
    RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], "]"}]}], 
  ";", 
  RowBox[{
   RowBox[{"msBBGmakeLink", "::", "usage"}], " ", "=", " ", 
   "\"\<msBBGmakeLink[]: When run, launches the WSTP application that moves \
historical intraday data from Bloomberg to Mathematica. msBBGintraday[] will \
launch and kill this automatically, but you can do it manually with this \
function, assign the result to a variable, and pass the link to \
msBBGintraday[] with the \\\"LinkObject]\\\"\[Rule] option if you plan on \
calling it many times in succession.  This saves the overhead of relaunching \
the link for every call. When finished, can call Uninstall[(this link)] and \
the program will be quit. Can set \\\"path to executable\\\" variable if the \
default is for some reason not what you want.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6936760159151297`*^9, 3.693676022594512*^9}, {
   3.693739577858932*^9, 3.6937395778639326`*^9}, 
   3.693743202486249*^9},ExpressionUUID->"d66e0aae-e313-45dc-887d-\
e6123c066b23"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["intraday", "Section",
 CellChangeTimes->{{3.693676040592541*^9, 
  3.693676041293581*^9}},ExpressionUUID->"7bd70ce1-8e68-4946-9408-\
396fde1eb887"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "msBBGintraday", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<daylightsaving start\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2015", ",", "3", ",", "8"}], "}"}]}], ",", 
      RowBox[{"\"\<daylightsaving end\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2015", ",", "11", ",", "1"}], "}"}]}], ",", 
      RowBox[{"\"\<tick type\>\"", "\[Rule]", "\"\<TRADE\>\""}], ",", 
      RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
      RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Debug\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}], "]"}]}], ",", 
      RowBox[{"\"\<output\>\"", "\[Rule]", "Association"}], 
      RowBox[{"(*", 
       RowBox[{"or", " ", "List"}], "*)"}], ",", 
      RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"\"\<debug\>\"", "\[Rule]", "False"}], ",", 
      RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}]}], "}"}]}], ";", 
   RowBox[{
    RowBox[{"msBBGintraday", "[", 
     RowBox[{
     "ticker_String", ",", "starttime_DateObject", ",", "endtime_DateObject", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "output", ",", " ", "link", ",", "st", ",", "et", ",", 
        "daylighttimezone", ",", "dateformat", ",", "x", ",", "fld", ",", 
        "ok", ",", "dsb", ",", "dse"}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"ok", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<trade\>\"", ",", "\"\<bid\>\"", ",", "\"\<ask\>\""}],
             "}"}], ",", 
           RowBox[{"ToLowerCase", "[", 
            RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"fld", "=", 
          RowBox[{"ToUpperCase", "[", 
           RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
         ",", 
         RowBox[{"ok", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"link", " ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
            "LinkObject"}], ",", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Install", "[", 
           RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
           "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
         RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
        "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{"dsb", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving start\>\"", "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dse", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving end\>\"", "]"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"daylighttimezone", " ", "=", " ", 
        RowBox[{"-", "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dateformat", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<T\>\"", ",", 
          "\"\<Time\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"st", " ", "=", " ", 
        RowBox[{"DateObject", "[", "starttime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"st", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "st"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "st"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<st: \>\"", ",", "st"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", " ", "=", " ", 
        RowBox[{"DateObject", "[", "endtime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "et"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "et"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<et: \>\"", ",", "et"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<msBBGintradayLink arguments: \>\"", ",", 
           RowBox[{"{", 
            RowBox[{"ticker", ",", "fld", ",", "st", ",", "et", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", 
               "1", ",", "0"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", 
               ",", "0"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"msBBGintradayLink", "[", 
         RowBox[{"ticker", ",", "fld", ",", "st", ",", "et", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
            ",", "0"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", ",",
             "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<x: \>\"", ",", "x"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"ToExpression", "[", "x", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"using", " ", "ToExpression", " ", "to", " ", "convert", " ", 
         RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
         "list"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dsb", "\[LessEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
                RowBox[{"dse", "\[GreaterEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"daylighttimezone", ",", "\"\<Hour\>\""}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"daylighttimezone", "-", "1"}], ",", 
                   "\"\<Hour\>\""}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", "output"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Price\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Size\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Price\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Size\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", "False", ",", 
         RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}],
        " ", "\[IndentingNewLine]", " ", "output"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGintraday", "::", "usage"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   "\"\<msBBGintraday[ticker_,starttime_,endtime_] retrieves intraday ticks \
from Bloomberg for a given ticker within the specified period. \nPARAMETERS:\n\
ticker: e.g., \\\"AAPL Equity\\\"\nstarttime: DateObject indicating start \
date and time\nendtime: DateObject indicating end date and time.\n\nBloomberg \
seems to save detailed intraday data back six months.\n\nBy default returns \
trade data, but can set option \\\"tick type\\\" to \\\"BID\\\" or \
\\\"ASK\\\" if you want something different.\n\nReturns a three-member list \
for every datapoint available: {time, price, size}. Pass \
\\\"output\\\"\[Rule]Association if you prefer an Association to the list. \
Oother optional parameters include \\\"\!\(\*
StyleBox[\"daylightsaving\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"beg\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"\\\\\\\"\",
FontVariations->{\"Underline\"->True}]\) and \\\"\!\(\*
StyleBox[\"daylightsaving\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"end\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"\\\\\\\"\",
FontVariations->{\"Underline\"->True}]\), which change every year. For a \
liquid security, the number of datapoints here is likely to be enormous, and \
you may want to consider using msBBGintradayBars[] instead.\n\n\\\"LinkObject\
\\\" can be passed a link object created by msBBGmakeLink[], saving the \
overhead of re-launching the link. If you do this, later Uninstall[] the \
link.\n\\\"path to executable\\\"\[Rule]should be set to the correct place by \
default but if you have more than one version of the executable, for example, \
you can pick one by setting the path here.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693336120790913*^9, 3.693336166100505*^9}, {
   3.6933363114698195`*^9, 3.693336319292267*^9}, {3.693336452310875*^9, 
   3.6933364783283634`*^9}, {3.6933376364756055`*^9, 3.693337653949605*^9}, {
   3.6933376940678997`*^9, 3.693337717808257*^9}, {3.6936586226434*^9, 
   3.693658636357185*^9}, {3.6936596650860243`*^9, 3.6936597332719245`*^9}, {
   3.6936601440594206`*^9, 3.6936601482516603`*^9}, {3.693660210046194*^9, 
   3.6936602225169077`*^9}, {3.693660425557521*^9, 3.693660474437317*^9}, {
   3.693660584796629*^9, 3.693660586593732*^9}, {3.6936606497013416`*^9, 
   3.693660665469243*^9}, {3.6936726106864986`*^9, 3.6936726106934986`*^9}, {
   3.6936760075546513`*^9, 3.69367601119586*^9}, 
   3.6937395952769284`*^9},ExpressionUUID->"6a3c0ba4-7ac5-486b-94b1-\
35167211285e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"msBBGintraday", "[", 
   RowBox[{"\"\<AAPL US Equity\>\"", ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "35", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
    RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "link1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.453722229078125*^9, 3.45372224440625*^9}, {
   3.45372252646875*^9, 3.453722563296875*^9}, {3.45372283796875*^9, 
   3.453722852375*^9}, {3.453723053*^9, 3.453723074375*^9}, {
   3.453723404671875*^9, 3.453723405109375*^9}, {3.453723643*^9, 
   3.453723643421875*^9}, {3.45372459578125*^9, 3.45372459971875*^9}, {
   3.453724728734375*^9, 3.45372473225*^9}, {3.45372511259375*^9, 
   3.453725113015625*^9}, {3.4592743951875*^9, 3.459274444046875*^9}, {
   3.459274482484375*^9, 3.45927448271875*^9}, {3.459274547890625*^9, 
   3.45927459928125*^9}, {3.459274696375*^9, 3.45927470203125*^9}, {
   3.4592748145625*^9, 3.459274836265625*^9}, {3.459526650144084*^9, 
   3.459526656644084*^9}, {3.459526911097209*^9, 3.459526921456584*^9}, {
   3.459528595940959*^9, 3.459528596394084*^9}, {3.459528738690959*^9, 
   3.459528742753459*^9}, 3.459528828269084*^9, {3.459528866784709*^9, 
   3.459528869409709*^9}, {3.459528908925334*^9, 3.459528909565959*^9}, {
   3.459528946659709*^9, 3.459528946925334*^9}, {3.459530212628459*^9, 
   3.459530217050334*^9}, {3.459536738925334*^9, 3.459536748456584*^9}, {
   3.459537472362834*^9, 3.459537509644084*^9}, {3.459537555878459*^9, 
   3.459537559894084*^9}, {3.459538035800334*^9, 3.459538035987834*^9}, {
   3.459538288581584*^9, 3.459538288737834*^9}, {3.459538354831584*^9, 
   3.459538363269084*^9}, {3.459538432909709*^9, 3.459538433222209*^9}, {
   3.459538939315959*^9, 3.459538939847209*^9}, {3.602961402848167*^9, 
   3.602961440288308*^9}, {3.632872113189006*^9, 3.6328721856448746`*^9}, 
   3.693336120891919*^9, 3.6933361553228884`*^9, {3.6936593839879465`*^9, 
   3.6936593890532365`*^9}, {3.6936597653577595`*^9, 
   3.6936597703210435`*^9}, {3.693660267214464*^9, 3.6936602823513303`*^9}, {
   3.693660620390665*^9, 3.6936606327343707`*^9}, {3.69366180219026*^9, 
   3.693661808113599*^9}},ExpressionUUID->"56b8baf7-edf4-4598-a746-\
a8e6560b6d8d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.81`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "200"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:01\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.8`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:01\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.8`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:01\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.8`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"968"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:34:59\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "34", ",", "59.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.86`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:34:59\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "34", ",", "59.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.86`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:35:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "35", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.851`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:35:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "35", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.86`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23886046173856088893, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23886046173856088893, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 13, 23886046173856088893, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23886046173856088893 === $SessionID, 
   Out[13], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.459538949628459*^9, {3.602961403760219*^9, 3.602961441387371*^9}, {
   3.6328721298300576`*^9, 3.632872186644769*^9}, 3.633089005179681*^9, 
   3.63308935682585*^9, 3.69333722289795*^9, 3.6933376775949574`*^9, 
   3.693337720856432*^9, 3.693655997800268*^9, 3.6936593623397083`*^9, 
   3.693659402170987*^9, {3.693659761451536*^9, 3.6936597818187013`*^9}, 
   3.6936602377817807`*^9, {3.6936602738428435`*^9, 3.6936602845684566`*^9}, 
   3.6936605986374207`*^9, {3.693660629500186*^9, 3.6936606397347713`*^9}, {
   3.6936617987510633`*^9, 3.693661808601627*^9}, 3.693661971199927*^9, 
   3.6936732578275394`*^9},ExpressionUUID->"d4fa77cf-a659-4d0d-a6f8-\
d880a85ae4c7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["intraday bars", "Section",
 CellChangeTimes->{{3.69333517942307*^9, 3.6933351814591866`*^9}, {
  3.6933360995326977`*^9, 3.6933360998387146`*^9}, {3.693676063787868*^9, 
  3.693676064947934*^9}},ExpressionUUID->"607604db-dc7b-4557-b7b9-\
2c4faa4f2bdb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "msBBGintradayBars", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<daylightsaving start\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2017", ",", "3", ",", "8"}], "}"}]}], ",", 
      RowBox[{"\"\<daylightsaving end\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2017", ",", "11", ",", "1"}], "}"}]}], ",", 
      RowBox[{"\"\<fill\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<tick type\>\"", "\[Rule]", "\"\<TRADE\>\""}], ",", 
      RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
            ",", 
            RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}]}]}], ",", 
      RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
      RowBox[{"\"\<output\>\"", "\[Rule]", "Association"}], 
      RowBox[{"(*", 
       RowBox[{"or", " ", "List"}], "*)"}], ",", 
      RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"\"\<debug\>\"", "\[Rule]", "False"}]}], "}"}]}], ";", 
   RowBox[{
    RowBox[{"msBBGintradayBars", "[", 
     RowBox[{
     "ticker_String", ",", "starttime_DateObject", ",", "endtime_DateObject", 
      ",", 
      RowBox[{"barsize_", "/;", 
       RowBox[{"NumberQ", "[", "barsize", "]"}]}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "output", ",", " ", "link", ",", "st", ",", "et", ",", "x", ",", 
        "daylighttimezone", ",", "dateformat", ",", "fld", ",", "ok", ",", 
        "dsb", ",", "dse"}], "}"}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"ok", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<trade\>\"", ",", "\"\<bid\>\"", ",", "\"\<ask\>\""}],
             "}"}], ",", 
           RowBox[{"ToLowerCase", "[", 
            RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"fld", "=", 
          RowBox[{"ToUpperCase", "[", 
           RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
         ",", 
         RowBox[{"ok", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"link", " ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
            "LinkObject"}], ",", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Install", "[", 
           RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
           "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
         RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
        "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{"dsb", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving start\>\"", "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dse", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving end\>\"", "]"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"daylighttimezone", " ", "=", " ", 
        RowBox[{"-", "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dateformat", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<T\>\"", ",", 
          "\"\<Time\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"st", " ", "=", " ", 
        RowBox[{"DateObject", "[", "starttime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"st", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "st"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "st"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"et", " ", "=", " ", 
        RowBox[{"DateObject", "[", "endtime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "et"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "et"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"msBBGintradayBarsLink", "[", 
         RowBox[{
         "ticker", ",", "fld", ",", "st", ",", "et", ",", "barsize", ",", 
          RowBox[{"OptionValue", "[", "\"\<fill\>\"", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
            ",", "0"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", ",",
             "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"ToExpression", "[", "x", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"using", " ", "ToExpression", " ", "to", " ", "convert", " ", 
         RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
         "list"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dsb", "\[LessEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
                RowBox[{"dse", "\[GreaterEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"daylighttimezone", ",", "\"\<Hour\>\""}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"daylighttimezone", "-", "1"}], ",", 
                   "\"\<Hour\>\""}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "6", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "}"}], "&"}], ",", "output"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Open\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<High\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Low\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Close\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Tick Counts\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Shares\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "7", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", "False", ",", 
         RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}],
        " ", "\[IndentingNewLine]", " ", "output"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGintradayBars", "::", "usage"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   "\"\<msBBGintradayBars[ticker_,starttime_,endtime_,barsize_] retrieves \
intraday samples from Bloomberg for a given ticker within the specified \
period. \nPARAMETERS:\nticker: e.g., \\\"AAPL Equity\\\"\nstarttime: \
DateObject indicating start date and time\nendtime: DateObject indicating end \
date and time\nbarsize: is the sample frequency, in minutes\nOptionally, can \
pass\n\t\\\"tick type\\\" \[Rule]  \\\"TRADE\\\" or \\\"BID\\\" or \
\\\"ASK\\\", and/or\n\t\\\"fill\\\"\[Rule] If this is set to 1, the API will \
append previous day close information as first datapoint as the start of \
trading for the specified period. Otherwise, the first data point will be the \
actual first trading on that day.\n\nBloomberg seems to save detailed \
intraday data back six months.\n\nReturns seven items for each bar \
\[LongDash]\n1: Time\n2: Open\n3: High\n4: Low\n5: Close\n6: Tick Counts per \
bar\n7: Shares per bar\n\nBy default returns these in List format, but pass \
\\\"output\\\"\[Rule]Association if you prefer it that way.\n\\\"LinkObject\\\
\" can be passed a link object created by msBBGmakeLink[], saving the \
overhead of re-launching the link. If you do this, later Uninstall[] the \
link.\n\\\"path to executable\\\"\[Rule]should be set to the correct place by \
default but if you have more than one version of the executable, for example, \
you can pick one by setting the path here.\n\nIf you want every trade, rather \
than periodic samples, use msBBGintraday[].\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6661146594818754`*^9, 3.666114659754876*^9}, {
   3.673912810655224*^9, 3.673912824529992*^9}, {3.6739130690459065`*^9, 
   3.673913113814847*^9}, 3.6739131597235255`*^9, {3.6933298685043344`*^9, 
   3.6933299448757024`*^9}, 3.6933302487870855`*^9, {3.693330285106162*^9, 
   3.6933303708780684`*^9}, {3.693330699330855*^9, 3.6933307045851555`*^9}, {
   3.6933308193057165`*^9, 3.693330854315719*^9}, {3.693331095723527*^9, 
   3.6933310957385283`*^9}, {3.6933313962057133`*^9, 3.693331402873095*^9}, {
   3.693331515331527*^9, 3.6933315512805834`*^9}, {3.693331711646756*^9, 
   3.693331719649214*^9}, {3.6933318745990763`*^9, 3.693331908140995*^9}, {
   3.693332045021824*^9, 3.693332046859929*^9}, {3.6933321251994095`*^9, 
   3.6933321970115175`*^9}, {3.69333229408807*^9, 3.6933323129311476`*^9}, {
   3.69333235336446*^9, 3.6933323787239103`*^9}, {3.693332479734688*^9, 
   3.6933326365206556`*^9}, {3.693332806291366*^9, 3.6933328204621763`*^9}, {
   3.6933328885230694`*^9, 3.693332977071134*^9}, {3.6933358310003386`*^9, 
   3.6933358595049686`*^9}, {3.6933360069954042`*^9, 3.693336007060408*^9}, {
   3.693336120919921*^9, 3.6933361209369216`*^9}, {3.6933361553498898`*^9, 
   3.693336155364891*^9}, {3.6933376604479766`*^9, 3.6933376694304905`*^9}, {
   3.6936553440858774`*^9, 3.6936553467450294`*^9}, {3.693672610970515*^9, 
   3.693672610978515*^9}, 3.6936772135656314`*^9, 3.693739598606119*^9, 
   3.6937432220583687`*^9},ExpressionUUID->"0d33da3a-0ba3-470c-8013-\
9062a7635cb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"msBBGintradayBars", "[", 
   RowBox[{"\"\<INDU Index\>\"", ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "15", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", "10", ",", 
    RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "link1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.454587848335125*^9, 3.454587859507*^9}, {
   3.45458790747575*^9, 3.454587927960125*^9}, {3.45458807360075*^9, 
   3.45458809510075*^9}, {3.459275881515625*^9, 3.45927592615625*^9}, {
   3.459276168515625*^9, 3.4592761741875*^9}, {3.459276238203125*^9, 
   3.459276300421875*^9}, {3.459276330921875*^9, 3.459276410234375*^9}, {
   3.45927644059375*^9, 3.459276440921875*^9}, {3.4592768755625*^9, 
   3.459276880734375*^9}, {3.459276914078125*^9, 3.45927691478125*^9}, {
   3.459276982796875*^9, 3.459277007109375*^9}, {3.459529880003459*^9, 
   3.459530002284709*^9}, {3.459530269034709*^9, 3.459530284925334*^9}, {
   3.459531241440959*^9, 3.459531277034709*^9}, {3.459531384425334*^9, 
   3.459531387597209*^9}, {3.459532305581584*^9, 3.459532307831584*^9}, {
   3.459534557331584*^9, 3.459534561800334*^9}, {3.459535735472209*^9, 
   3.459535738894084*^9}, {3.459536102940959*^9, 3.459536103206584*^9}, 
   3.459536596815959*^9, {3.602961457161274*^9, 3.6029614889120893`*^9}, {
   3.6328722194274797`*^9, 3.632872285601246*^9}, 3.673913118939104*^9, {
   3.6933319483172927`*^9, 3.693331987035507*^9}, 3.69333600708741*^9, {
   3.693661943845362*^9, 3.693661959110235*^9}, {3.6936729391472855`*^9, 
   3.6936729586103983`*^9}, 3.6936729966525745`*^9, 
   3.693673287525238*^9},ExpressionUUID->"55d4aa92-8019-434d-bc7d-\
62af4238f0cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "30", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19158.88`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19166.86`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.82`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19164.88`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:40:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "40", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19164.64`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19168.18`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19160.94`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:50:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "50", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19157.22`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19157.29`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:00:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19156.81`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19164.67`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19155.69`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19162.59`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:10:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "10", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19162.25`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19162.44`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.55`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19154.64`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:20:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "20", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19154.64`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19173.99`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.43`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19173.34`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.454587860835125*^9, {3.45458791016325*^9, 3.454587929257*^9}, {
   3.4545880750695*^9, 3.4545880968195*^9}, 3.454670632374875*^9, {
   3.45927583465625*^9, 3.45927584103125*^9}, 3.45927587253125*^9, 
   3.459275908296875*^9, 3.459275940140625*^9, 3.4592761865625*^9, {
   3.4592762426875*^9, 3.459276365453125*^9}, {3.459276398*^9, 
   3.459276447859375*^9}, 3.459276890546875*^9, 3.459276925328125*^9, {
   3.459276997140625*^9, 3.45927701709375*^9}, {3.459529895065959*^9, 
   3.459529945065959*^9}, {3.459529975722209*^9, 3.459530002956584*^9}, 
   3.459530197800334*^9, {3.459530270456584*^9, 3.459530286253459*^9}, 
   3.459531244940959*^9, 3.459531288925334*^9, 3.459531395284709*^9, 
   3.459531581878459*^9, 3.459531981284709*^9, 3.459532017128459*^9, 
   3.459532173347209*^9, 3.459532232519084*^9, 3.459532338097209*^9, 
   3.459532711753459*^9, 3.459532813394084*^9, 3.459533406128459*^9, 
   3.459533587128459*^9, 3.459534563237834*^9, 3.459535730628459*^9, 
   3.459535815581584*^9, 3.459535947440959*^9, 3.459536129909709*^9, 
   3.459536580862834*^9, 3.459536665534709*^9, 3.459539127315959*^9, {
   3.6029614704700346`*^9, 3.602961490077156*^9}, {3.632872243631094*^9, 
   3.632872286163984*^9}, 3.6330890070385294`*^9, 3.6330893604665155`*^9, 
   3.6933301724187174`*^9, 3.6933302687782283`*^9, 3.69333063420113*^9, 
   3.6933307455564985`*^9, 3.6933308587639737`*^9, 3.6933315615111685`*^9, 
   3.6933318507767134`*^9, 3.693331912580249*^9, 3.693331990847725*^9, {
   3.6933321555841475`*^9, 3.6933322121913853`*^9}, 3.6933322695616665`*^9, 
   3.6933323178824306`*^9, 3.6933323828321457`*^9, 3.6933326454811683`*^9, 
   3.6933329465983915`*^9, 3.693332996177227*^9, 3.693334498524125*^9, 
   3.6933346227172284`*^9, 3.693335823080885*^9, 3.693335883410336*^9, 
   3.6933360248874283`*^9, 3.693337227988241*^9, 3.6933377314990406`*^9, 
   3.6936603880463753`*^9, 3.6936619607443285`*^9, {3.693673261717762*^9, 
   3.6936732885302954`*^9}},ExpressionUUID->"5d897631-4fc9-4d58-af7e-\
07464cea3904"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["history", "Section",
 CellChangeTimes->{{3.693672652218874*^9, 
  3.6936726540459785`*^9}},ExpressionUUID->"cfcc54bd-c35c-404f-b3c2-\
1c4c1a7ae9cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGhistory", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<adjust\>\"", "\[Rule]", "\"\<CALENDAR\>\""}], ",", 
     RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<value\>\""}], ",", 
     RowBox[{"\"\<name\>\"", "\[Rule]", "\"\<df\>\""}], ",", 
     RowBox[{"\"\<output\>\"", "\[Rule]", "\"\<nf3\>\""}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vs", ".", " ", "\"\<nf2\>\""}], " ", "or", " ", 
       "\"\<ts\>\""}], "*)"}], ",", 
     RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<outer noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
     RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
            ",", 
            RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGhistory", "[", 
    RowBox[{
    "ticker_String", ",", "field_String", ",", "start_", ",", "end_", ",", 
     "freq_String", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "raw", ",", "name1", ",", "output", ",", "link", ",", " ", "date", ",", 
       "endS"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"name1", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<name\>\"", "]"}], "\[Equal]", 
          "\"\<df\>\""}], ",", 
         RowBox[{"ticker", "<>", "\"\<: \>\"", "<>", "field"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<name\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"link", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Install", "[", 
          RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
          "]"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
        RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"date", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", "freq", "]"}], " ", ",", "\"\<DAY\>\"", 
         ",", "\"\<DAILY\>\"", ",", "\"\<WEEK\>\"", ",", "\"\<WEEKLY\>\"", 
         ",", "\"\<MONTH\>\"", ",", "\"\<MONTHLY\>\"", ",", "\"\<QUARTER\>\"",
          ",", "\"\<QUARTERLY\>\"", ",", "\"\<YEAR\>\"", ",", 
         "\"\<YEARLY\>\"", ",", "\"\<ANNUAL\>\"", ",", "\"\<YEARLY\>\"", ",", 
         "_", ",", 
         RowBox[{"ToUpperCase", "[", "freq", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"endS", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"Head", "[", "end", "]"}], ",", "List", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"end", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", "DateObject", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"end", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", "String", ",", "end"}], "]"}]}], ";", 
      RowBox[{"raw", " ", "=", 
       RowBox[{"msBBGhistoryLink", "[", 
        RowBox[{"ticker", ",", " ", "field", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"start", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"endS", "==", "\"\<\>\""}], ",", "endS", ",", 
           RowBox[{"DateString", "[", 
            RowBox[{"end", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
              "}"}]}], "]"}]}], "]"}], ",", "date", ",", 
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"OptionValue", "[", "\"\<adjust\>\"", "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
           ",", "0"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "1", ",", 
           "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<msBBGhistory. raw: \>\"", ",", "raw"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "raw", ",", 
         RowBox[{"ToExpression", "[", "raw", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<msBBGhistory. output: \>\"", ",", "output", ",", 
          "\"\<. Head[output]: \>\"", ",", 
          RowBox[{"Head", "[", "output", "]"}], ",", 
          "\"\<. Length[output]: \>\"", ",", 
          RowBox[{"Length", "[", "output", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"use", " ", "ToExpression", " ", "to", " ", "convert", " ", 
        RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
        "list"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<raw: \>\"", ",", "raw"}], "]"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
          "LinkObject"}], ",", "False", ",", 
        RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}], 
      " ", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], "&&", 
         RowBox[{
          RowBox[{"Length", "[", "output", "]"}], ">", "0"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"output", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{
                 RowBox[{"DateList", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "3"}], "]"}], 
               ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], ",", 
            "output"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}], ",", 
            "\"\<value\>\"", ",", 
            RowBox[{"TimeSeries", "[", "output", "]"}], ",", 
            "\"\<pctchanges\>\"", ",", 
            RowBox[{"EventSeries", "[", "output", "]"}], ",", 
            "\[IndentingNewLine]", "\"\<delta\>\"", ",", 
            RowBox[{"EventSeries", "[", "output", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], ",", 
            "\[IndentingNewLine]", "\"\<nf2\>\"", ",", 
            RowBox[{"Association", "[", 
             RowBox[{
              RowBox[{"\"\<name\>\"", "\[Rule]", "name1"}], ",", 
              RowBox[{"\"\<type\>\"", "\[Rule]", 
               RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}]}], ",", 
              RowBox[{"\"\<data\>\"", "\[Rule]", "output"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<nf3\>\"", ",", 
            RowBox[{"TemporalData", "[", 
             RowBox[{"output", ",", 
              RowBox[{"MetaInformation", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<name\>\"", "\[Rule]", "name1"}], ",", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", 
                  RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}]}]}], 
                "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\"\<ts\>\"", 
            ",", "output"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], "&&", " ", 
         RowBox[{
          RowBox[{"Length", "[", "output", "]"}], "==", "0"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"msBBGhistory", "::", "noData"}], ",", "ticker"}], "]"}], 
         ";", 
         RowBox[{"output", "=", "Null"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "output"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGhistory", "::", "usage"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   "\"\<msBBGhistory[ticker_,field_,start_,end_,freq_,OptionsPattern[]] \
retrieves data from Bloomberg for a given ticker and field within the \
specified period.\nPARAMETERS:\nticker: e.g., \\\"AAPL Equity\\\"\nfield: \
e.g., \\\"Px_Last\\\"\nstart: start date\nend: end date, or \\\"\\\" for \
current day\nfreq: is the data frequency. Choices: \\\"day\\\", \\\"week\\\", \
\\\"month\\\", \\\"quarter\\\", or \\\"year\\\"\\n\n\nOptionally, you can \
pass  adjust\[Rule] for the period adjustment (default is \\\"CALENDAR\\\"). \
Choices, \\\"ACTUAL\\\", \\\"CALENDAR\\\"\ntype\[Rule] is one of \
\\\"delta\\\", \\\"pctchanges\\\", or (by default) \\\"value\\\". \nname\
\[Rule]\\\"whatever\\\" sets the name.\n\\\"output\\\"\[Rule]\\\"nf2\\\", \
\\\"nf3\\\" (the new default) or \\\"ts\\\". nf2 is an association with Keys \
\\\"data\\\", \\\"name\\\" and \\\"type\\\". nf3 is a TemporalData object \
with the same information in MetaInformation. \\\"ts\\\" leaves out the \
MetaInformation.\n\\\"noisy\\\"\[Rule](True or False), toggles debugging info\
\n\\\"use DPDF\\\"\[Rule](True or False), toggles whether or not the DPDF \
settings in the Bloomberg terminal are respected. This would typically be \
used to shut off dividend adjustment, if it has been turned on.\n\
\\\"LinkObject\\\" can be passed a link object created by msBBGmakeLink[], \
saving the overhead of re-launching the link. If you do this, later \
Uninstall[] the link.\n\\\"path to executable\\\"\[Rule]should be set to the \
correct place by default but if you have more than one version of the \
executable, for example, you can pick one by setting the path here.\n\nBy \
default, pctchanges and delta-type data are stored as EventSeries[], while \
value-type data is stored as TimesSeries[].\>\""}], " ", ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6936727016797028`*^9, 3.693672726210106*^9}, {
   3.6936727899457517`*^9, 3.6936728082377977`*^9}, 3.6937396021963243`*^9, {
   3.6937432314159036`*^9, 3.693743233210006*^9}, 3.6972975117087846`*^9, 
   3.697297571630212*^9},ExpressionUUID->"2c0171ef-2661-4747-bb02-\
90e3730df49b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGhistory", "[", 
  RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Px_Close_1D\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"\<\>\"", ",", 
   "\"\<Day\>\"", ",", 
   RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66610284214863*^9, 3.666102849140644*^9}, {
   3.6661042769514074`*^9, 3.666104277408908*^9}, 
   3.693673010492366*^9},ExpressionUUID->"3db040f8-32b9-4b57-bc97-\
0e7e7ba5b4a2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[{
              {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6],
                Opacity[1.], LineBox[CompressedData["
1:eJwVknlQ1AUcxXdoBoxdcDlzxAOJI8AiRZBrme93pR3Q5ZBwuAbc/f1+O7AQ
SYQUhLBjlMdwbLqhYCFkSKiopS2yCwGC0jYMFJqyDUiQHPEV5OhQXLHtzbx5
8/79vLeFORCvsODxeGFm/58Jf7t18a0Jux5tP+Zoy8Eb59f1CwSEi3W8HK2G
hRhd84sgW8LHPh7ugzks3FLkJYKQkMv1aFGeYSHoVHipyJ6QgjK96os4WPA9
P6BwJBw5U7sl04WDF4lviZXOhPatWT3DDSwkTJeOnlpHmJ3VER0v5qDR1BHZ
vp6wUT8ZKk3kILrZf1i/gfCPpsaTA6CA0LaIqqlNhD9klwZWKxWgklVkPXIl
3HP5y75OrQK6K4xOM26E44aOrNRdCojc1D1j60H46krqxphxDjwlv48JvQhP
OLfekeo5iPqldlXkTVi7tXQl7BMOMieS5mS+hNdT+u5YvcLBg+MxvP2vEx5l
VBYmAwu11WMhR/0IDw1dMR5UsdAS/E1N+TbCHbleOpsjDFiCwLXdn9CB+eKu
Op6B1P73C8YDCDNuqZysbBiwWrBfHN9JmHlIZTLVMfC0IPqkTQjhjXsOsW1x
DIg/70x2DCMs9p7Cw2VyOBIcsCAMJyxQe4hcTsvADiWXg4Cw0se9Pk8sh+Wx
SnWomNAQ9+nsSxFyWD+RV6uMINQui7U/PpeBKCslv0JCKM4od97gK4fWY4V5
5ZFm3nFzv7aVyuADwY7T2t2E136Gpbqv06HS03NCLyUMj+o9oUxLh4bbLiZt
DOHOAols5FsZrBguiUbjzLxqzAqWwwXu4LkH8ea9jIbYHjkD9YzxTf4+Qp+V
9/aWPWZg7t/8CftEwtbRi9nFBgYCHRw5YbKZR9yyYVLDQO9nMTbBqYQtZU3b
dAoGmpu6fgtLI0xoubpqu52Bu64Dg9n7CXuKvAXlfiw82zymUcsJdd9b9F27
x0Ch1qtEzRJ+FGLDm16Vg+gqv0qvIHxa0XLblMRCEnr1dmcQ+klL0pZ9ODiQ
JDF0KAkn+QL+89c46B/i/fMwm1C6d6zBSciB6uGSZDqH8P653PnBv1goTFZ1
OuYSfvfO5jU3P2bh3QS7NUF5hNZ9TxZvKlnQTRnzA/MJ3ebvb91Yw4J0RPSy
rMDcg5f8pcRAgNLYzX1IOHN9YPisOwtcsvArTZF5z+qV6Y4hFqoGd8frigmv
NKj+fJvlwG603VNfQji7Nrbn4g0OjNE/uU2rCE2aC6Jw83+f7Fu7a/4wYUC6
ZUqstQIuWY+efVZGaBnVtmd8loP/ANc2z60=
                "]]}},
             Annotation[#, "Charting`Private`Tag$26603#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.6291456*^9, 121.45956868332448`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{3629145600, 3693600000}, {121.45956868332448`, 
            173.71091061398542`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"02 Jan 2015\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"17 Jan 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["514",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[{
              {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6],
                Opacity[1.], LineBox[CompressedData["
1:eJwVknlQ1AUcxXdoBoxdcDlzxAOJI8AiRZBrme93pR3Q5ZBwuAbc/f1+O7AQ
SYQUhLBjlMdwbLqhYCFkSKiopS2yCwGC0jYMFJqyDUiQHPEV5OhQXLHtzbx5
8/79vLeFORCvsODxeGFm/58Jf7t18a0Jux5tP+Zoy8Eb59f1CwSEi3W8HK2G
hRhd84sgW8LHPh7ugzks3FLkJYKQkMv1aFGeYSHoVHipyJ6QgjK96os4WPA9
P6BwJBw5U7sl04WDF4lviZXOhPatWT3DDSwkTJeOnlpHmJ3VER0v5qDR1BHZ
vp6wUT8ZKk3kILrZf1i/gfCPpsaTA6CA0LaIqqlNhD9klwZWKxWgklVkPXIl
3HP5y75OrQK6K4xOM26E44aOrNRdCojc1D1j60H46krqxphxDjwlv48JvQhP
OLfekeo5iPqldlXkTVi7tXQl7BMOMieS5mS+hNdT+u5YvcLBg+MxvP2vEx5l
VBYmAwu11WMhR/0IDw1dMR5UsdAS/E1N+TbCHbleOpsjDFiCwLXdn9CB+eKu
Op6B1P73C8YDCDNuqZysbBiwWrBfHN9JmHlIZTLVMfC0IPqkTQjhjXsOsW1x
DIg/70x2DCMs9p7Cw2VyOBIcsCAMJyxQe4hcTsvADiWXg4Cw0se9Pk8sh+Wx
SnWomNAQ9+nsSxFyWD+RV6uMINQui7U/PpeBKCslv0JCKM4od97gK4fWY4V5
5ZFm3nFzv7aVyuADwY7T2t2E136Gpbqv06HS03NCLyUMj+o9oUxLh4bbLiZt
DOHOAols5FsZrBguiUbjzLxqzAqWwwXu4LkH8ea9jIbYHjkD9YzxTf4+Qp+V
9/aWPWZg7t/8CftEwtbRi9nFBgYCHRw5YbKZR9yyYVLDQO9nMTbBqYQtZU3b
dAoGmpu6fgtLI0xoubpqu52Bu64Dg9n7CXuKvAXlfiw82zymUcsJdd9b9F27
x0Ch1qtEzRJ+FGLDm16Vg+gqv0qvIHxa0XLblMRCEnr1dmcQ+klL0pZ9ODiQ
JDF0KAkn+QL+89c46B/i/fMwm1C6d6zBSciB6uGSZDqH8P653PnBv1goTFZ1
OuYSfvfO5jU3P2bh3QS7NUF5hNZ9TxZvKlnQTRnzA/MJ3ebvb91Yw4J0RPSy
rMDcg5f8pcRAgNLYzX1IOHN9YPisOwtcsvArTZF5z+qV6Y4hFqoGd8frigmv
NKj+fJvlwG603VNfQji7Nrbn4g0OjNE/uU2rCE2aC6Jw83+f7Fu7a/4wYUC6
ZUqstQIuWY+efVZGaBnVtmd8loP/ANc2z60=
                "]]}},
             Annotation[#, "Charting`Private`Tag$26603#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.6291456*^9, 121.45956868332448`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3629145600, 3693600000}, {121.45956868332448`, 
            173.71091061398542`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"02 Jan 2015\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"17 Jan 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["514",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" properties\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["86400",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[Automatic, {CompressedData["
1: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

    "], CompressedData["
1:eJxdmUsOJLcRRMeCVr6FbsBP/ngEA17pCFoI8MqL8f3hYBNqPgoYDCZQ7KnK
ZPAxk/ztj//+/uc/fvz48fNX/fXv//z839/UL79A/euf+seMsbp5tPaV1qwo
Vx+QnsnBEdYg05t95dSTFZRbXdlrcPCIKsjpPiCzNT7NSj6tnHzR5z1f2Udf
GNxnQ7yS++GVloWv6h7IxjyffOXqjLevFRg8Wk28d/RgNoYNxju8M94RrXPw
JzdXZhreO/cMQY4WfDrWwIvmTGZDfxjvzMF4Z/XOwbUw+3OuYjZsGOOVYLxm
nbNv3jj75sVsWBnjtTUZr35KM3hvNIP3RTO4OcN3nwzfY9AMnp1m8FxMTjRn
+NGN4ceYNIPsQDNoRpiciGD4kcbwoybNEGvQDDmC8eZ0xvtxBqQPmiGjMxtn
GV25nPFWM5qh+qQZanRmoywZb3kw3gqjGc56vbIGs7FaMd71SeSVw2kGWYNm
WDaYHC1Ihr8yGf4qpxnWIgn1s4nkWBskoaaTJBQ0SUJrThJa23MKWSShtUUS
Wm8kofVOElofhuRYd5JQj0hC+8wQZBmyYaOThHYweeUgCW1MklBr3ZmNkSSh
JEm4STc5eJGEdnh85SQJTdPLeKeRhKYlCjOY1hXMYAftX6mBDF95hxnEJ4LR
bASTI4owfAuCUZJgtLOHfKUyxXh9kITmkySUJAnNLZkNT5JQ1CQJzRdJKEkS
2ic1kJMklDFIQgsnCSVJQosoZiMWSWjZSELLThKavpBm0IJkctJJQjGFJDQt
X5ohq9EMWYvJqU4w2tm6r5wEozYcglFyMTmVBKO+kGC0WgSjrUYw2qkRrpwE
o+mLGf5yglGPCEZb2ZicU278Jb01gtFbJxi1ZxKM3lT4BGSQhN6SJPRTyFy5
OrLhvZOE8g1J6H2ShN6NJNxFD7LhPUlC70USamMnCfVPklCrajAbYxKMWr0E
o3+8DhkEo4+cMIOPRTD6rj4xWPs8zOC7ksN7d72F904nGH3v9BycBKPvTZTv
1d6G99ogGP2Uk1dOglHGIBh9YwXv1fczfBma4ct29Mb2Ct576tYrjWD0/WMO
doLRPZLe8HQm55TAV3ZyUpKcVB1HTvquzvBeVVsMX69l+JHkpJ9a+8rT5Pwl
c5CT4jE5KUlOKqBkNrIIRlWXBKNXIxglCUavs5d/pRGMXk4wegXBKEkwqmIo
ZmM1gtFXJxiFBYJRkmD0dTz6lUEw+kqCUVsIwajdiWAMzS7ijTZJwmhGEqoS
JwkVLdEXbRF92ziYbu3cRF+c5ulKIwmjO0koU5GE0ZMklCXZO8foRJ9QTvSp
XSD6djvA8EcQfdvdzsFF9MXp8L5SrTWzoXaR8Z68XmlEn7Zbom8vI2ZDTGW8
Kq8Zr6peTLfKTaIvzgRe6WTdrjA43ZZk3d68mY0z+Vd2sm7TnLPvk6zbZGQ2
9BWM15Os2yuHs++LrNseZTb2+QcGn8b6SiPrYsMP79VjmiEWWSdJ1m160QzZ
ybo4HfyVTtZJknXx6dkgk6yL0/1DEm6hOeHs1yTrVCCyWY5Ksm57m/EqPJrh
HDN85WpslmNNsi7OWock62I5WbdZzmyIZYg3WyPrJMm6bJ2sywOVK52syxZk
nWaMrJNcje8t9s55+HTlIPqyT6JPcsEM2Y29c2plNA4ukjD7IgnzgBCSvXOO
SRLmOey50knC1BKENyTZO+dYBGPORjDuPQPeUClGMOY5VboySMKcSRLmLJJQ
mzNPEfOcSF05SMIUJ2gG9Yc0gzl751SjwnitSMJU0U8znKOvKzt751RRyHjP
/nOlE4wqmAjGXW7QDNqAGX40gjG11dEM2pBohrPRXRkkYUaShHIvSagqls1y
nk3yykESZk6ScJ9scvb1HmYjkySUIgnFbpIwz258ZWfvrFqMJMxz4nilk4Sp
fYBmqGTvrL6TYNTaJhhV5RGM2l8IxjxHm1cGwbiPURj+SoIxVxGMuRZ75zqn
pJAEo/hLMCpVBGM1Z++skQTjrkwXBy+Csc5x7JWdvbMWJMFYp0SCJBiFMoJx
l49ITo1OEkqShDUGSVin+LoySEJhkSSsD0QoScLSPs9snDruykkS1nzuUyRJ
wprPfYpWEUkoh5KE+3+FGcqe+xRVhOydy4xgrHMKfmUQjGXP9Yoke+fyRjAK
bQTj7jxoBn+uV8qf6xX5hGAs9UsM35/rlfLnekWSvXOdk/srJ8FY8VyvVDzX
KxXP9UpFEYy7W2L42QjGyue2ZSeKyUkjJ+uU7Vc+ty2Vz22Lamv2zvp8crK0
Nhh+Pbct+4CV3qjntkX2JSdL38Hw67ltqfVcr5yzAMhJMNZ6rldqPdcrYheb
5VpFMAoiBKP2ZoJxted6RR/F3lmUIBjX+emVz/XKas/1ivDM3lkmIxhX7wTj
7oaTg5/bltWf2xaRniRc/bleWf25XlGe2CxrqRN92kGJPm0aRN8uWxn+WCTh
7tEZ4HzuU9Z87lNUTbN3Xqc7bP8HFUW8ig==
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    MetaInformation -> {
      "name" -> "IBM US Equity: Px_Close_1D", "type" -> "value"}, 
     ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.666102851184664*^9, {3.666104268106874*^9, 3.66610427841541*^9}, 
   3.6936732940856133`*^9},ExpressionUUID->"4d0cbb0d-dca2-48b4-b364-\
37345cec6b6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bbgLink", "=", 
   RowBox[{"msBBGmakeLink", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"msBBGhistory", "[", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Px_Close_1D\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"\<\>\"", ",", 
     "\"\<Day\>\"", ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"LinkObject", "\[Rule]", "bbgLink"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"msBBGhistory", "[", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Px_Close_1D\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"\<\>\"", ",", 
     "\"\<Day\>\"", ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"LinkObject", "\[Rule]", "bbgLink"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uninstall", "[", "bbgLink", "]"}], ";", 
  RowBox[{"Remove", "[", "bbgLink", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Callout", "[", 
      RowBox[{
       RowBox[{"x1", "/", 
        RowBox[{"x1", "[", "\"\<FirstValue\>\"", "]"}]}], ",", 
       "\"\<Without dividends\>\""}], "]"}], ",", 
     RowBox[{"Callout", "[", 
      RowBox[{
       RowBox[{"x2", "/", 
        RowBox[{"x2", "[", "\"\<FirstValue\>\"", "]"}]}], ",", 
       "\"\<With dividends\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Historical IBM Returns\>\""}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.666032367807501*^9, 3.666032413613121*^9}, {
   3.6660324702643614`*^9, 3.6660324990340066`*^9}, {3.6661042983254642`*^9, 
   3.6661043204035883`*^9}, {3.666114061313176*^9, 3.666114072463399*^9}, {
   3.6936730113414145`*^9, 3.693673013774554*^9}, {3.6937432921763787`*^9, 
   3.693743316618777*^9}, 3.6937436974125566`*^9, {3.6937437964682226`*^9, 
   3.6937437988153567`*^9}},ExpressionUUID->"bac47468-63e8-4d0f-8ae8-\
8828654fec9f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    TagBox[{
      {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6], LineBox[CompressedData["
1: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
4joMSax+yRxczp//tTaI6lkLtzUxjvoWzSzrNIfnVutr735/nPphJJzsKowI
zIpgWFjdH06jfvggXJ/Xr7Usjvqhoy/PsfZdSv08HLYVjhO2UT/Pg9n25RKt
J5PhXh586ZbddL7awQ/Pc2L5n29z6XzVHs5Y31Uy0YrOh+fCEnc247P8mwQP
W7HlmDblv6R6XTTEH/29aMSHJAn1sy9sNvvSVOdMyr8BLmQLOMp/AX7F/iDK
Xw2z5ehfZt9Zc7FfkR80/W8E9cN6+PZxYQaj9eRZuPaO4SU/HeqHZ3D9vzm+
rvuon7UCMP+OEw54qJ5n4NfzNTZ/8qe8VfCTy/Fll8SUt0WgSj2k1nD8vdGz
z4ZTPU/BnYXbdZ/q+QR2rJz0Vr+R8qrNQ7+MXn4l0IP2m5bwhhPy5PA1tN+c
Arsbh+8u/0Xnq//BHWbVNkyqpv3mP/j9PdtT/q9pv2kRhP4WltPltN90hysS
FLdjutD5SUyQyvljxp8glfPGMrNg3M8d3lfC6DxDzQ1+wiZ0Oo9YDkumrF0b
Q+eRvpnwWx39nvn0/UrTEMwPcWdDdrWk/fwkWDIut/FOVzqPWApfFZZbdJ4q
ywhROW+Ul8AVm28nTTOk853xof9bn9B5yuJQlfPSjDS4ue8E/x+mlL8IPrDm
yIJq+nvUvsFci6DOb+jnk6VhPPf1WGPpRjr/LtgDYzM5+aYZ5b8Fs/bTovxf
wlTfz3Sdr1JPxU64pHT7ylSeziNuwLNTvx5OqKHziDq4m4ZwYkbnEZ0X8Jyv
V/0PrVx6XyCGAewo6Pz6GnzWXe1rQSqdR9TA81svOTfiGfWH3kKe0xkjzCDU
H47wjqDGCm85nacEwevbdnzZ7hH1gyic5zINVmzfTFY4hKuc34gCYTfX9IKD
xlTvLTAGs4Dl2XS+oy3FeqJcN2mZNp2f2MO+7ECG8vrD42Obu+z6//dFG6Uq
z2tyNnzxeEXQl3b0/mXwIuzHD1rkqmfR+DAHnuc232j3GxofEuE/TQOw4qPx
7Tzs9W2V2SRNyv8CjjATTuConj4RPLep9sv3ITU0PqyDWwe/P2eRTeODHJ5b
FLBy32jK/yxCNb/mYp6LZRtmqmc8PMax4ELZGarnadgh+MV0WTjlr4RNdE8F
37GjftBYovJ+QmYFJ/kLK0qq70n4wSWxcUR76ofHsGafo26+7pS/Gd5U3Ss0
/iXl7xuJ/YxRenEjvf8o84Qn/XawenWMxotHkSr1Sf4LT7/h/i+2msbn3kt5
7soi45DzOjQ+S2C2vexH43M0bPH0W8hGe6rv76Uq6w1Fr2W4vv9nTtvWNN65
wmGeWQ+qu9B4FwXbLa7Sm+lC491BGDf3wd/tNN6ZRvFc+rPTneykNN5NhBvv
Cy8YKX8kHM8ajPKnw6fsd6ElKX9xlMp4Khm3HPv7FxPwCFN/RMBe7AUY9fc+
GIuR2NpvNF7fhm/9qX+SoKD8X+Gs4gaPWz/oeQtfgeezuFWKjT6NF7vhDdkx
3Xptpv64Bfs6zXqVfpj64zOMwbvDuELqb4No1EsYrun9knIHHJX7LTyC3geZ
XIdHCcvr4TTe8dEq74fkTjEYz0bufiGh80xxPjxIOC6j9y/Sj/Ay4fVvMI1v
urEq41fZCHjWh7Whi6xpfAuCl+Pp9lLQ+PAO3p51U3dzLfWzThzPyc8KfxHl
HRan8vybBMCvo7k/2uGUd3OcyvscRfuVPPf3WsE++700fwyF2euPVZTfD57I
HgjKnwQvvrx9tRadN2dchBWv1muvuU7zh50M82G5jsH2DJo/ZsPsdV46jc8J
sHA6UppN4/M52Cl6TtT7LBqfnwufHyG8wKB6rl2FfIVH/HTp+xRZ8MjI5efb
0/sB0VPYyavxaSm9vxK3XI1+bQhY6pxG9TsN25Yo8uSbKF8FLJw+eJ6ifOrx
WK+yB5Dy9YMXX492UTyi+eFE/P/Wf1S/cvizj7K6Yw7Nb01wbpPwwo7y9lnD
c8JpdTq9j1B4wKtsDLbkXaN6NcKTNLb9ZyGn+22+FvtfrRdhtvlKp/8DT8k3
6Q==
        "]]}},
     Annotation[#, {{Callout}, Charting`Private`Tag$42388, {1}}]& ], 
    TagBox[{
      {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6], LineBox[CompressedData["
1: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
YvAfqvJEcw==
        "]]}},
     Annotation[#, {{Callout}, Charting`Private`Tag$42388, {
       2}}]& ]}, {}, {{{}, {
      {GrayLevel[0.4], AbsoluteThickness[
       0.5], {LineBox[{
         Scaled[{0.02, 0}, {3.6936864*^9, 1.0464348042882072`}], 
          Offset[{3, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.0464348042882072`}]], 
          Offset[{7, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]], 
          Offset[{12, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]]}], 
        LineBox[{
         Scaled[{0.02, 0}, {3.6936864*^9, 1.1217839498501303`}], 
          Offset[{3, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.1217839498501303`}]], 
          Offset[{7, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406`}]], 
          Offset[{12, 0}, 
           Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406`}]]}]}, {
        InsetBox["\<\"Without dividends\"\>", Offset[{15, 0}, 
         Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]], 
         ImageScaled[{0, 0.5}]], 
        InsetBox["\<\"With dividends\"\>", Offset[{15, 0}, 
         Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406}]], 
         ImageScaled[{0, 0.5}]]}, {}, {}}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6291456*^9, 0.7146325398697294},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.6290592*^9, 
        FormBox["\"2015\"", TraditionalForm], {0.0125, 0.}}, {3.6605952*^9, 
        FormBox["\"2016\"", TraditionalForm], {0.0125, 0.}}, {3.6922176*^9, 
        FormBox["\"2017\"", TraditionalForm], {0.0125, 0.}}, {3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6368352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6446976*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6526464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6684576*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.67632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6842688*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}, {{3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6368352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6446976*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6526464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6684576*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.67632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6842688*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 114}, {All, All}},
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Historical IBM Returns\"", TraditionalForm],
  PlotRange->{{3.6291456*^9, 3.6936864*^9}, {0.7345425081027175, 
   1.132741872762479}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.693673297185791*^9, 3.6937437029158716`*^9, 
  3.693743801351502*^9},ExpressionUUID->"fb28e2f4-7963-4e41-8de5-\
e5bfb712eacf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["current", "Section",
 CellChangeTimes->{{3.6936760724993663`*^9, 
  3.6936760732984123`*^9}},ExpressionUUID->"c5acd567-3a05-4ea0-a167-\
9859fc49a4a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGcurrent", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<outer noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
     RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
            ",", 
            RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}], ",", 
     RowBox[{"\"\<overrides\>\"", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"\"\<remove quotation marks\>\"", "\[Rule]", "True"}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "[", 
    RowBox[{"ticker_", ",", "field_String", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "raw", ",", "exp", ",", "link", ",", "ticks", ",", "trimmed", ",", 
       "overrides"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"link", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Install", "[", 
          RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
          "]"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
        RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ticks", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "ticker", "]"}], ",", "ticker", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{"ticker", ",", "\"\< & \>\""}], "]"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], "||", 
         RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<ticks: \>\"", ",", "ticks"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"overrides", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], "]"}], ">",
           "0"}], ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"Keys", "[", 
               RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], "]"}], 
              ",", 
              RowBox[{"Values", "[", 
               RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], 
               "]"}]}], "]"}], ",", "\"\< & \>\""}], "]"}], "]"}], ",", 
         "\"\<\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<overrides: \>\"", ",", "overrides", ",", " ", 
          "\"\<. (head: \>\"", ",", 
          RowBox[{"Head", "[", "overrides", "]"}], ",", "\"\<)\>\""}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"raw", "=", 
       RowBox[{"msBBGcurrentLink", "[", 
        RowBox[{"ticks", ",", "field", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "1", ",", 
           "0"}], "]"}], ",", "overrides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<raw Head: \>\"", ",", 
          RowBox[{"Head", "[", "raw", "]"}], ",", "\"\<. raw: \>\"", ",", 
          "raw"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
          "LinkObject"}], ",", "False", ",", 
        RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}], 
      " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "raw", "]"}], "===", "msBBGcurrentLink"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"msBBGcurrent", "::", "linkDead"}], "]"}], ";", "Null"}], 
        ",", 
        RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"raw", ",", "\"\<EXCEPTION\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"trimmed", "=", 
            RowBox[{"StringTrim", "[", "raw", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<trimmed: \>\"", ",", "trimmed"}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"exp", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], ",", 
              RowBox[{"ToExpression", "[", "trimmed", "]"}], ",", "trimmed"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "exp", "]"}], "===", "String"}], "&&", 
              RowBox[{
              "OptionValue", "[", "\"\<remove quotation marks\>\"", "]"}]}], 
             ",", 
             RowBox[{"trimmed", "=", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"exp", ",", 
                RowBox[{"\"\<\\\"\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}]}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "exp", "]"}], "===", "String"}], ",", 
             "trimmed", ",", "exp"}], "]"}]}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"else", ",", " ", 
            RowBox[{"had", " ", "exception"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", "raw"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "::", "usage"}], " ", "=", " ", 
   "\"\<msBBGcurrent[Bloomberg ticker_String OR \
_List,field_String,OptionsPattern[]]. Connects to Bloomberg and downloads a \
single field's data for one or more securities. Fields that return multiple \
lines (like dividend history or current holders) will be delivered as Lists \
of Associations. The user may wish to wrap each of these in a Dataset. \
Strings are by default delivered without surrounding quotation markets, but \
set \\\"remove quotation marks\\\"\[Rule]False if you prefer otherwise.\n\nIf \
you plan on running msGetBB[] many times in close succession, run \
msBBGmakeLink[] first and save the resulting LinkObject to a variable. You \
can then pass that LinkObject to msGetBB[] with the \\\"LinkObject\\\"\[Rule] \
option, and Uninstall[] it when you are done. If you want to check multiple \
securities at once, pass them all to the function as a list (e.g. \
msGetBBG[{\\\"AAPL US Equity\\\",\\\"IBM US Equity\\\"},\\\"DVD_EX_DT\\\"]). \
For long lists this is about 20x faster than calling the function repeatedly. \
If used in this manner, the function may return the answers out of order, but \
will attach the security name to each datum for identification.\n\nYou can \
pass overrides to the function with \\\"overrides\\\"\[Rule]<|\\\"field id \
1\\\"\[Rule]\\\"value 1\\\", \\\"field id 2\\\"\[Rule]\\\"value two\\\", \
\\\"field id 3\\\"\[Rule]\\\"field three\\\"|>}. Check the FLDS command for a \
security on the Bloomberg terminal to see which overrides are allowed.  You \
can include an arbitrary number of overrides.\n\nCan set the \\\"path to \
executable\\\" variable if the default is for some reason not what you want.\n\
\\\"noisy\\\"\[Rule]True will return debugging information from both the WSTP \
conduit and the Mathematica interface that calls it. \\\"outer noisy\\\"\
\[Rule]True will debugging information from only the Mathematica part.\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "::", "linkDead"}], "=", 
   "\"\<Could not connect to link. Perhaps it died before Mathematica could \
pass data to it.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.693676204473915*^9, 3.6936762110532913`*^9}, {
   3.6936762612911644`*^9, 3.693676290188817*^9}, {3.6937387307064776`*^9, 
   3.6937387559189196`*^9}, 3.693739605222497*^9, 3.693743243665604*^9, {
   3.69730051617163*^9, 
   3.6973005388509274`*^9}},ExpressionUUID->"9d245f83-5973-431b-a2e4-\
d11123bfcd82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<C US Equity\>\"", ",", "\"\<PX_LAST\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6673006850173836`*^9, 3.6673006903826904`*^9}, 
   3.6936763904855537`*^9, 
   3.693738757099987*^9},ExpressionUUID->"3e8cd062-646a-4411-862e-\
8af37d1806b9"],

Cell[BoxData["59.8286`"], "Output",
 CellChangeTimes->{3.6936765411901736`*^9, 
  3.6973005652064347`*^9},ExpressionUUID->"3e597f5e-d821-4a04-af32-\
f05ec53f111b"]
}, Open  ]],

Cell["\<\
Get multiple datapoints -- if you ask for a lot of names, Bloomberg may not \
return the answers in order, so the WSTP interface tags each answer with the \
corresponding security name.\
\>", "Text",
 CellChangeTimes->{{3.667300694501926*^9, 3.6673006983081436`*^9}, {
   3.667300870831012*^9, 3.6673009349616795`*^9}, 
   3.6936763926606784`*^9},ExpressionUUID->"cbf62774-dc6e-4adb-876a-\
3682627d02a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<AAPL US Equity\>\""}], "}"}], 
   ",", "\"\<PX_LAST\>\"", ",", 
   RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "bbgLink"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.455290478791*^9, 3.455290479541*^9}, {
   3.45529072813475*^9, 3.45529074138475*^9}, {3.455290797431625*^9, 
   3.455290806087875*^9}, {3.455290906791*^9, 3.455290964650375*^9}, {
   3.455291070244125*^9, 3.45529108969725*^9}, {3.455292108587875*^9, 
   3.455292116525375*^9}, {3.455292361244125*^9, 3.455292364556625*^9}, {
   3.632871411615878*^9, 3.6328714350398493`*^9}, 3.6663626694902067`*^9, {
   3.6673006311543026`*^9, 3.6673006615880437`*^9}, 3.693676391585617*^9, {
   3.693676545038394*^9, 3.6936765522478065`*^9}, 3.6937387585950727`*^9, 
   3.693743780455307*^9},ExpressionUUID->"4f1d3ba3-be2e-4fd8-b2ad-\
e032b83e22fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"IBM US Equity\"\>", ",", "179.93`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAPL US Equity\"\>", ",", "136.995`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.693743804304671*^9, 
  3.697300559513109*^9},ExpressionUUID->"61ebe667-cda2-4511-b6e4-\
e3d5082071c7"]
}, Open  ]],

Cell["Works with text as well as numbers.", "Text",
 CellChangeTimes->{{3.6673009509855957`*^9, 
  3.6673009609031634`*^9}},ExpressionUUID->"e6d8819c-a82f-4858-9d89-\
746ff15c90ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<General_Counsel\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.455291454837875*^9, 3.455291464025375*^9}, {
   3.6328714470398912`*^9, 3.6328714490087557`*^9}, {3.6663626695032077`*^9, 
   3.6663626695032077`*^9}, {3.667300963579316*^9, 3.667300970259699*^9}, 
   3.6673010066747813`*^9, 3.693676394239769*^9, 
   3.693738781535385*^9},ExpressionUUID->"6e993db6-9ef9-4a5a-a241-\
40173cf025c1"],

Cell[BoxData["\<\"MICHELLE H BROWDY\"\>"], "Output",
 CellChangeTimes->{{3.45529144569725*^9, 3.455291465025375*^9}, 
   3.455291502275375*^9, 3.45529159969725*^9, 3.455291718041*^9, 
   3.455292200181625*^9, 3.4552923547285*^9, 3.455465655931625*^9, 
   3.602961309094805*^9, 3.6328714505863905`*^9, 3.6330889626777744`*^9, 
   3.633089350107164*^9, 3.667301007211812*^9, 3.693676567887701*^9, 
   3.69730055130964*^9},ExpressionUUID->"01d78643-3119-4f61-9599-\
bc04e1f1268f"]
}, Open  ]],

Cell["\<\
Works with arrays of data (which are often most conveniently stored as \
Datasets), and handles missing fields elegantly.\
\>", "Text",
 CellChangeTimes->{{3.6673010129011374`*^9, 3.667301045172983*^9}, {
  3.667301149408945*^9, 
  3.667301163946777*^9}},ExpressionUUID->"4f58a54d-d468-4ac4-ab59-\
0750096bfff9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"msBBGcurrent", "[", 
   RowBox[{"\"\<CAR US Equity\>\"", ",", "\"\<DVD_HIST_ALL\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66730107588374*^9, 3.6673010834771743`*^9}, {
   3.6673011293868*^9, 3.66730114057044*^9}, 3.6936763967869143`*^9, 
   3.6937387993084016`*^9},ExpressionUUID->"f5bb2747-18c8-4999-9509-\
fad1ea124456"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 21, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Declared Date", "Ex-Date", "Record Date", "Payable Date", 
            "Dividend Amount", "Dividend Frequency", "Dividend Type"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 21], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Declared Date"} -> 1, {All, "Ex-Date"} -> 
           1, {All, "Record Date"} -> 1, {All, "Payable Date"} -> 
           1, {All, "Dividend Amount"} -> 1, {All, "Dividend Frequency"} -> 
           1, {All, "Dividend Type"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Declared Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], "Ex-Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Record Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Payable Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Dividend Amount" -> TypeSystem`PackageScope`AtomShape[60], 
              "Dividend Frequency" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Dividend Type" -> TypeSystem`PackageScope`AtomShape[172.8]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[864029916], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Declared Date", "Ex-Date", "Record Date", "Payable Date", 
            "Dividend Amount", "Dividend Frequency", "Dividend Type"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 21], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[864029916]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Declared Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Declared Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Declared Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Declared Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Ex-Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Ex-Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Ex-Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Ex-Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Record Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Record Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Record Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Record Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Payable Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Payable Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Payable Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Payable Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Amount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Amount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Dividend Amount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Dividend Amount"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Frequency\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Dividend Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Dividend Frequency"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Type\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Type\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1761469167][{All, "Dividend Type"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[All, "Dividend Type"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-08-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-09-05", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-09-05", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-08-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-08-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-07-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Poison Pill Rights", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[5, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[5, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation["Suspend", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[5, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Discontinued", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[5, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-02-09", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-02-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-02-27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-03-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-11-17", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-11-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-12-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-07-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-08-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-08-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-09-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-04-26", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-05-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-06-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-01-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-28", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-03-15", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-10-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-01-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-01-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-10-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-11-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-11-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-12-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-07-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-08-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-08-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-09-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-04-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-05-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-05-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-06-15", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-02-11", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-02-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-02-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-03-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1996-09-25", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1995-06-07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-07-03", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-06-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-06-30", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1993-04-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-05-03", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-04-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-04-30", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1992-06-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-07-06", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-06-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-07-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1991-02-04", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-03-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-02-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-02-28", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 (-20), {1, 21 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 21 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 21 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 20, {1, 21 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 (-20), {1, 21 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 21 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 21 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 20, {1, 21 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1761469167]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1761469167][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {874., {267., 274.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.667301143300596*^9, 
  3.6936765724539623`*^9},ExpressionUUID->"237138c3-918c-41b3-bd46-\
cf9c7e5119ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<AAPL US Equity\>\"", ",", "\"\<BETA_RAW_OVERRIDABLE\>\"", ",", 
   RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
   RowBox[{"\"\<overrides\>\"", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
      "\"\<BETA_OVERRIDE_REL_INDEX\>\"", "\[Rule]", "\"\<NDX Index\>\""}], 
      ",", " ", 
      RowBox[{"\"\<BETA_OVERRIDE_START_DT\>\"", "\[Rule]", 
       RowBox[{"bbgifyDate", "[", 
        RowBox[{"{", 
         RowBox[{"2015", ",", "2", ",", "3"}], "}"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<BETA_OVERRIDE_END_DT\>\"", "\[Rule]", 
       RowBox[{"bbgifyDate", "[", 
        RowBox[{"{", 
         RowBox[{"2015", ",", "12", ",", "3"}], "}"}], "]"}]}]}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6936774554474664`*^9, 3.6936774655390434`*^9}, {
  3.6936779704449224`*^9, 3.693677981607561*^9}, {3.693678085131482*^9, 
  3.693678086087537*^9}, {3.693743761491222*^9, 
  3.693743763138316*^9}},ExpressionUUID->"ac29958d-abb4-4c0a-ab24-\
7407de6a2036"],

Cell[BoxData["1.206323`"], "Output",
 CellChangeTimes->{3.6936780871525974`*^9, 3.6937524077277584`*^9, 
  3.6938405383614244`*^9},ExpressionUUID->"e69a8a4d-d0ef-4b5d-bb37-\
859b08725906"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["persistant use of a single link", "Section",
 CellChangeTimes->{{3.697304441795163*^9, 
  3.6973044471824713`*^9}},ExpressionUUID->"e4b603de-8809-43a8-9a73-\
6e98752b8cfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linkUnified1", "=", 
   RowBox[{"Install", "[", 
    RowBox[{"LinkConnect", "[", "\"\<122\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"(*", " ", "debugging", " ", "*)"}]}]], "Input",ExpressionUUID->\
"07a8eec4-70f3-4e83-865a-fb5cd372dfa6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"linkUnified1", "=", 
   RowBox[{"Install", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], ",", 
          RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
        "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "debugging"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6973044988944287`*^9, 3.6973045007825365`*^9}, {
  3.6973045725846434`*^9, 3.6973045735947013`*^9}, {3.6973053865552*^9, 
  3.6973053899543943`*^9}},ExpressionUUID->"9827f794-0867-461f-894c-\
ac1cad18fbd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGhistory", "[", 
  RowBox[{"\"\<AAPL US Equity\>\"", ",", "\"\<Px_Last\>\"", ",", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2016", ",", "1", ",", "1"}], "}"}], "]"}], ",", "\"\<\>\"", 
   ",", "\"\<Day\>\"", ",", 
   RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "linkUnified1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697296851237008*^9, 3.6972968549802217`*^9}, {
   3.6972969829975443`*^9, 3.69729701981665*^9}, 
   3.6973045491633043`*^9},ExpressionUUID->"5ed3464a-638f-4615-9e7e-\
15b237abf107"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkXlQ1AUcxWkdV4tTluUUxDAdCBJixkGB5vuFOAItENn97YW7KrstIQu5
HILIgsZK3HmABBFQDSIsCpQGBBIyQ0IogkMqDEERx5cwRYzhjP548/55f3ze
ezuPqQ5HsvT09Lw29L+fbeYUZPoTaoKOW8h5QmDXjltWBxB2RjsdCC9jwOtR
+MpYIOHlfZyc5L0M3F7tNN0SRHilRKdY/pOBstxI5e5gwsTQ3OZBDgOu4det
Iw4SCkeqok3u8OH17bNrmkOEttbbjNwMGSiw7vdu/ZAwYVzzWXMXHzSa6dbn
HxE6vLz2G3eXAH6YWIkxDSUUeKuvcH0EUJLRlBJ8mHDdr3srBAnhrp2iRRVG
KLNUDBlXCIH/5iHPvCOES+QwNbIshGLJELcrnDC0L+nBfLEIdhSLHSZ5hAYf
nHLe0imC8Dcys3cyhCyXSNZClxDm/xh35wkIpf6u7cYMA0OtB4wThIQFxsH1
L3L5EPXrPj+diFBrxt8xN8sD3xEXXb+Y0I6zmHmijA/3dv0SZxhBaGPp0Mgz
EkDzQFG871HCPT/222lVDPyTLqs9ISUMeeTY+/YUA4OK+95fyQj9oioa9jox
sHbQg9V5jPDOvQX2mR4+FF4dZI8fJxxOinIzm+bDQ1uu3CpyI99b6MXmMiCo
CFn0lBOuFeV0BDcwkCd2nUhQEOqpRqv8bzDgnOZrWvvxRn//PpMLXCGYVIR+
2qsk1A+bWckYFULl0iaXzZ8QvjIb8LC3FEFy2E1rx2jC9CdNlyBEBC2cLwID
ThK+K3XJ7GgRQo2+RX9qDGGeRUFR0pwQRllFOeUqwtvy39dFTwXQ6dZS+TiW
UJ225G5bJYa/jz6htThCsyyriQBXMWgWnOPtThH+FPdN5EkvMXT87CDgqQnN
H2TVz9eJITCfG3s6nhDnmnx65RJIvXh9rCmBUF7H0d/mJwGbdfXFmUTCiD3P
tecUYlhX7k/SP73xh//UpWdKERQaVN56P5kwzarNML5aCErdZidlCqFP+2t1
Jt0iqLlVOqw9Q/jXfqfH2hkRXF0cmm5LJXyr1f1hMk8EfR5GTmNnCZ/OPfMq
lInh5o2puzYawuBF9nC9vQRW81+Vh6QTfueuVrejBPJj1utiMwizrYpfGLAk
cP98rfm1c4SqHh32tEmAV3Kkofc84faUoZfTcxLInvy6emsm4bfOxdaJrAhw
LLUffU+7wb/a1OgpigDDkC8DpRc29klsDPheKoVyz2aDkizC5ZqBUs6YFBJ3
D25q/5wwIOHfsnfMZZDhN5s2mU3Yzb7M0e2QwX/zpsit
                 "]]}},
              Annotation[#, "Charting`Private`Tag$64508#1"]& ]}}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.6608544*^9, 91.7020338392632},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3660854400, 3697228800}, {91.7020338392632, 
            136.98999957186447`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"04 Jan 2016\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"28 Feb 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["291",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[{{{{}, {}, 
             TagBox[{
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkXlQ1AUcxWkdV4tTluUUxDAdCBJixkGB5vuFOAItENn97YW7KrstIQu5
HILIgsZK3HmABBFQDSIsCpQGBBIyQ0IogkMqDEERx5cwRYzhjP548/55f3ze
ezuPqQ5HsvT09Lw29L+fbeYUZPoTaoKOW8h5QmDXjltWBxB2RjsdCC9jwOtR
+MpYIOHlfZyc5L0M3F7tNN0SRHilRKdY/pOBstxI5e5gwsTQ3OZBDgOu4det
Iw4SCkeqok3u8OH17bNrmkOEttbbjNwMGSiw7vdu/ZAwYVzzWXMXHzSa6dbn
HxE6vLz2G3eXAH6YWIkxDSUUeKuvcH0EUJLRlBJ8mHDdr3srBAnhrp2iRRVG
KLNUDBlXCIH/5iHPvCOES+QwNbIshGLJELcrnDC0L+nBfLEIdhSLHSZ5hAYf
nHLe0imC8Dcys3cyhCyXSNZClxDm/xh35wkIpf6u7cYMA0OtB4wThIQFxsH1
L3L5EPXrPj+diFBrxt8xN8sD3xEXXb+Y0I6zmHmijA/3dv0SZxhBaGPp0Mgz
EkDzQFG871HCPT/222lVDPyTLqs9ISUMeeTY+/YUA4OK+95fyQj9oioa9jox
sHbQg9V5jPDOvQX2mR4+FF4dZI8fJxxOinIzm+bDQ1uu3CpyI99b6MXmMiCo
CFn0lBOuFeV0BDcwkCd2nUhQEOqpRqv8bzDgnOZrWvvxRn//PpMLXCGYVIR+
2qsk1A+bWckYFULl0iaXzZ8QvjIb8LC3FEFy2E1rx2jC9CdNlyBEBC2cLwID
ThK+K3XJ7GgRQo2+RX9qDGGeRUFR0pwQRllFOeUqwtvy39dFTwXQ6dZS+TiW
UJ225G5bJYa/jz6htThCsyyriQBXMWgWnOPtThH+FPdN5EkvMXT87CDgqQnN
H2TVz9eJITCfG3s6nhDnmnx65RJIvXh9rCmBUF7H0d/mJwGbdfXFmUTCiD3P
tecUYlhX7k/SP73xh//UpWdKERQaVN56P5kwzarNML5aCErdZidlCqFP+2t1
Jt0iqLlVOqw9Q/jXfqfH2hkRXF0cmm5LJXyr1f1hMk8EfR5GTmNnCZ/OPfMq
lInh5o2puzYawuBF9nC9vQRW81+Vh6QTfueuVrejBPJj1utiMwizrYpfGLAk
cP98rfm1c4SqHh32tEmAV3Kkofc84faUoZfTcxLInvy6emsm4bfOxdaJrAhw
LLUffU+7wb/a1OgpigDDkC8DpRc29klsDPheKoVyz2aDkizC5ZqBUs6YFBJ3
D25q/5wwIOHfsnfMZZDhN5s2mU3Yzb7M0e2QwX/zpsit
                 "]]}},
              Annotation[#, "Charting`Private`Tag$64508#1"]& ]}}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.6608544*^9, 91.7020338392632},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{{}, {}}, {{}, {}}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3660854400, 3697228800}, {91.7020338392632, 
            136.98999957186447`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"04 Jan 2016\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"28 Feb 2017\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["291",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" properties\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["86400",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[Automatic, {CompressedData["
1:eJxFlVtoXUUUhk8iKlaEoq0Vq6mxqFFrCRYviNUppSSKqK00e/ZcTvdpjNRr
o/USY7GWUPWh0vrgQ4sKoYIXbEBRCCWipmAEa/FFfPAavCEppVVjROtl7/1/
5+wNyTBrZtb61/r/tU7nxs3rBtprtVpb/rc0/3dX8fU5s3LeF/sG96fm00P5
t4z1PCv7SmvWjXfsmBll/481l4Zdk7PWmunhBWM909YUx2t7rSmvX2bNwdmu
sOtKa1YU31nWPFFcc6kpnnV9ZU2xhP+a9sT8kV+f3MG63poja3OPi61Zkrsd
fzkxJc6zrdaLibs9MQ8WgD5I5O/9RPbnE+G/D/u2RHi7rOktLjxj9W4+ONvB
f60VvjeJdwr3usnrOs6XUY/O1NSKr5s1S8GTKs5jqe6tYt+TKt+bubc7Fd7R
1BRpdlzkTH46vOBJp7ptcbo/7BR/mPMxJ7zPcn6PE65bnOo248wrg3mAfq/8
b2Td5oVjyut8ixef73nV4UIPf164Vnn5fZHz9kBdWB/14ucb8B0A18dVHiWe
e53yW+Pg0ZkyrYet7O/C02Z42pTo3SeJ4u/k/LZEfpcn6Ctp6aes5wXo54U+
6tonPEO835Ao733oYyf+Dictve3dk3+Po5Of4f3cFNypKbbz5uiDl6zeP4CO
h9HRa+jjQ/Qygd9fmvnals5LP5F+6qVf+rn3OTr8KBGOvxKdf1/ps/SbUo92
8h9IZN/DvZ+o659Vn5T4pqnvCfK/nH67odmX1OEa+uRt8noLfLOcz1VzofTz
JXV7o8qz9JfPhbLuE6nsC5k7Z6D3Eaf4HU7xHnL0kWvprNwvQr8rvPqu5hX3
b/R2Orqse/FhvXi61aNDLx4Tj2686nS1V35tXvr8gb6aQK/vOMV7Ch0/Da4x
1qNO+R1x8r+IPmo0+4L5F7h3wun8eDNeUJ0OBOEcCLLfGdBFUP6vBtXtisDc
CqrnmiC/WwN14N3qoDidQfhNZS91MRRUzxHsJ0XmdoS/iC6i4m3ivD+qrvXI
fIvyszoyp6N0eHdU3N34+zEw1wP9E8T3xiB9fuu5B1+PsL+K+bQX/g/C7zjz
6Vf4X8xcux8eplxr/qk+vB9BJ0e98vmN/eGmvyYv+PsaPkeZpxs88wI99VT+
1f/M21MrXso4dwTp4FC1lnF+px7/wktX1Lvrq7qWuM6M8Bml39tZu+FpeWz5
K/Gdxv22KJyXRH5PIvMA+xQ8HWP9jHiT7Gt1frej8jte2UueTq6DH50M1ZXf
1jr519FPXfroq+v9OZnynZ/xO5QJ703YB9lvz8TDcxn8YX89U/7fZfJ/LFM+
M6xzGfO7IX0sbRCvIdwLG9LX+Q3xtaRh/geZSPLL
    "], CompressedData["
1:eJxdl0GKnjkMRLshq7lFyAVsS7KkIwSymiPMYiCrLJL7k/o/k/YjBEIXn7tt
lcvP8uf/fvz7//vb29vPT/rv2/efv/5SX96hvv6jH2zvUeE+xodsH3XlHCsX
5Jy2IfVpQHo0B4cHB29bHJyzMO+s4Zh3zRj4upZtfrVlmGj5aEy09i4OzggO
Lp8c3KuwKhuTbthK1msvAem+OThsYV7bk25YJeu13qzXR0wM9mmJeX2pRMjY
rNf3y+Yr0xcm8lp0I0ax3pjJemNt7n6Yc/fDjW5oFaw3Mllv1ObuRwd3fw+j
G9oG1rufj1d6Mgw7gmHQZ4Zh92D5u4vl50iGIedmGHI5zckYLD+jWX6+FgGZ
m2GoOVlvzWa92hPuflly98uDbpRWycE1WK/KYxjqMfJD9th0o22x3nPWIZth
6CiGoV/+QPZCvTnGRBgkG2HIMQthyAOVK8MmB4sNHPxsPmQPzlsJc/Lw6cq1
UH5OG8XB1ghDTi+YkzoZg4OLJMzZJGEeEEIWzVlGEiplJGGuIAlTRxDZkGya
s5pgTBsEY8pHZCP1M7Ih2TTHNkmYliRhWpGEaT3oxvObkIskTHGCYXAnCdNj
0A1PkjC9SML0Jgl1IknCjDnpRhjBmOf+uTIIxoxNMGbkZBiiCUYtgWBMXXUM
gy4khuFcdFdukjB3koRKL0mYYirdOJfklYskzDSSMLVi7r7moRuZJKEUSSh2
k4R5buMrp9GNMpIwH5ZBBkmYugcYhlKUMG81waizTTBmT4JR9wvBmP0s6spN
MEoSjNlJMGYXwZjdDnNqLIJRkmAUfwlGWUUw1oiAORpJMEoSjDWaYKw5CEbd
IQFzdCAJxjotEiTBKJQRjDVPKv/INUlCSZKw1iIJ6zRfV26SUFgkCeuBCCVJ
WLrn6cbp4640krDMSUJJkrAskm5YkYRKKEn4+qsIQ52G8UrBHfO6E4y6jQnG
8k0wlnoThsEVcMyrLWL5MQnGikUwVhjBKNk0JzbBWJEEY0URjBVNMEo2zdmL
YCw1sixf7SazoWmZDbVuNEf/WL56CJafg2CsnATjyyiak05O1mnbr9zkZGWS
k+qtJ82pQU6WzgbLr0VOVhk5Wed9cOUmJ0vrYPlV5GT1AceHXARjtRGM1U4w
VgfBKHYtutFFMAoiBKPuZoKxzyPmymVwQ5QgGPv86pWbYOyRBKPwbHBDISMY
e06CUaeVYFTDRDD2WeOVSRL2LJKwxSfsvnxyuKGjTvTpBiX6dGkQfa+2leWv
JgklScJWw4jtbpskobppvp37vA4hiT71MURfW/Gx3D6JvvZF9EkSfe1G9PV5
hl6ZRJ8uNqKvz+Zf2USfmku+nfu8aK90oq8jiD5Joq9j8+3cejyxfFGE5e9J
9PV5Ol+5+Hbuk9Ark6zr5+aHfJ3vK9Xls95cD+t+A3rYtFg=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    MetaInformation -> {
      "name" -> "AAPL US Equity: Px_Last", "type" -> "value"}, 
     ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.697304766305724*^9, 3.697304773527137*^9}, {
  3.6973048210238533`*^9, 3.697304839529912*^9}, {3.6973053996099467`*^9, 
  3.697305400754012*^9}},ExpressionUUID->"f35dcc24-15c3-470b-9e06-\
fd7bf296a7ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Name\>\"", ",", 
   RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "linkUnified1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697297029725217*^9, 3.6972970469111996`*^9}, 
   3.697304550117358*^9, {3.697304830391389*^9, 
   3.6973048306574044`*^9}},ExpressionUUID->"b1e6c6ea-e73d-4b7e-bbdf-\
7da5473ae444"],

Cell[BoxData["\<\"INTL BUSINESS MACHINES CORP\"\>"], "Output",
 CellChangeTimes->{{3.6973047970724835`*^9, 3.6973048337545815`*^9}, {
  3.6973054030501437`*^9, 
  3.697305404409221*^9}},ExpressionUUID->"7b615975-bf47-4494-ba8b-\
7c6f24a8bd86"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"Unset", "::", "norep"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uninstall", "[", "linkUnified1", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Remove", "[", "linkUnified1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"On", "[", 
   RowBox[{"Unset", "::", "norep"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6973045596459036`*^9, 
  3.6973045604299483`*^9}},ExpressionUUID->"913e1a6a-3a5a-4e53-9812-\
7c339563ed50"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1085, 806},
WindowMargins->{{75, Automatic}, {Automatic, 15}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (February 5, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 290, 5, 101, "Title"],
Cell[873, 29, 158, 3, 30, "Input"],
Cell[1034, 34, 1882, 31, 239, "Text"],
Cell[2919, 67, 1732, 40, 236, "Text"],
Cell[CellGroupData[{
Cell[4676, 111, 156, 3, 70, "Section"],
Cell[4835, 116, 1613, 41, 180, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[6485, 162, 199, 4, 56, "Section"],
Cell[CellGroupData[{
Cell[6709, 170, 156, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[6890, 177, 708, 17, 52, "Input"],
Cell[7601, 196, 13013, 274, 73, "Output"]
}, Open  ]],
Cell[20629, 473, 284, 7, 30, "Input"],
Cell[20916, 482, 1742, 48, 164, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22695, 535, 159, 3, 49, "Subsection"],
Cell[22857, 540, 1728, 37, 220, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24634, 583, 153, 3, 70, "Section"],
Cell[24790, 588, 15392, 348, 1073, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[40207, 940, 2483, 41, 50, "Input"],
Cell[42693, 983, 17786, 405, 267, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60528, 1394, 258, 4, 56, "Section"],
Cell[60789, 1400, 14717, 316, 1232, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[75531, 1720, 1872, 32, 30, "Input"],
Cell[77406, 1754, 9536, 200, 208, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[86991, 1960, 154, 3, 56, "Section"],
Cell[87148, 1965, 12547, 274, 1153, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[99720, 2243, 498, 10, 30, "Input"],
Cell[100221, 2255, 18068, 402, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118326, 2662, 2370, 55, 126, "Input"],
Cell[120699, 2719, 24220, 472, 322, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[144968, 3197, 156, 3, 56, "Section"],
Cell[145127, 3202, 9844, 217, 910, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[154996, 3423, 301, 6, 30, "Input"],
Cell[155300, 3431, 163, 3, 30, "Output"]
}, Open  ]],
Cell[155478, 3437, 414, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[155917, 3449, 916, 16, 30, "Input"],
Cell[156836, 3467, 352, 10, 30, "Output"]
}, Open  ]],
Cell[157203, 3480, 181, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[157409, 3487, 486, 9, 30, "Input"],
Cell[157898, 3498, 477, 7, 30, "Output"]
}, Open  ]],
Cell[158390, 3508, 322, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[158737, 3519, 388, 8, 30, "Input"],
Cell[159128, 3529, 94816, 1869, 558, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253981, 5403, 1044, 23, 69, "Input"],
Cell[255028, 5428, 188, 3, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[255265, 5437, 178, 3, 56, "Section"],
Cell[255446, 5442, 268, 6, 30, "Input"],
Cell[255717, 5450, 763, 18, 52, "Input"],
Cell[CellGroupData[{
Cell[256505, 5472, 551, 12, 30, "Input"],
Cell[257059, 5486, 15641, 359, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272737, 5850, 393, 8, 30, "Input"],
Cell[273133, 5860, 243, 4, 30, "Output"]
}, Open  ]],
Cell[273391, 5867, 530, 14, 88, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)

