(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    280854,       5892]
NotebookOptionsPosition[    273928,       5760]
NotebookOutlinePosition[    274358,       5778]
CellTagsIndexPosition[    274315,       5775]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bloomberg Data to Mathematica", "Title",
 CellChangeTimes->{{3.4348218733245*^9, 3.434821880183875*^9}, {
  3.44951690785*^9, 3.449516919975*^9}, {3.4542526066628895`*^9, 
  3.4542526102875414`*^9}, {3.454671279093625*^9, 3.4546712805155*^9}, {
  3.6328723944795456`*^9, 
  3.632872394854727*^9}},ExpressionUUID->"f7b3f1db-4cc6-49f7-ac71-\
a248d3a512c4"],

Cell["August 15, 2018", "Subsubtitle",
 CellChangeTimes->{{3.4348218841995*^9, 3.434821885262*^9}, {
   3.45466980885925*^9, 3.454669810093625*^9}, {3.45960533434375*^9, 
   3.459605336546875*^9}, {3.46385140536852*^9, 3.46385140624352*^9}, {
   3.465744082552105*^9, 3.465744082989582*^9}, {3.50306886475525*^9, 
   3.50306886694275*^9}, {3.548606507408375*^9, 3.548606510252125*^9}, {
   3.6029615119274063`*^9, 3.602961513863517*^9}, {3.632843524427566*^9, 
   3.632843528133463*^9}, {3.6573086878490753`*^9, 3.6573086911982875`*^9}, {
   3.6595722418375053`*^9, 3.659572243281179*^9}, {3.6663509589354014`*^9, 
   3.6663509624376016`*^9}, 3.667243143184947*^9, {3.6699871992833815`*^9, 
   3.669987201156489*^9}, {3.693663510711982*^9, 3.693663515434252*^9}, {
   3.730195741181263*^9, 3.7301957466385756`*^9}, {3.743334583283672*^9, 
   3.7433345851817803`*^9}},ExpressionUUID->"684d0070-b082-4307-91e1-\
eb78660cda5b"],

Cell[TextData[{
 "This functions in this notebook and their associated binaries, if properly \
installed, allow you to load data from Bloomberg directly into Mathematica. \
It requires that you have a Bloomberg Professional license, have installed \
the Bloomberg API, and have logged in to Bloomberg Professional on the same \
machine as you\[CloseCurlyQuote]re running these functions on in the last 24 \
hours (and not logged in anywhere else more recently). This interface relies \
on DateObjects, TimeSeries and EventSeries, and will not work with versions \
of Mathematica earlier than 10.0. If you are using an older version of \
Mathematica, install the version of this interface titled \
\[OpenCurlyDoubleQuote]BBGetNF1-bloomberg into mathematica 201206\
\[CloseCurlyDoubleQuote], which has many of the same capabilities and will \
run on much older versions of Mathematica.\n\nTo install, place the enclosed \
binary into a folder (typically under \[OpenCurlyDoubleQuote]C:\\Program \
Files\\Wolfram Research\\\[CloseCurlyDoubleQuote], and by default \
\[OpenCurlyDoubleQuote]C:\\Program Files\\Wolfram Research\\msFunctions\\\
\[CloseCurlyDoubleQuote] though this can be changed with the \
\[OpenCurlyDoubleQuote]path to executable\[CloseCurlyDoubleQuote] option on \
each function.\n\nThis interface consists of five commands:\n\n",
 StyleBox["msBBGhistory:",
  FontWeight->"Bold"],
 " returns historical data from Bloomberg, normally in TemporalData format \
though alternatives are available. Can be used for example to retrieve U.S. \
CPI monthly back to 1969, or the closing price of Apple Inc. daily since \
1978.\n",
 StyleBox["msBBGcurrent:",
  FontWeight->"Bold"],
 " Returns Bloomberg data for a single field for one or more securities. \
Works for both single-number responses (such as current market cap) and \
multi-field responses (such as all registered owners). The FLDS command in \
the Bloomberg terminal can be used to identify what data is available for \
each security and which overrides, if any, are allowed.\n",
 StyleBox["msBBGfieldOnDate:",
  FontWeight->"Bold"],
 " returns Bloomberg data for a single field on a single historical date.\n",
 StyleBox["msBBGintraday",
  FontWeight->"Bold"],
 ": returns intraday trade data (or ask data, or bid data)\n",
 StyleBox["msBBGintradayBars",
  FontWeight->"Bold"],
 ":  returns periodic intraday data (price snapshots every minute, for \
example, aggregating volume from that minute).\n",
 StyleBox["msBBGmakeLink:",
  FontWeight->"Bold"],
 " manually creates re-usable links for the above.\n\nThe source code for \
these functions is available at\n",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"github", ".", "com"}], "/", "MichaelSternNYC"}], "/"}]}],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://github.com/MichaelSternNYC/"], None},
    ButtonNote->"https://github.com/MichaelSternNYC/"], TraditionalForm]],
  ExpressionUUID->"aaf3da8f-ee31-410b-9bba-83de9e0ab282"]
}], "Text",
 CellChangeTimes->{{3.449516680834375*^9, 3.449516759615625*^9}, {
   3.449517050928125*^9, 3.4495171807875*^9}, {3.45121680611825*^9, 
   3.451216810758875*^9}, {3.451226165587*^9, 3.451226216337*^9}, {
   3.4542526240830917`*^9, 3.45425270795004*^9}, 3.45466982904675*^9, {
   3.454669864468625*^9, 3.454670137843625*^9}, {3.454670220812375*^9, 
   3.45467024460925*^9}, {3.45960536375*^9, 3.459605372546875*^9}, {
   3.459605466140625*^9, 3.45960547009375*^9}, {3.463339646437875*^9, 
   3.463339662781625*^9}, 3.463851368790395*^9, {3.465744092957822*^9, 
   3.465744093426548*^9}, {3.4657446581476326`*^9, 3.4657446588819704`*^9}, 
   3.503068715239625*^9, {3.548673433158375*^9, 3.548673448814625*^9}, 
   3.54867356558025*^9, {3.60296120918609*^9, 3.602961250406448*^9}, {
   3.630504117512353*^9, 3.630504117580346*^9}, {3.632843484272464*^9, 
   3.632843512567583*^9}, 3.632872432481097*^9, {3.632872499389725*^9, 
   3.6328725519546843`*^9}, {3.633088347874323*^9, 3.6330884437531657`*^9}, {
   3.633088900363977*^9, 3.6330889395208364`*^9}, {3.6330901457699895`*^9, 
   3.6330901459263444`*^9}, {3.63309058595151*^9, 3.6330906245035267`*^9}, {
   3.633136777425167*^9, 3.6331367906007757`*^9}, {3.6331956806793118`*^9, 
   3.63319568097927*^9}, {3.659567201273368*^9, 3.6595672751080093`*^9}, {
   3.6595720775727863`*^9, 3.659572125647605*^9}, {3.6595722565015697`*^9, 
   3.659572295154903*^9}, 3.6625909213197823`*^9, {3.6663509822967377`*^9, 
   3.666351077400177*^9}, 3.66636203716604*^9, {3.6663622863912945`*^9, 
   3.6663623391453123`*^9}, {3.666362505125806*^9, 3.6663625106461215`*^9}, {
   3.6663625920177755`*^9, 3.6663627148297997`*^9}, {3.666362888597739*^9, 
   3.6663628892587767`*^9}, {3.666363203432747*^9, 3.6663632538356295`*^9}, {
   3.666365320433832*^9, 3.666365321231878*^9}, {3.666365434666366*^9, 
   3.6663654610438747`*^9}, {3.6663696898137465`*^9, 
   3.6663696981752243`*^9}, {3.6663697480790787`*^9, 3.666369866515853*^9}, {
   3.666369979332306*^9, 3.666369987568777*^9}, {3.667243231725011*^9, 
   3.667243236886306*^9}, {3.66724327558552*^9, 3.667243282187897*^9}, {
   3.6699872664582243`*^9, 3.669987302810303*^9}, {3.6936636055534067`*^9, 
   3.6936636259945755`*^9}, 3.6936774872342844`*^9, {3.6937390965824046`*^9, 
   3.693739160177042*^9}, {3.6937439203263073`*^9, 3.6937439223894253`*^9}, {
   3.693743987356141*^9, 3.6937439939235163`*^9}, {3.6938398713702745`*^9, 
   3.6938398731253753`*^9}, {3.702402874524446*^9, 3.702402888298234*^9}, {
   3.7047927581824675`*^9, 3.7047927769775424`*^9}, 3.7047930200144434`*^9, {
   3.730195068934813*^9, 3.7301950690108175`*^9}, {3.743334476327554*^9, 
   3.7433345095584545`*^9}},ExpressionUUID->"96684083-591c-400d-9cf1-\
83e17358c1d4"],

Cell[CellGroupData[{

Cell["interfaces", "Section",
 CellChangeTimes->{{3.6936772604763145`*^9, 
  3.6936772619814005`*^9}},ExpressionUUID->"622cc096-70a7-4bc4-b94d-\
0d8dae2185f9"],

Cell[CellGroupData[{

Cell["utilities", "Subsection",
 CellChangeTimes->{{3.693840636979065*^9, 
  3.6938406396412177`*^9}},ExpressionUUID->"4050c2d1-07e1-4023-ad43-\
4428ea66582a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "[", "date_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dtO", "}"}], ",", 
     RowBox[{
      RowBox[{"dtO", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringQ", "[", "date", "]"}], "&&", 
          RowBox[{
           RowBox[{"StringLength", "[", "date", "]"}], "\[Equal]", "0"}]}], 
         ",", 
         RowBox[{"DateObject", "[", "]"}], ",", 
         RowBox[{
          RowBox[{"Head", "[", "date", "]"}], "===", "DateObject"}], ",", 
         "date", ",", "True", ",", 
         RowBox[{"DateObject", "[", "date", "]"}]}], "]"}]}], ";", 
      RowBox[{"DateString", "[", 
       RowBox[{"dtO", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
         "}"}]}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "[", "]"}], ":=", 
   RowBox[{"bbgifyDate", "[", "Today", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bbgifyDate", "::", "usage"}], " ", "=", " ", 
   "\"\<bbgifyDate[]: Converts date in any format to the string format \
Bloomberg wants. If given nothing or an empty string, returns today's date. \
Neeed for any dates that appear in overrides within API calls.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6938400966031575`*^9, 3.6938401084848375`*^9}, {
  3.693840745686283*^9, 
  3.693840812671114*^9}},ExpressionUUID->"c4e23fa5-f392-4960-830d-\
7d8a0e747f0c"]
}, Closed]],

Cell[CellGroupData[{

Cell["create link", "Subsection",
 CellChangeTimes->{{3.69333517942307*^9, 3.6933351814591866`*^9}, {
  3.693676053105257*^9, 
  3.693676057128487*^9}},ExpressionUUID->"b4b56d4c-69c6-4f52-bbf3-\
cab0a1592245"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGmakeLink", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
         "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGmakeLink", "[", 
    RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
   RowBox[{"Install", "[", 
    RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], "]"}]}], 
  ";", 
  RowBox[{
   RowBox[{"msBBGmakeLink", "::", "usage"}], " ", "=", " ", 
   "\"\<msBBGmakeLink[]: When run, launches the WSTP application that moves \
current, historical, or intraday data from Bloomberg to Mathematica. \
\!\(\*StyleBox[\"msBBGcurrent\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\",\",\
FontWeight->\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"msBBGhistory\",FontWeight->\"Bold\"\
]\)\!\(\*StyleBox[\"[\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"]\",\
FontWeight->\"Bold\"]\)\!\(\*StyleBox[\",\",FontWeight->\"Bold\"]\)\!\(\*\
StyleBox[\" \",FontWeight->\"Bold\"]\)msBBGintraday[], and \
\!\(\*StyleBox[\"msBBGintradayBars\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"[\
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"]\",FontWeight->\"Bold\"]\) will \
launch and kill this automatically, but you can do it manually with this \
function, assign the result to a variable, and pass the link to another msBBG \
function with the \\\"LinkObject]\\\"\[Rule] option if you plan on calling it \
many times in succession.  This saves the overhead of relaunching the link \
for every call. When finished, can call Uninstall[(this link)] and the \
program will be quit. Can set \\\"path to executable\\\" variable if the \
default is for some reason not what you want.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6936760159151297`*^9, 3.693676022594512*^9}, 
   3.693676987096678*^9, 3.6936777226937523`*^9, {3.6937394747010317`*^9, 
   3.6937394798413258`*^9}, {3.7047925708847547`*^9, 
   3.7047925720748224`*^9}, {3.7047927430776033`*^9, 3.704792748876935*^9}, {
   3.7047927933324776`*^9, 
   3.7047928179928885`*^9}},ExpressionUUID->"919242f1-4ce9-4fc2-bf92-\
4ead2016ce02"],

Cell[CellGroupData[{

Cell["manually", "Subsubsection",
 CellChangeTimes->{{3.6936769544068084`*^9, 
  3.693676960500157*^9}},ExpressionUUID->"fc52165b-06f9-47d6-b35d-\
dd47d23d7880"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"link1", "=", " ", 
  RowBox[{"Install", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], ",", 
         RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
       "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.69365530968391*^9, {3.6936587909300256`*^9, 3.6936587922441006`*^9}, 
   3.6936726106624975`*^9, 3.6936776509826503`*^9, 
   3.693677720375619*^9},ExpressionUUID->"bdface67-2428-4d2b-85be-\
0e5496fa55cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{11., {0., 11.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{
            {Thickness[0.038461538461538464`], {{
               {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}}}, {{
               {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                 "]], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                 4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813,
                  5.047809999999999}, {14.98813, 5.047809999999999}, {
                 14.98813, 8.29796625}, {14.163129999999999`, 8.29796625}, {
                 14.163129999999999`, 4.337966249999999}}}]}}}}}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\msFunctions\\\\msBBGlink.exe\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{
            {Thickness[0.038461538461538464`], {{
               {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}}}, {{
               {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                 "]], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                 4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813,
                  5.047809999999999}, {14.98813, 5.047809999999999}, {
                 14.98813, 8.29796625}, {14.163129999999999`, 8.29796625}, {
                 14.163129999999999`, 4.337966249999999}}}]}}}}}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"C:\\\\Program Files\\\\Wolfram \
Research\\\\msFunctions\\\\msBBGlink.exe\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"C:\\Program Files\\Wolfram Research\\msFunctions\\msBBGlink.exe\"", 922, 
   4],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6936593101537237`*^9, 3.693661787982447*^9, 3.693661935495885*^9, 
   3.6936765594962206`*^9, {3.6936776521827188`*^9, 3.6936776795272827`*^9}, 
   3.693677761104949*^9},ExpressionUUID->"dfb37434-ff93-4344-b50a-\
fb8e2a0915f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"linkUnified1", "=", 
    RowBox[{"Install", "[", 
     RowBox[{"LinkConnect", "[", "\"\<123\>\"", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", "debugging", " ", "*)"}]}]], "Input",ExpressionUUID->\
"7fe8e33a-e221-47a1-ae8b-497813f70477"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Off", "[", 
    StyleBox[
     RowBox[{"Unset", "::", "norep"}], "MessageName"], 
    StyleBox["]", "MessageName"]}], 
   StyleBox[";", "MessageName"]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "link1", "]"}], "===", "LinkObject"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Off", "[", 
       StyleBox[
        RowBox[{"LinkObject", "::", "linkn"}], "MessageName"], 
       StyleBox["]", "MessageName"]}], 
      StyleBox[";", "MessageName"], 
      StyleBox["\[IndentingNewLine]", "MessageName"], 
      RowBox[{"Uninstall", "[", "link1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Remove", "[", "link1", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "link1", "]"}], "===", "Symbol"}], ",", 
     RowBox[{"Remove", "[", "link1", "]"}]}], "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"On", "[", 
    StyleBox[
     RowBox[{"Unset", "::", "norep"}], "MessageName"], 
    StyleBox["]", "MessageName"]}], 
   StyleBox[";", "MessageName"]}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.6936551361209826`*^9, 3.6936551363599963`*^9}, 
   3.693655209140159*^9, {3.6936564654100137`*^9, 3.69365646709511*^9}, {
   3.6936578015424356`*^9, 3.693657816246277*^9}, {3.693658787078806*^9, 
   3.6936588181935854`*^9}, 3.6936588736227555`*^9, {3.693661683438468*^9, 
   3.693661687256686*^9}},ExpressionUUID->"26f7807e-c8e9-47d6-afc3-\
15c159a6b770"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["current data", "Subsection",
 CellChangeTimes->{{3.693677263906511*^9, 3.6936772645055447`*^9}, {
  3.6936775207021985`*^9, 
  3.693677521041218*^9}},ExpressionUUID->"5405d94a-4b7b-4a55-8138-\
8b61e96136f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGcurrent", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<outer noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
     RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
            ",", 
            RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}], ",", 
     RowBox[{"\"\<overrides\>\"", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"\"\<remove quotation marks\>\"", "\[Rule]", "True"}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "[", 
    RowBox[{"ticker_", ",", "field_String", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "raw", ",", "exp", ",", "link", ",", "ticks", ",", "trimmed", ",", 
       "overrides"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"link", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Install", "[", 
          RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
          "]"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
        RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ticks", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "ticker", "]"}], ",", "ticker", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{"ticker", ",", "\"\< & \>\""}], "]"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], "||", 
         RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<ticks: \>\"", ",", "ticks"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"overrides", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], "]"}], ">",
           "0"}], ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{"Keys", "[", 
               RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], "]"}], 
              ",", 
              RowBox[{"Values", "[", 
               RowBox[{"OptionValue", "[", "\"\<overrides\>\"", "]"}], 
               "]"}]}], "]"}], ",", "\"\< & \>\""}], "]"}], "]"}], ",", 
         "\"\<\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<overrides: \>\"", ",", "overrides", ",", " ", 
          "\"\<. (head: \>\"", ",", 
          RowBox[{"Head", "[", "overrides", "]"}], ",", "\"\<)\>\""}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"raw", "=", 
       RowBox[{"msBBGcurrentLink", "[", 
        RowBox[{"ticks", ",", "field", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "1", ",", 
           "0"}], "]"}], ",", "overrides"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<raw Head: \>\"", ",", 
          RowBox[{"Head", "[", "raw", "]"}], ",", "\"\<. raw: \>\"", ",", 
          "raw"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
          "LinkObject"}], ",", "False", ",", 
        RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}], 
      " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "raw", "]"}], "===", "msBBGcurrentLink"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"msBBGcurrent", "::", "linkDead"}], "]"}], ";", "Null"}], 
        ",", 
        RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringContainsQ", "[", 
            RowBox[{"raw", ",", "\"\<EXCEPTION\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"trimmed", "=", 
            RowBox[{"StringTrim", "[", "raw", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<trimmed: \>\"", ",", "trimmed"}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"exp", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], ",", 
              RowBox[{"ToExpression", "[", "trimmed", "]"}], ",", "trimmed"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "exp", "]"}], "===", "String"}], "&&", 
              RowBox[{
              "OptionValue", "[", "\"\<remove quotation marks\>\"", "]"}]}], 
             ",", 
             RowBox[{"trimmed", "=", 
              RowBox[{"StringReplace", "[", 
               RowBox[{"exp", ",", 
                RowBox[{"\"\<\\\"\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}]}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "exp", "]"}], "===", "String"}], ",", 
             "trimmed", ",", "exp"}], "]"}]}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{"else", ",", " ", 
            RowBox[{"had", " ", "exception"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", "raw"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "::", "usage"}], " ", "=", " ", 
   "\"\<msBBGcurrent[Bloomberg ticker_String OR \
_List,field_String,OptionsPattern[]]. Connects to Bloomberg and downloads a \
single field's data for one or more securities. Fields that return multiple \
lines (like dividend history or current holders) will be delivered as Lists \
of Associations. The user may wish to wrap each of these in a Dataset. \
Strings are by default delivered without surrounding quotation markets, but \
set \\\"remove quotation marks\\\"\[Rule]False if you prefer otherwise.\n\nIf \
you plan on running msBBGcurrent[] many times in close succession, run \
msBBGmakeLink[] first and save the resulting LinkObject to a variable. You \
can then pass that LinkObject to msGetBB[] with the \\\"LinkObject\\\"\[Rule] \
option, and Uninstall[] it when you are done. If you want to check multiple \
securities at once, pass them all to the function as a list (e.g. \
msBBGcurrent[{\\\"AAPL US Equity\\\",\\\"IBM US \
Equity\\\"},\\\"DVD_EX_DT\\\"]). For long lists this is about 20x faster than \
calling the function repeatedly. If used in this manner, the function may \
return the answers out of order, but will attach the security name to each \
datum for identification.\n\nYou can pass overrides to the function with \
\\\"overrides\\\"\[Rule]<|\\\"field id 1\\\"\[Rule]\\\"value 1\\\", \\\"field \
id 2\\\"\[Rule]\\\"value two\\\", \\\"field id 3\\\"\[Rule]\\\"field \
three\\\"|>}. Check the FLDS command for a security on the Bloomberg terminal \
to see which overrides are allowed.  You can include an arbitrary number of \
overrides.\n\nCan set the \\\"path to executable\\\" variable if the default \
is for some reason not what you want.\n\\\"noisy\\\"\[Rule]True will return \
debugging information from both the WSTP conduit and the Mathematica \
interface that calls it. \\\"outer noisy\\\"\[Rule]True will debugging \
information from only the Mathematica part.\n\nCompare to msBBGfieldOnDate[] \
for a single historical datapoint on a given ticker, or msBBGhistory[] for \
multiple historical datapoints.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGcurrent", "::", "linkDead"}], "=", 
   "\"\<Could not connect to link. Perhaps it died before Mathematica could \
pass data to it.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.43377820609375*^9, 3.433778217125*^9}, {
   3.433778369359375*^9, 3.4337783988125*^9}, {3.433778468640625*^9, 
   3.433778489890625*^9}, {3.433778538796875*^9, 3.4337785634375*^9}, {
   3.433778790203125*^9, 3.433778845015625*^9}, {3.433778883484375*^9, 
   3.43377897465625*^9}, {3.43377905840625*^9, 3.4337794041875*^9}, {
   3.43377961803125*^9, 3.433779682890625*^9}, {3.433779729625*^9, 
   3.433779897828125*^9}, {3.4337799566875*^9, 3.4337799731875*^9}, {
   3.433780884796875*^9, 3.433780946109375*^9}, {3.433781254125*^9, 
   3.433781322390625*^9}, {3.433781357421875*^9, 3.43378158246875*^9}, 
   3.433781778125*^9, {3.433782220828125*^9, 3.43378224171875*^9}, {
   3.43378227840625*^9, 3.433782299484375*^9}, {3.433782354078125*^9, 
   3.43378242434375*^9}, {3.4337824698125*^9, 3.4337824986875*^9}, {
   3.433782655109375*^9, 3.433782658078125*^9}, {3.43378277053125*^9, 
   3.433782774078125*^9}, {3.433783084765625*^9, 3.433783159296875*^9}, {
   3.4337836699375*^9, 3.433783686203125*^9}, {3.43378376453125*^9, 
   3.43378379465625*^9}, {3.4337839035625*^9, 3.43378393*^9}, {
   3.4337840006875*^9, 3.433784010015625*^9}, {3.43378433059375*^9, 
   3.43378439140625*^9}, {3.43378443309375*^9, 3.433784477609375*^9}, {
   3.433784914015625*^9, 3.433784925765625*^9}, {3.449484662119875*^9, 
   3.4494846632605*^9}, {3.451214767875*^9, 3.451214772609375*^9}, {
   3.451214839390625*^9, 3.45121488534375*^9}, {3.451215319578125*^9, 
   3.451215326109375*^9}, {3.45121551015625*^9, 3.451215610640625*^9}, {
   3.45121574925*^9, 3.4512157503125*^9}, {3.451215789109375*^9, 
   3.4512158235625*^9}, {3.45121654265625*^9, 3.451216554578125*^9}, {
   3.45122493940625*^9, 3.451224945359375*^9}, {3.453720309296875*^9, 
   3.453720373859375*^9}, {3.453722020296875*^9, 3.4537221075*^9}, {
   3.453722138390625*^9, 3.4537222125*^9}, {3.453722867875*^9, 
   3.45372286840625*^9}, {3.45372289959375*^9, 3.4537229055625*^9}, {
   3.4537229406875*^9, 3.453722942203125*^9}, {3.453723266109375*^9, 
   3.4537233575*^9}, {3.453723671984375*^9, 3.453723679453125*^9}, {
   3.45372474390625*^9, 3.453724763796875*^9}, {3.45372495090625*^9, 
   3.4537249681875*^9}, {3.4537250716875*^9, 3.453725085953125*^9}, {
   3.453725140265625*^9, 3.45372516584375*^9}, {3.453725229140625*^9, 
   3.453725280875*^9}, {3.453726303921875*^9, 3.45372640371875*^9}, {
   3.45372648965625*^9, 3.453726493890625*^9}, {3.45372677446875*^9, 
   3.453726790484375*^9}, {3.454587560147625*^9, 3.4545875931945*^9}, {
   3.454587712491375*^9, 3.45458773335075*^9}, {3.45458779828825*^9, 
   3.454587813741375*^9}, {3.45468062529675*^9, 3.4546806765155*^9}, {
   3.45468071492175*^9, 3.45468099385925*^9}, {3.454681101093625*^9, 
   3.454681168578*^9}, {3.454681264281125*^9, 3.45468127704675*^9}, {
   3.4552881827285*^9, 3.455288186462875*^9}, {3.455288241087875*^9, 
   3.455288255712875*^9}, {3.455288573806625*^9, 3.455288596291*^9}, {
   3.45528868075975*^9, 3.45528868719725*^9}, {3.455289061306625*^9, 
   3.455289062962875*^9}, {3.45528922063475*^9, 3.455289289150375*^9}, {
   3.455289391400375*^9, 3.455289402494125*^9}, {3.45528944500975*^9, 
   3.455289495681625*^9}, {3.455289528025375*^9, 3.455289531916*^9}, {
   3.455289602056625*^9, 3.455289645166*^9}, {3.45528996400975*^9, 
   3.455290069931625*^9}, {3.455290252291*^9, 3.455290341025375*^9}, {
   3.455290674541*^9, 3.45529072182225*^9}, {3.45529085113475*^9, 
   3.455290897025375*^9}, {3.455291050244125*^9, 3.455291062416*^9}, {
   3.455291173275375*^9, 3.45529123819725*^9}, {3.455291320712875*^9, 
   3.455291354494125*^9}, {3.455291486525375*^9, 3.45529149082225*^9}, {
   3.4552915826035*^9, 3.455291590650375*^9}, {3.455291871525375*^9, 
   3.455291880041*^9}, {3.45529204319725*^9, 3.45529207863475*^9}, {
   3.4554578317285*^9, 3.45545787838475*^9}, {3.455458073619125*^9, 
   3.45545808157225*^9}, {3.4554581147285*^9, 3.455458120025375*^9}, {
   3.45545910250975*^9, 3.45545916763475*^9}, {3.455459276869125*^9, 
   3.45545931825975*^9}, {3.455459634994125*^9, 3.455459642056625*^9}, {
   3.455459690650375*^9, 3.45545973613475*^9}, {3.455459797306625*^9, 
   3.455459798462875*^9}, {3.455459860681625*^9, 3.45545986132225*^9}, {
   3.4554599044785*^9, 3.45545993744725*^9}, {3.455460045837875*^9, 
   3.45546004688475*^9}, {3.45546026813475*^9, 3.455460272806625*^9}, {
   3.45546059400975*^9, 3.45546066425975*^9}, {3.455460694400375*^9, 
   3.455460717244125*^9}, {3.455460798541*^9, 3.455460887900375*^9}, {
   3.455461010400375*^9, 3.455461048166*^9}, {3.455461084041*^9, 
   3.45546111444725*^9}, {3.45546122513475*^9, 3.455461234931625*^9}, {
   3.45546146963475*^9, 3.4554614739785*^9}, {3.455461523775375*^9, 
   3.45546153900975*^9}, {3.4554616149785*^9, 3.45546163294725*^9}, {
   3.45546179269725*^9, 3.455461796275375*^9}, {3.455464796712875*^9, 
   3.455464836041*^9}, {3.455464866494125*^9, 3.455464874494125*^9}, {
   3.455464932962875*^9, 3.4554649664785*^9}, {3.455465118931625*^9, 
   3.45546520775975*^9}, {3.455465384369125*^9, 3.45546538863475*^9}, {
   3.455465549837875*^9, 3.455465572119125*^9}, {3.45546563457225*^9, 
   3.45546563869725*^9}, {3.459185233875*^9, 3.45918524546875*^9}, {
   3.459185435109375*^9, 3.459185441234375*^9}, {3.45918557815625*^9, 
   3.459185583578125*^9}, {3.459187231875*^9, 3.459187239453125*^9}, {
   3.459187282234375*^9, 3.459187326484375*^9}, {3.459529027456584*^9, 
   3.459529046534709*^9}, {3.459532667394084*^9, 3.459532678050334*^9}, {
   3.459532741128459*^9, 3.459532768284709*^9}, {3.459533542565959*^9, 
   3.459533546144084*^9}, {3.459534496519084*^9, 3.459534536675334*^9}, {
   3.459534620300334*^9, 3.459534728894084*^9}, {3.459534915940959*^9, 
   3.459534982831584*^9}, 3.459535023722209*^9, {3.459535362222209*^9, 
   3.459535465019084*^9}, {3.459535502128459*^9, 3.459535548972209*^9}, {
   3.459535585190959*^9, 3.459535707987834*^9}, {3.459535856534709*^9, 
   3.459535864237834*^9}, {3.459536151175334*^9, 3.459536222284709*^9}, 
   3.459536318300334*^9, {3.459537205144084*^9, 3.459537233909709*^9}, {
   3.459537568847209*^9, 3.459537569409709*^9}, {3.459537695534709*^9, 
   3.459537839206584*^9}, {3.459537888769084*^9, 3.459537973987834*^9}, {
   3.459538071300334*^9, 3.459538072112834*^9}, {3.459538155347209*^9, 
   3.459538159519084*^9}, {3.459538236456584*^9, 3.459538237159709*^9}, {
   3.459538576409709*^9, 3.459538629019084*^9}, {3.459538678378459*^9, 
   3.459538679487834*^9}, {3.459538711581584*^9, 3.459538919940959*^9}, 
   3.459539029862834*^9, {3.462038129234375*^9, 3.46203813575*^9}, {
   3.46385132571227*^9, 3.46385134505602*^9}, 3.4657441558764753`*^9, {
   3.4657442125610733`*^9, 3.4657442129673023`*^9}, {3.5030681517865*^9, 
   3.503068190802125*^9}, {3.503068220864625*^9, 3.503068228599*^9}, {
   3.503068278927125*^9, 3.503068315270875*^9}, {3.503068670677125*^9, 
   3.5030687025365*^9}, {3.50306873606775*^9, 3.50306875813025*^9}, {
   3.548603887564625*^9, 3.548603940939625*^9}, {3.54860416989275*^9, 
   3.5486041943615*^9}, {3.548604243127125*^9, 3.54860425789275*^9}, {
   3.548604323049*^9, 3.548604446595875*^9}, {3.54860625558025*^9, 
   3.548606495939625*^9}, {3.5486067067365*^9, 3.548606706877125*^9}, {
   3.548606782002125*^9, 3.54860681533025*^9}, {3.548673457924*^9, 
   3.548673467877125*^9}, {3.54867358195525*^9, 3.548673739314625*^9}, {
   3.590445344182831*^9, 3.5904453470088997`*^9}, {3.6029612011376295`*^9, 
   3.6029613030754604`*^9}, {3.6158181720349517`*^9, 
   3.6158182280225496`*^9}, {3.6158183792316694`*^9, 3.615818521505895*^9}, {
   3.63050412370323*^9, 3.630504136087242*^9}, {3.6328433638612823`*^9, 
   3.632843465320928*^9}, {3.632862246113303*^9, 3.632862326916292*^9}, {
   3.63286238795494*^9, 3.632862472215893*^9}, {3.632862524863677*^9, 
   3.6328626737292547`*^9}, {3.6328627114479303`*^9, 3.6328627202744102`*^9}, 
   3.632862754667706*^9, {3.632862803575556*^9, 3.6328630005677967`*^9}, {
   3.632863069857132*^9, 3.632863295744474*^9}, {3.6328645987348833`*^9, 
   3.6328646189543047`*^9}, {3.632864651080536*^9, 3.632864788288644*^9}, {
   3.6328648485876303`*^9, 3.6328649295593452`*^9}, {3.632868125612153*^9, 
   3.632868135799319*^9}, {3.6328699786141195`*^9, 3.6328699966146407`*^9}, {
   3.6328700595077205`*^9, 3.632870082211614*^9}, {3.6328701166510706`*^9, 
   3.632870182516685*^9}, {3.632870247425474*^9, 3.6328704258534017`*^9}, {
   3.632870462526541*^9, 3.632870489731013*^9}, {3.632870539983821*^9, 
   3.632870549609159*^9}, {3.632870721365389*^9, 3.6328707648981543`*^9}, {
   3.6328708381977234`*^9, 3.6328708382606897`*^9}, {3.6328708936840315`*^9, 
   3.6328708953089223`*^9}, {3.6328709846248083`*^9, 3.632871002000211*^9}, {
   3.632871032391883*^9, 3.6328710920355396`*^9}, 3.6328711340205946`*^9, {
   3.63287118002214*^9, 3.6328712716977944`*^9}, {3.632871801802657*^9, 
   3.632871840132388*^9}, {3.6328718796026993`*^9, 3.6328719371833634`*^9}, {
   3.632872019076294*^9, 3.632872049155695*^9}, {3.633088572773142*^9, 
   3.6330886933246317`*^9}, {3.63308873526328*^9, 3.633088784686661*^9}, {
   3.6330891415677347`*^9, 3.6330891909759674`*^9}, {3.633089237836506*^9, 
   3.6330893099336863`*^9}, {3.6330894055627723`*^9, 
   3.6330894276558294`*^9}, {3.6330894861089554`*^9, 3.633089543050373*^9}, {
   3.6330898285609303`*^9, 3.633089838436306*^9}, {3.6330899412366858`*^9, 
   3.633089989285503*^9}, {3.6330900565378237`*^9, 3.633090062303399*^9}, {
   3.6330901037371984`*^9, 3.6330901043934517`*^9}, {3.6573085395738707`*^9, 
   3.657308617610244*^9}, {3.659567342246573*^9, 3.659567470691842*^9}, {
   3.659567589066497*^9, 3.659567621393968*^9}, {3.659567654847868*^9, 
   3.659567857141746*^9}, {3.659567944102331*^9, 3.6595680047638693`*^9}, {
   3.664139202067233*^9, 3.6641394350445585`*^9}, {3.6641512429599323`*^9, 
   3.6641513114108477`*^9}, {3.6641954785376067`*^9, 3.664195563619473*^9}, {
   3.6641955996625347`*^9, 3.6641956112962*^9}, {3.664195786875242*^9, 
   3.664195835681034*^9}, {3.6641958731061745`*^9, 3.664195873651206*^9}, {
   3.6641959084201946`*^9, 3.664195966303505*^9}, {3.6641963921188602`*^9, 
   3.66419640225344*^9}, {3.6641965524910336`*^9, 3.6641966296404457`*^9}, {
   3.6641966756060753`*^9, 3.6641967107050824`*^9}, 3.6641967606329384`*^9, {
   3.6641970515035753`*^9, 3.6641970516895857`*^9}, {3.6641972613305764`*^9, 
   3.6641972652338*^9}, {3.666113933113752*^9, 3.6661139603413925`*^9}, {
   3.6663626693952017`*^9, 3.666362669478206*^9}, {3.6663629568456426`*^9, 
   3.666363184449661*^9}, {3.6663634874649925`*^9, 3.6663635598531327`*^9}, {
   3.6663635990733757`*^9, 3.6663636153593073`*^9}, {3.666363655165584*^9, 
   3.6663636658351946`*^9}, {3.666363764972865*^9, 3.6663638320567017`*^9}, {
   3.6663639139133835`*^9, 3.666363928860239*^9}, {3.666364135630065*^9, 
   3.6663642708047967`*^9}, 3.666364329104131*^9, {3.6663644673670397`*^9, 
   3.6663645572531805`*^9}, {3.6663645937512684`*^9, 
   3.6663645941622915`*^9}, {3.6663646249830546`*^9, 
   3.6663646542687297`*^9}, {3.6663646871756115`*^9, 3.666364721328565*^9}, {
   3.666365011001134*^9, 3.6663650989001613`*^9}, {3.666365131118004*^9, 
   3.6663652776083827`*^9}, 3.666365325616129*^9, {3.6663659480627303`*^9, 
   3.666365960138421*^9}, {3.666367600699256*^9, 3.666367637862382*^9}, {
   3.66636789729222*^9, 3.666367987938405*^9}, {3.6663680773365183`*^9, 
   3.666368085278972*^9}, {3.6663691156549063`*^9, 3.666369121649249*^9}, {
   3.666608412714609*^9, 3.666608439611147*^9}, {3.666608498381509*^9, 
   3.666608540449915*^9}, {3.666608894489165*^9, 3.6666089338864183`*^9}, {
   3.666609026286703*^9, 3.666609031171983*^9}, {3.6666091071013255`*^9, 
   3.666609173246109*^9}, {3.6666092285412717`*^9, 3.6666092625432167`*^9}, {
   3.666700732687481*^9, 3.666700751386751*^9}, {3.666701369608206*^9, 
   3.6667014644935923`*^9}, {3.6667015477135887`*^9, 3.66670154846029*^9}, {
   3.666704644246835*^9, 3.666704848821536*^9}, {3.6667048993564267`*^9, 
   3.666704934089413*^9}, {3.666706203536021*^9, 3.6667062079772754`*^9}, {
   3.666706646229342*^9, 3.6667066466763678`*^9}, 3.666706742297837*^9, 
   3.667243136587569*^9, {3.6672431945158825`*^9, 3.667243201710294*^9}, {
   3.667243267586062*^9, 3.667243269033145*^9}, {3.667244396778648*^9, 
   3.667244400339852*^9}, {3.667641843944187*^9, 3.6676418560728807`*^9}, {
   3.6676419272009487`*^9, 3.6676419819470806`*^9}, {3.667645812378168*^9, 
   3.667645834177415*^9}, {3.6699835797393556`*^9, 3.669983601050575*^9}, {
   3.669983637645668*^9, 3.669983639900797*^9}, {3.6699836974510884`*^9, 
   3.669983701346311*^9}, {3.6699839922899523`*^9, 3.6699840069757924`*^9}, {
   3.6699845215272226`*^9, 3.6699845269045305`*^9}, {3.669984562432563*^9, 
   3.669984562589572*^9}, {3.6699845935103397`*^9, 3.669984598351617*^9}, {
   3.669987029003642*^9, 3.669987059072362*^9}, {3.6699871042399454`*^9, 
   3.6699871166686563`*^9}, {3.669987329119808*^9, 3.669987329224814*^9}, {
   3.669987550357462*^9, 3.669987550514471*^9}, {3.6712802969814854`*^9, 
   3.6712804355944138`*^9}, {3.671280676873214*^9, 3.6712807055898566`*^9}, 
   3.67128094167836*^9, {3.6712809791635036`*^9, 3.6712809976035585`*^9}, {
   3.6712827321037664`*^9, 3.6712827330208187`*^9}, {3.6712828877126665`*^9, 
   3.671282951841335*^9}, {3.671283082080784*^9, 3.671283090544268*^9}, {
   3.672399062214672*^9, 3.672399073147298*^9}, {3.672399119056924*^9, 
   3.6723991333887434`*^9}, {3.6871110681223025`*^9, 
   3.6871110682053046`*^9}, {3.693663663298709*^9, 3.6936636975146666`*^9}, {
   3.693663731265597*^9, 3.6936637593252015`*^9}, {3.693663810596134*^9, 
   3.6936638826932583`*^9}, {3.693676921339917*^9, 3.6936769475744176`*^9}, {
   3.6936770141072235`*^9, 3.69367705513957*^9}, {3.69367717053017*^9, 
   3.693677171681236*^9}, {3.6936772515608044`*^9, 3.6936773020846944`*^9}, 
   3.6936777402317553`*^9, 3.693677779723014*^9, {3.693738968102056*^9, 
   3.693738985523052*^9}, 3.693739494761179*^9, 3.6937406271009455`*^9, {
   3.6972976098603983`*^9, 3.6972976188229113`*^9}, {3.6973001184808836`*^9, 
   3.6973001199549675`*^9}, {3.697300158998201*^9, 3.697300238745762*^9}, {
   3.697300310286854*^9, 3.6973003362193375`*^9}, {3.6973004368320923`*^9, 
   3.697300474863267*^9}, {3.7047928749751472`*^9, 3.7047928786503572`*^9}, {
   3.7433343977390594`*^9, 
   3.743334428104796*^9}},ExpressionUUID->"2d097cf8-1523-4bcf-b6d4-\
e807c5e132f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["history", "Subsection",
 CellChangeTimes->{{3.6936772316746674`*^9, 
  3.6936772324867134`*^9}},ExpressionUUID->"5d3ceeb3-3cab-48b8-be3f-\
1d7184964283"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGhistory", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<adjust\>\"", "\[Rule]", "\"\<CALENDAR\>\""}], ",", 
     RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<value\>\""}], ",", 
     RowBox[{"\"\<name\>\"", "\[Rule]", "\"\<df\>\""}], ",", 
     RowBox[{"\"\<output\>\"", "\[Rule]", "\"\<nf3\>\""}], 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vs", ".", " ", "\"\<nf2\>\""}], " ", "or", " ", 
       "\"\<ts\>\""}], "*)"}], ",", 
     RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<outer noisy\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
     RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
            ",", 
            RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
          "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGhistory", "[", 
    RowBox[{
    "ticker_String", ",", "field_String", ",", "start_", ",", "end_", ",", 
     "freq_String", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "raw", ",", "name1", ",", "output", ",", "link", ",", " ", "date", ",", 
       "endS"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"name1", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<name\>\"", "]"}], "\[Equal]", 
          "\"\<df\>\""}], ",", 
         RowBox[{"ticker", "<>", "\"\<: \>\"", "<>", "field"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<name\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"link", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Install", "[", 
          RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
          "]"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
        RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"date", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"ToUpperCase", "[", "freq", "]"}], " ", ",", "\"\<DAY\>\"", 
         ",", "\"\<DAILY\>\"", ",", "\"\<WEEK\>\"", ",", "\"\<WEEKLY\>\"", 
         ",", "\"\<MONTH\>\"", ",", "\"\<MONTHLY\>\"", ",", "\"\<QUARTER\>\"",
          ",", "\"\<QUARTERLY\>\"", ",", "\"\<YEAR\>\"", ",", 
         "\"\<YEARLY\>\"", ",", "\"\<ANNUAL\>\"", ",", "\"\<YEARLY\>\"", ",", 
         "_", ",", 
         RowBox[{"ToUpperCase", "[", "freq", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"endS", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"Head", "[", "end", "]"}], ",", "List", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"end", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", "DateObject", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"end", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", "String", ",", "end"}], "]"}]}], ";", 
      RowBox[{"raw", " ", "=", 
       RowBox[{"msBBGhistoryLink", "[", 
        RowBox[{"ticker", ",", " ", "field", ",", 
         RowBox[{"DateString", "[", 
          RowBox[{"start", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"endS", "==", "\"\<\>\""}], ",", "endS", ",", 
           RowBox[{"DateString", "[", 
            RowBox[{"end", ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Year\>\"", ",", "\"\<Month\>\"", ",", "\"\<Day\>\""}], 
              "}"}]}], "]"}]}], "]"}], ",", "date", ",", 
         RowBox[{"ToUpperCase", "[", 
          RowBox[{"OptionValue", "[", "\"\<adjust\>\"", "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
           ",", "0"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "1", ",", 
           "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<msBBGhistory. raw: \>\"", ",", "raw"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "raw", ",", 
         RowBox[{"ToExpression", "[", "raw", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<outer noisy\>\"", "]"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<msBBGhistory. output: \>\"", ",", "output", ",", 
          "\"\<. Head[output]: \>\"", ",", 
          RowBox[{"Head", "[", "output", "]"}], ",", 
          "\"\<. Length[output]: \>\"", ",", 
          RowBox[{"Length", "[", "output", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"use", " ", "ToExpression", " ", "to", " ", "convert", " ", 
        RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
        "list"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<raw: \>\"", ",", "raw"}], "]"}]}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
          "LinkObject"}], ",", "False", ",", 
        RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}], 
      " ", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], "&&", 
         RowBox[{
          RowBox[{"Length", "[", "output", "]"}], ">", "0"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"output", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Take", "[", 
                RowBox[{
                 RowBox[{"DateList", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "3"}], "]"}], 
               ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], ",", 
            "output"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}], ",", 
            "\"\<value\>\"", ",", 
            RowBox[{"TimeSeries", "[", "output", "]"}], ",", 
            "\"\<pctchanges\>\"", ",", 
            RowBox[{"EventSeries", "[", "output", "]"}], ",", 
            "\[IndentingNewLine]", "\"\<delta\>\"", ",", 
            RowBox[{"EventSeries", "[", "output", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"output", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], ",", 
            "\[IndentingNewLine]", "\"\<nf2\>\"", ",", 
            RowBox[{"Association", "[", 
             RowBox[{
              RowBox[{"\"\<name\>\"", "\[Rule]", "name1"}], ",", 
              RowBox[{"\"\<type\>\"", "\[Rule]", 
               RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}]}], ",", 
              RowBox[{"\"\<data\>\"", "\[Rule]", "output"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\"\<nf3\>\"", ",", 
            RowBox[{"TemporalData", "[", 
             RowBox[{"output", ",", 
              RowBox[{"MetaInformation", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<name\>\"", "\[Rule]", "name1"}], ",", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", 
                  RowBox[{"OptionValue", "[", "\"\<type\>\"", "]"}]}], ",", 
                 RowBox[{"\"\<bbg ticker\>\"", "\[Rule]", "ticker"}], ",", 
                 RowBox[{"\"\<bbg field\>\"", "\[Rule]", "field"}]}], 
                "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\"\<ts\>\"", 
            ",", "output"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}]}], "&&", " ", 
         RowBox[{
          RowBox[{"Length", "[", "output", "]"}], "==", "0"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"msBBGhistory", "::", "noData"}], ",", "ticker"}], "]"}], 
         ";", 
         RowBox[{"output", "=", "Null"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", "output"}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGhistory", "::", "noData"}], " ", "=", " ", 
   "\"\<Bloomberg returned nothing in response to that `1` query. For more \
information, run with \\\"noisy\\\"\[Rule]True\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"msBBGhistory", "::", "usage"}], " ", "=", " ", 
    "\[IndentingNewLine]", 
    "\"\<msBBGhistory[ticker_,field_,start_,end_,freq_,OptionsPattern[]] \
retrieves data from Bloomberg for a given ticker and field within the \
specified period.\nPARAMETERS:\nticker: e.g., \\\"AAPL Equity\\\"\nfield: \
e.g., \\\"Px_Last\\\"\nstart: start date\nend: end date, or \\\"\\\" for \
current day\nfreq: is the data frequency. Choices: \\\"day\\\", \\\"week\\\", \
\\\"month\\\", \\\"quarter\\\", or \\\"year\\\"\\n\n\nOptionally, you can \
pass  adjust\[Rule] for the period adjustment (default is \\\"CALENDAR\\\"). \
Choices, \\\"ACTUAL\\\", \\\"CALENDAR\\\"\ntype\[Rule] is one of \
\\\"delta\\\", \\\"pctchanges\\\", or (by default) \\\"value\\\". \nname\
\[Rule]\\\"whatever\\\" sets the name.\n\\\"output\\\"\[Rule]\\\"nf2\\\", \
\\\"nf3\\\" or \\\"ts\\\". nf2 is an association with Keys \\\"data\\\", \
\\\"name\\\" and \\\"type\\\". nf3 is a TemporalData object with \
\\\"name\\\", \\\"type\\\", \\\"bbg ticker\\\" and \\\"bbg field\\\" in \
MetaInformation. \\\"ts\\\" leaves out the MetaInformation.\n\\\"noisy\\\"\
\[Rule](True or False), toggles debugging info\n\\\"use DPDF\\\"\[Rule](True \
or False), toggles whether or not the DPDF settings in the Bloomberg terminal \
are respected. This would typically be used to shut off dividend adjustment, \
if it has been turned on.\n\\\"LinkObject\\\" can be passed a link object \
created by msBBGmakeLink[], saving the overhead of re-launching the link. If \
you do this, later Uninstall[] the link.\n\\\"path to \
executable\\\"\[Rule]should be set to the correct place by default but if you \
have more than one version of the executable, for example, you can pick one \
by setting the path here.\n\nBy default, pctchanges and delta-type data are \
stored as EventSeries[], while value-type data is stored as \
TimesSeries[].\>\""}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "msBBGfieldOnDate", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGfieldOnDate", "[", 
    RowBox[{
    "bbgTicker_String", ",", "field_String", ",", "date_DateObject", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ans", "}"}], ",", 
     RowBox[{
      RowBox[{"ans", "=", 
       RowBox[{"msBBGhistory", "[", 
        RowBox[{
        "bbgTicker", ",", "field", ",", "date", ",", "date", ",", 
         "\"\<Day\>\"", ",", 
         RowBox[{"\"\<use DPDF\>\"", "\[Rule]", 
          RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}]}], ",", 
         RowBox[{"\"\<LinkObject\>\"", "\[Rule]", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "ans", "]"}], "===", "TemporalData"}], ",", 
        RowBox[{
         RowBox[{"ans", "[", "\"\<Values\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "ans"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGfieldOnDate", "::", "usage"}], " ", "=", " ", 
   "\"\<msBBGfieldOnDate[bbgTicker_String,field_String,date_DateObject,\
OptionsPattern[]].  Checks a historical value for a specified field for a \
specified bloomberg ticker. Takes \\\"use DPDF\\\" and \\\"LinkObject\\\" as \
options.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.693677786290389*^9, 3.6937395002994957`*^9, {3.695990578853321*^9, 
   3.6959906051978283`*^9}, {3.695990761871789*^9, 3.695990767462109*^9}, {
   3.69599082273427*^9, 3.6959908323188186`*^9}, {3.695990904289935*^9, 
   3.6959909479574327`*^9}, 3.695991021082615*^9, {3.6959911001801395`*^9, 
   3.695991103820348*^9}, {3.695991151219059*^9, 3.6959912482676096`*^9}, 
   3.695991295885333*^9, {3.6959913359076223`*^9, 3.6959913478073025`*^9}, {
   3.696363643151414*^9, 3.6963636752744956`*^9}, 3.6972975074535413`*^9, {
   3.730195254841446*^9, 3.7301952888913937`*^9}, {3.7301954966642776`*^9, 
   3.7301955035596724`*^9}, {3.7301955367225685`*^9, 
   3.7301955844662995`*^9}, {3.7433343172074533`*^9, 3.743334377428898*^9}, {
   3.743334535189921*^9, 3.743334559234296*^9}, {3.743335220089095*^9, 
   3.7433352240673227`*^9}, {3.7433361315512276`*^9, 3.7433361320042534`*^9}, 
   3.74333616795831*^9},ExpressionUUID->"b5ea7fc4-0d90-4eb6-b24b-\
448b7196c0ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["intraday", "Subsection",
 CellChangeTimes->{{3.6936771752934427`*^9, 
  3.693677176709523*^9}},ExpressionUUID->"85eb331d-b9ca-4145-97f8-\
ff3c01a08d80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "msBBGintraday", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<daylightsaving start\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2015", ",", "3", ",", "8", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ",", 
      RowBox[{"\"\<daylightsaving end\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2015", ",", "11", ",", "1", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ",", 
      RowBox[{"\"\<tick type\>\"", "\[Rule]", "\"\<TRADE\>\""}], ",", 
      RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
      RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
             ",", 
             RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
           "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<output\>\"", "\[Rule]", "Association"}], 
      RowBox[{"(*", 
       RowBox[{"or", " ", "List"}], "*)"}], ",", 
      RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"\"\<debug\>\"", "\[Rule]", "False"}], ",", 
      RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}]}], "}"}]}], ";", 
   RowBox[{
    RowBox[{"msBBGintraday", "[", 
     RowBox[{
     "ticker_String", ",", "starttime_DateObject", ",", "endtime_DateObject", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "output", ",", " ", "link", ",", "st", ",", "et", ",", 
        "daylighttimezone", ",", "dateformat", ",", "x", ",", "fld", ",", 
        "ok", ",", "dsb", ",", "dse"}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"ok", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<trade\>\"", ",", "\"\<bid\>\"", ",", "\"\<ask\>\""}],
             "}"}], ",", 
           RowBox[{"ToLowerCase", "[", 
            RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"fld", "=", 
          RowBox[{"ToUpperCase", "[", 
           RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
         ",", 
         RowBox[{"ok", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"link", " ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
            "LinkObject"}], ",", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Install", "[", 
           RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
           "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
         RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
        "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{"dsb", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving start\>\"", "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dse", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving end\>\"", "]"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"daylighttimezone", " ", "=", " ", 
        RowBox[{"-", "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dateformat", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<T\>\"", ",", 
          "\"\<Time\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"st", " ", "=", " ", 
        RowBox[{"DateObject", "[", "starttime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"st", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "st"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "st"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<st: \>\"", ",", "st"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", " ", "=", " ", 
        RowBox[{"DateObject", "[", "endtime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "et"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "et"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<et: \>\"", ",", "et"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<msBBGintradayLink arguments: \>\"", ",", 
           RowBox[{"{", 
            RowBox[{"ticker", ",", "fld", ",", "st", ",", "et", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", 
               "1", ",", "0"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", 
               ",", "0"}], "]"}]}], "}"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"msBBGintradayLink", "[", 
         RowBox[{"ticker", ",", "fld", ",", "st", ",", "et", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
            ",", "0"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", ",",
             "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<x: \>\"", ",", "x"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"ToExpression", "[", "x", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"using", " ", "ToExpression", " ", "to", " ", "convert", " ", 
         RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
         "list"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dsb", "\[LessEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
                RowBox[{"dse", "\[GreaterEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"daylighttimezone", ",", "\"\<Hour\>\""}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"daylighttimezone", "-", "1"}], ",", 
                   "\"\<Hour\>\""}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", "output"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Price\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Size\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Price\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Size\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", "False", ",", 
         RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}],
        " ", "\[IndentingNewLine]", " ", "output"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGintraday", "::", "usage"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   "\"\<msBBGintraday[ticker_,starttime_,endtime_] retrieves intraday ticks \
from Bloomberg for a given ticker within the specified period. \nPARAMETERS:\n\
ticker: e.g., \\\"AAPL Equity\\\"\nstarttime: DateObject indicating start \
date and time\nendtime: DateObject indicating end date and time.\n\nBloomberg \
seems to save detailed intraday data back six months.\n\nBy default returns \
trade data, but can set option \\\"tick type\\\" to \\\"BID\\\" or \
\\\"ASK\\\" if you want something different.\n\nReturns a three-member list \
for every datapoint available: {time, price, size}. Pass \
\\\"output\\\"\[Rule]Association if you prefer an Association to the list. \
Oother optional parameters include \\\"\!\(\*
StyleBox[\"daylightsaving\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"beg\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"\\\\\\\"\",
FontVariations->{\"Underline\"->True}]\) and \\\"\!\(\*
StyleBox[\"daylightsaving\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"end\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"\\\\\\\"\",
FontVariations->{\"Underline\"->True}]\), which change every year. For a \
liquid security, the number of datapoints here is likely to be enormous, and \
you may want to consider using msBBGintradayBars[] instead.\n\n\\\"LinkObject\
\\\" can be passed a link object created by msBBGmakeLink[], saving the \
overhead of re-launching the link. If you do this, later Uninstall[] the \
link.\n\\\"path to executable\\\"\[Rule]should be set to the correct place by \
default but if you have more than one version of the executable, for example, \
you can pick one by setting the path here.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.693677792118723*^9, 3.6937395037036905`*^9, {3.702403972404241*^9, 
   3.702403976142455*^9}},ExpressionUUID->"49db0b0c-4a77-4674-a1f2-\
eb0b60ab1d32"]
}, Closed]],

Cell[CellGroupData[{

Cell["intraday bars", "Subsection",
 CellChangeTimes->{{3.6936771939355087`*^9, 
  3.6936771971186905`*^9}},ExpressionUUID->"e34991ec-1b2d-4894-80c2-\
702d8ce7af3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "msBBGintradayBars", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<daylightsaving start\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2017", ",", "3", ",", "8", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ",", 
      RowBox[{"\"\<daylightsaving end\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2017", ",", "11", ",", "1", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ",", 
      RowBox[{"\"\<fill\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<tick type\>\"", "\[Rule]", "\"\<TRADE\>\""}], ",", 
      RowBox[{"\"\<path to executable\>\"", "\[Rule]", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{
             RowBox[{"FileNameSplit", "[", "$InstallationDirectory", "]"}], 
             ",", 
             RowBox[{"-", "2"}]}], "]"}], ",", "\"\<msFunctions\>\"", ",", 
           "\"\<msBBGlink.exe\>\""}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\"\<LinkObject\>\"", "\[Rule]", "Null"}], ",", 
      RowBox[{"\"\<output\>\"", "\[Rule]", "Association"}], 
      RowBox[{"(*", 
       RowBox[{"or", " ", "List"}], "*)"}], ",", 
      RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
      RowBox[{"\"\<debug\>\"", "\[Rule]", "False"}], ",", 
      RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}]}], "}"}]}], ";", 
   RowBox[{
    RowBox[{"msBBGintradayBars", "[", 
     RowBox[{
     "ticker_String", ",", "starttime_DateObject", ",", "endtime_DateObject", 
      ",", 
      RowBox[{"barsize_", "/;", 
       RowBox[{"NumberQ", "[", "barsize", "]"}]}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "output", ",", " ", "link", ",", "st", ",", "et", ",", "x", ",", 
        "daylighttimezone", ",", "dateformat", ",", "fld", ",", "ok", ",", 
        "dsb", ",", "dse"}], "}"}], ",", "\[IndentingNewLine]", " ", 
      RowBox[{
       RowBox[{"ok", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<trade\>\"", ",", "\"\<bid\>\"", ",", "\"\<ask\>\""}],
             "}"}], ",", 
           RowBox[{"ToLowerCase", "[", 
            RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"fld", "=", 
          RowBox[{"ToUpperCase", "[", 
           RowBox[{"OptionValue", "[", "\"\<tick type\>\"", "]"}], "]"}]}], 
         ",", 
         RowBox[{"ok", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"link", " ", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", 
            RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
            "LinkObject"}], ",", 
          RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Install", "[", 
           RowBox[{"OptionValue", "[", "\"\<path to executable\>\"", "]"}], 
           "]"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "up", " ", "link", " ", "to", " ", 
         RowBox[{"C", "++"}], " ", "Code", " ", "if", " ", "needed"}], " ", 
        "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{"dsb", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving start\>\"", "]"}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dse", " ", "=", " ", 
        RowBox[{"DateObject", "[", 
         RowBox[{"OptionValue", "[", "\"\<daylightsaving end\>\"", "]"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Remember", " ", "to", " ", "reset", " ", "this", " ", "every", " ", 
         "year"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"daylighttimezone", " ", "=", " ", 
        RowBox[{"-", "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dateformat", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<-\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<-\>\"", ",", "\"\<Day\>\"", ",", "\"\<T\>\"", ",", 
          "\"\<Time\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"st", " ", "=", " ", 
        RowBox[{"DateObject", "[", "starttime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"st", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "st"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "st"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"st", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"et", " ", "=", " ", 
        RowBox[{"DateObject", "[", "endtime", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"et", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dsb", "\[LessEqual]", "et"}], "&&", 
           RowBox[{"dse", "\[GreaterEqual]", " ", "et"}]}], ",", 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "daylighttimezone"}], ",", "\"\<Hour\>\""}], 
               "}"}]}], "]"}], ",", "dateformat"}], "]"}], ",", 
          RowBox[{"(*", "else", "*)"}], 
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"DatePlus", "[", 
             RowBox[{"et", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"daylighttimezone", "-", "1"}], ")"}]}], ",", 
                "\"\<Hour\>\""}], "}"}]}], "]"}], ",", "dateformat"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"msBBGintradayBarsLink", "[", 
         RowBox[{
         "ticker", ",", "fld", ",", "st", ",", "et", ",", "barsize", ",", 
          RowBox[{"OptionValue", "[", "\"\<fill\>\"", "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<use DPDF\>\"", "]"}], ",", "1", 
            ",", "0"}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<debug\>\"", "]"}], ",", "1", ",",
             "0"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"ToExpression", "[", "x", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"using", " ", "ToExpression", " ", "to", " ", "convert", " ", 
         RowBox[{"C", "++"}], " ", "string", " ", "output", " ", "into", " ", 
         "list"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", "4", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"dsb", "\[LessEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "&&", " ", 
                RowBox[{"dse", "\[GreaterEqual]", 
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"daylighttimezone", ",", "\"\<Hour\>\""}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"DatePlus", "[", 
                RowBox[{
                 RowBox[{"DateObject", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"daylighttimezone", "-", "1"}], ",", 
                   "\"\<Hour\>\""}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "6", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "7", "]"}], "]"}]}], "}"}], "&"}], ",", "output"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<noisy\>\"", "]"}], ",", 
         RowBox[{"Print", "[", "5", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<output\>\"", "]"}], "===", 
           "List"}], ",", "output", ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"<|", 
              RowBox[{
               RowBox[{"\"\<Time\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Open\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<High\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Low\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "4", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Close\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "5", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Tick Counts\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ",", 
               RowBox[{"\"\<Shares\>\"", "\[Rule]", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "7", "]"}], "]"}]}]}], "|>"}], "&"}], ",", 
            "output"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", 
           RowBox[{"OptionValue", "[", "\"\<LinkObject\>\"", "]"}], "]"}], "===",
           "LinkObject"}], ",", "False", ",", 
         RowBox[{"Uninstall", "[", "link", "]"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"close", " ", "link", " ", "if", " ", "needed"}], " ", "*)"}],
        " ", "\[IndentingNewLine]", " ", "output"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"msBBGintradayBars", "::", "usage"}], " ", "=", " ", 
   "\[IndentingNewLine]", 
   "\"\<msBBGintradayBars[ticker_,starttime_,endtime_,barsize_] retrieves \
intraday samples from Bloomberg for a given ticker within the specified \
period. \nPARAMETERS:\nticker: e.g., \\\"AAPL Equity\\\"\nstarttime: \
DateObject indicating start date and time\nendtime: DateObject indicating end \
date and time\nbarsize: is the sample frequency, in minutes\nOptionally, can \
pass\n\t\\\"tick type\\\" \[Rule]  \\\"TRADE\\\" or \\\"BID\\\" or \
\\\"ASK\\\", and/or\n\t\\\"fill\\\"\[Rule] If this is set to 1, the API will \
append previous day close information as first datapoint as the start of \
trading for the specified period. Otherwise, the first data point will be the \
actual first trading on that day.\n\nBloomberg seems to save detailed \
intraday data back six months.\n\nReturns seven items for each bar \
\[LongDash]\n1: Time\n2: Open\n3: High\n4: Low\n5: Close\n6: Tick Counts per \
bar\n7: Shares per bar\n\nBy default returns these in List format, but pass \
\\\"output\\\"\[Rule]Association if you prefer it that way.\n\\\"LinkObject\\\
\" can be passed a link object created by msBBGmakeLink[], saving the \
overhead of re-launching the link. If you do this, later Uninstall[] the \
link.\n\\\"path to executable\\\"\[Rule]should be set to the correct place by \
default but if you have more than one version of the executable, for example, \
you can pick one by setting the path here.\n\nIf you want every trade, rather \
than periodic samples, use msBBGintraday[].\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6661146594818754`*^9, 3.666114659754876*^9}, {
   3.673912810655224*^9, 3.673912824529992*^9}, {3.6739130690459065`*^9, 
   3.673913113814847*^9}, 3.6739131597235255`*^9, {3.6933298685043344`*^9, 
   3.6933299448757024`*^9}, 3.6933302487870855`*^9, {3.693330285106162*^9, 
   3.6933303708780684`*^9}, {3.693330699330855*^9, 3.6933307045851555`*^9}, {
   3.6933308193057165`*^9, 3.693330854315719*^9}, {3.693331095723527*^9, 
   3.6933310957385283`*^9}, {3.6933313962057133`*^9, 3.693331402873095*^9}, {
   3.693331515331527*^9, 3.6933315512805834`*^9}, {3.693331711646756*^9, 
   3.693331719649214*^9}, {3.6933318745990763`*^9, 3.693331908140995*^9}, {
   3.693332045021824*^9, 3.693332046859929*^9}, {3.6933321251994095`*^9, 
   3.6933321970115175`*^9}, {3.69333229408807*^9, 3.6933323129311476`*^9}, {
   3.69333235336446*^9, 3.6933323787239103`*^9}, {3.693332479734688*^9, 
   3.6933326365206556`*^9}, {3.693332806291366*^9, 3.6933328204621763`*^9}, {
   3.6933328885230694`*^9, 3.693332977071134*^9}, {3.6933358310003386`*^9, 
   3.6933358595049686`*^9}, {3.6933360069954042`*^9, 3.693336007060408*^9}, {
   3.693336120919921*^9, 3.6933361209369216`*^9}, {3.6933361553498898`*^9, 
   3.693336155364891*^9}, {3.6933376604479766`*^9, 3.6933376694304905`*^9}, {
   3.6936553440858774`*^9, 3.6936553467450294`*^9}, {3.693672610970515*^9, 
   3.693672610978515*^9}, {3.693677798262074*^9, 3.693677809343708*^9}, 
   3.693739507044882*^9, {3.702403126653867*^9, 3.7024031839191427`*^9}, {
   3.7024034253209496`*^9, 3.702403443006961*^9}, 3.702403476937902*^9, {
   3.7024036073893633`*^9, 
   3.702403612298644*^9}},ExpressionUUID->"e9c5ba28-89a1-45fa-895f-\
96f49f970319"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.6328723196334095`*^9, 3.6328723203053007`*^9}, 
   3.6328724760292673`*^9},ExpressionUUID->"a0f7d849-bdc5-4a14-b353-\
a1a18ada7f45"],

Cell[CellGroupData[{

Cell["current data", "Subsection",
 CellChangeTimes->{{3.6936770677712927`*^9, 3.693677068921358*^9}, {
  3.693677525150453*^9, 
  3.6936775255754776`*^9}},ExpressionUUID->"e5c55abc-b391-45d5-b0c5-\
ce1adae7eda3"],

Cell["Get one datapoint", "Text",
 CellChangeTimes->{{3.667300694501926*^9, 
  3.6673006983081436`*^9}},ExpressionUUID->"254aa1eb-afb7-4b06-bf14-\
775c1d046a42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<C US Equity\>\"", ",", "\"\<PX_LAST\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6673006850173836`*^9, 3.6673006903826904`*^9}, 
   3.693677328489205*^9, 
   3.6937390244222775`*^9},ExpressionUUID->"432272e8-5804-4608-83f4-\
9b92bcfb462f"],

Cell[BoxData["59.81`"], "Output",
 CellChangeTimes->{3.6937433928471365`*^9, 3.693752344999171*^9, 
  3.6938408644250746`*^9, 
  3.6973093433815174`*^9},ExpressionUUID->"10383d62-1c1a-4daa-b0c4-\
65f7fc8413d6"]
}, Open  ]],

Cell["\<\
Get multiple datapoints -- if you ask for a lot of names, Bloomberg may not \
return the answers in order, so the WSTP interface tags each answer with the \
corresponding security name.\
\>", "Text",
 CellChangeTimes->{{3.667300694501926*^9, 3.6673006983081436`*^9}, {
   3.667300870831012*^9, 3.6673009349616795`*^9}, 
   3.7047929130243235`*^9},ExpressionUUID->"484a0ca6-7f48-44dc-94f2-\
ad16222679e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<AAPL US Equity\>\""}], "}"}], 
   ",", "\"\<PX_LAST\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.455290478791*^9, 3.455290479541*^9}, {
   3.45529072813475*^9, 3.45529074138475*^9}, {3.455290797431625*^9, 
   3.455290806087875*^9}, {3.455290906791*^9, 3.455290964650375*^9}, {
   3.455291070244125*^9, 3.45529108969725*^9}, {3.455292108587875*^9, 
   3.455292116525375*^9}, {3.455292361244125*^9, 3.455292364556625*^9}, {
   3.632871411615878*^9, 3.6328714350398493`*^9}, 3.6663626694902067`*^9, {
   3.6673006311543026`*^9, 3.6673006615880437`*^9}, 3.6936773294082575`*^9, 
   3.693739025841358*^9, {3.69375235495474*^9, 
   3.693752355060746*^9}},ExpressionUUID->"4e4ca461-f0e8-46a0-8c9e-\
11574ac03320"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"IBM US Equity\"\>", ",", "167.34`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAPL US Equity\"\>", ",", "119.96`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.632871435695438*^9, 3.633088838782712*^9, 
  3.6330889604282074`*^9, 3.633089348794422*^9, 3.667300661983066*^9, 
  3.671463247203801*^9, 3.6936778480129194`*^9, 3.6937433947602463`*^9, 
  3.6937523580339165`*^9},ExpressionUUID->"ae1edf53-e11f-4f54-8f0d-\
88a6c0659aff"]
}, Open  ]],

Cell["Works with text as well as numbers.", "Text",
 CellChangeTimes->{{3.6673009509855957`*^9, 
  3.6673009609031634`*^9}},ExpressionUUID->"95bf3117-6673-45c2-bb4a-\
a32ff05301f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<General_Counsel\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.455291454837875*^9, 3.455291464025375*^9}, {
   3.6328714470398912`*^9, 3.6328714490087557`*^9}, {3.6663626695032077`*^9, 
   3.6663626695032077`*^9}, {3.667300963579316*^9, 3.667300970259699*^9}, 
   3.6673010066747813`*^9, 3.6936773304793186`*^9, 
   3.6937390273654456`*^9},ExpressionUUID->"0d3ae542-fbf7-4ed9-b9b0-\
36d2b66d09b9"],

Cell[BoxData["\<\"\\\"MICHELLE H BROWDY\\\"\"\>"], "Output",
 CellChangeTimes->{{3.45529144569725*^9, 3.455291465025375*^9}, 
   3.455291502275375*^9, 3.45529159969725*^9, 3.455291718041*^9, 
   3.455292200181625*^9, 3.4552923547285*^9, 3.455465655931625*^9, 
   3.602961309094805*^9, 3.6328714505863905`*^9, 3.6330889626777744`*^9, 
   3.633089350107164*^9, 3.667301007211812*^9, 3.6936778501220407`*^9, 
   3.6937433966843567`*^9, 
   3.693752359725013*^9},ExpressionUUID->"37071713-8267-4771-8c7e-\
be0fd1515013"]
}, Open  ]],

Cell["\<\
Works with arrays of data (which are often most conveniently stored as \
Datasets), and handles missing fields elegantly.\
\>", "Text",
 CellChangeTimes->{{3.6673010129011374`*^9, 3.667301045172983*^9}, {
  3.667301149408945*^9, 
  3.667301163946777*^9}},ExpressionUUID->"168885e3-8e5f-4914-9965-\
28e42cf12f92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"msBBGcurrent", "[", 
   RowBox[{"\"\<CAR US Equity\>\"", ",", "\"\<DVD_HIST_ALL\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66730107588374*^9, 3.6673010834771743`*^9}, {
   3.6673011293868*^9, 3.66730114057044*^9}, 3.693677331574381*^9, 
   3.6937390401941795`*^9},ExpressionUUID->"7f01b2f5-04c0-411a-be60-\
a0e29332597f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 21, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Declared Date", "Ex-Date", "Record Date", "Payable Date", 
            "Dividend Amount", "Dividend Frequency", "Dividend Type"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 21], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Declared Date"} -> 1, {All, "Ex-Date"} -> 
           1, {All, "Record Date"} -> 1, {All, "Payable Date"} -> 
           1, {All, "Dividend Amount"} -> 1, {All, "Dividend Frequency"} -> 
           1, {All, "Dividend Type"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Declared Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], "Ex-Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Record Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Payable Date" -> 
              TypeSystem`PackageScope`AtomShape[96.00000000000001], 
              "Dividend Amount" -> TypeSystem`PackageScope`AtomShape[60], 
              "Dividend Frequency" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Dividend Type" -> TypeSystem`PackageScope`AtomShape[172.8]]]], 
           20, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[191268414], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Declared Date", "Ex-Date", "Record Date", "Payable Date", 
            "Dividend Amount", "Dividend Frequency", "Dividend Type"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 21], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[191268414]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Declared Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Declared Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Declared Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Declared Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Ex-Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Ex-Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Ex-Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Ex-Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Record Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Record Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Record Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Record Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Payable Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Payable Date\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Payable Date"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Payable Date"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Amount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Amount\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Dividend Amount"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Dividend Amount"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Frequency\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Frequency\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Dividend Frequency"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Dividend Frequency"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Type\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Dividend Type\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1851906370][{All, "Dividend Type"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[All, "Dividend Type"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-08-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-09-05", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-09-05", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[1, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-08-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[2, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-08-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.25"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[3, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-07-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-07-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Poison Pill Rights", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[4, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[5, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[5, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation["Suspend", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[5, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Discontinued", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[5, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2006-02-09", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-02-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-02-27", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2006-03-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[6, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-10-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-11-17", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-11-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-12-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[7, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-07-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-08-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-08-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-09-13", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[8, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-04-26", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-05-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-05-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-06-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[9, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2005-01-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-28", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-03-15", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[10, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-10-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-02-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-01-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2005-01-31", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.05"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Spinoff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[11, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-10-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-11-18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-11-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-12-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[12, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-07-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-08-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-08-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-09-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[13, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-04-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-05-20", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-05-24", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-06-15", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[14, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["2004-02-11", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-02-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-02-23", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2004-03-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Quarter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Regular Cash", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[15, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1996-09-25", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-22", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1996-10-21", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[16, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1995-06-07", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-07-03", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-06-19", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1995-06-30", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[17, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1993-04-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-05-03", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-04-16", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1993-04-30", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[18, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1992-06-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-07-06", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-06-12", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1992-07-02", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[19, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["1991-02-04", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Declared Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-03-01", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Ex-Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-02-14", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Record Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1991-02-28", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Payable Date"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Amount"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["None", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Frequency"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Stock Split", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
                  GeneralUtilities`Slice[20, 
                   Key["Dividend Type"]]], "Mouse"], 
                ImageSize -> {{172.8, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 (-20), {1, 21 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 21 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 21 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 20, {1, 21 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 (-20), {1, 21 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 21 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 21 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    21 20, {1, 21 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1851906370]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1851906370][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {856., {266., 273.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.667301143300596*^9, 3.693677855468346*^9, 
  3.693743402114667*^9, 
  3.693752376408967*^9},ExpressionUUID->"cdf33615-ab77-45e8-98c4-\
fdeba2e40f8a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["historical", "Subsection",
 CellChangeTimes->{{3.693677074884699*^9, 
  3.6936770759917626`*^9}},ExpressionUUID->"147b9cbb-442a-4b92-b37e-\
7335117c149b"],

Cell["Historical data is by default returned as TemporalData[]", "Text",
 CellChangeTimes->{{3.6673012261393337`*^9, 
  3.6673012410411863`*^9}},ExpressionUUID->"21b373ed-6bbc-4b54-905f-\
41276429fade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"histExample", "=", 
  RowBox[{"msBBGhistory", "[", 
   RowBox[{"\"\<AAPL Equity\>\"", ",", "\"\<Px_Last\>\"", ",", 
    RowBox[{"DateObject", "[", "\"\<20070901\>\"", "]"}], ",", 
    RowBox[{"DateObject", "[", "\"\<20081020\>\"", "]"}], ",", 
    "\"\<month\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.60296134205569*^9, 3.6029613822159867`*^9}, {
   3.6328715136830525`*^9, 3.6328715414186525`*^9}, {3.6328721005789337`*^9, 
   3.632872104704257*^9}, {3.6330896053657017`*^9, 3.6330896055062437`*^9}, {
   3.6330898839379168`*^9, 3.6330898853911257`*^9}, {3.667301216379776*^9, 
   3.6673012220070972`*^9}, {3.6673016081951866`*^9, 3.667301610655327*^9}, 
   3.693677344272107*^9},ExpressionUUID->"f1eaf078-c858-4cef-9ee4-\
ef363031d065"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TemporalData",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{11., {0., 11.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[{{
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkX1M1AUcxkHAsITBxYtByFtaJGQRjsmLfL8DCo53QgI84+B+d7/jPDD0
DDi5dqAeEui9CBZzGATCxUIsk4ikQWLIq4iXvFRznU384oW7gEIc2vXHs2fP
Pnu2Z3t88w+mCzdYWVlFWPS/d+1xTp3JIFzIv5/w/E4BGL7sF/6yl3D6sO0S
2DBwYUvw9flMQs3jgJg0YkAqXl+Zf5/QxWvwc79+IYhSYn3uZRE+nbQJ79OJ
YHNYSt1SNuGVx1zlWyUs6O0uz5pzCFf/UfsnNbJgNsyI7XiERrvSO8UsC4Xh
R80v7idMvqlf0wazcLeyJMHpA0KDxnM2ypqF9fFdj3xzCWe0f54dHBWB81oS
48sndNP6VQ37sJDVZ5zyzLPk6m9urFawkHB8d82OfMJfsXxB8pCFkMAFlwAB
4R1Fce9EkhhGpnkPwhnCNXmT5EiPGM54JF6JFxImrCRMyBJZSN9T/16siHDT
3de3p4wIoU/YFJ7JEl4K1T5TvMrA1iK7lQwxIcc85l3XlA+B8sBVcYFlr7tm
4OkqH6Rek8slEkJ5Zugr51r50NI8/pPsAKFIHeYeweeDKuDUnEpKqGps2+bp
xodcXds1VSGhdL/Ba6Q5Fw7oItoqigiDTsTX36zMBf+zdVPag4Qlcy1dZRF8
uCV/Z1L9IeGTRfnv6V18CBT0urcUE0pe7o0f25EH3xs7sr4+RDjamvnk2YU8
iIxekXQeJnzwkq2OE5IPhe3WQz/KCBXOaUtVGwVwxsQu9x0hvDgz+sP6iABM
N7iePR8RvjBnsq+vYcCsf1QzVGLpU6urhicEU8Hi+GAp4eUvhn9r/EsIdW90
ZU+XEeo7BaE5GSIINgx3T8sJfas3jsR9KwIb5zyH20cJXaM3/72Xw4Iyrbfz
Xjmh47+vSXJKWVg6VOhtVBA+VLRcl0axwPnMOLfyMeF423eb2rtEwGQY1LZK
Qr/K3VuVfiL4yuztZl1BWDRvF2Y4L4RmXdB9TqWFp6p6HJ2EUOtSX8U5Rrgh
T5l97GcGOoLK/ByOE76tL3CU6RiQcb2f8zpBqI1pb1vNZiAkzrvPQ0V4TZa4
M2YbA03xf1wNqiL0X4s9528SQJTRuzv8JKHPgOvFCTcGDPt6lKHVFh6r3lXO
Y8BtllMf9wnh5IJs2kHPQHLokPzdGsv/IUWiTxcZCG6I7NhXS1inaY++ZSWE
eN2btyWnCK9yUxq6GwSQKVWMs6cJTVPtIZe4+eDErXWWqwmX7dWnS+/yod9+
ZbtcQ2jvkczr2JILaQOLKQot4eBY6vlICQ/+AxW/0Oo=
                 "]]}}},
             Annotation[#, "Charting`Private`Tag$3501#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.3999264*^9, 113.66001088991749`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          PlotRange->{{3399926400, 3431721600}, {113.66001088991749`, 
            197.76433307021927`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic},
          ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyNlc1LlFEUxu/bfR01KCqKcjfLlv4JraxN0LJVNAzSCEWDGeTGEolcCBJR
glQiCRO4MKKywWJiipE+xI/sUxhJMLGkZtfS/N17j975cly879x77rnPeZ7z
8c7JWEei9UKsoy0eix5vjyUTbfFL0ZaL7RsmHSilmniiivX6xtK9mlShUFDq
8NXU87kg03P3dWANSmMxa54D5q2vpdIfj32Y/2HOKnvuN+8wml9aXT/T/TTx
JPvVYG/nDCTOJ3Izi9WdI5ZDw++1P0O3R99fGZ2YVw0W4Gw69x2Ao9/yP2sC
3HjwbBbnxWT/CwFAGDbAqwPU2Xfzp4VlnL9cvpUR2qreAqVuPny3cr5vgl1N
oOSjzGehzaWxvpFJAZrsGsxmeu692QlQpP/+4+l/8evj7GS9b2V1zSoO/57r
TZOyHWFBAmXspDCnslN5xxlYTGRM8DZbIRRAikOeQ4s53Xnn1XjvcI6dAHBc
klDKWB0TYtTMYZKwgcGxKeFPDBLmjskttMFFRqn2Op8qTvBSu7Z6DJvpMWcj
FnnlzNnqseEHF36PLC3/KhOwGclvc0GVOTHSra1Rupm0YJG9RDGVNr5BRUWV
2EtskwoXR2KTKiwkl7ZDBWsyul0cHjrFtK2L40+i0ra8YFEZ4eBpDUVjaXl2
+0EIgHhKxAdFSoZQF0OGGlfpftvRRdwbfVgZPzRwh7uMirItFJIH7PjQvZEy
uNCHQ16Ir9ImczJXlqFmLjk9/fLtgiqHKmKGML4kZApWoszNqIYZ51uftaD6
XOviDoCH2lvjjs2A9quj9tS4c7D8nD8UDMbvkH8U/AeXn7Gd\
\>"]], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"28 Sep 2007\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"30 Sep 2008\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["13",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[{{{}, {}, 
            TagBox[{{
               {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[
                1.6], Opacity[1.], LineBox[CompressedData["
1:eJwVkX1M1AUcxkHAsITBxYtByFtaJGQRjsmLfL8DCo53QgI84+B+d7/jPDD0
DDi5dqAeEui9CBZzGATCxUIsk4ikQWLIq4iXvFRznU384oW7gEIc2vXHs2fP
Pnu2Z3t88w+mCzdYWVlFWPS/d+1xTp3JIFzIv5/w/E4BGL7sF/6yl3D6sO0S
2DBwYUvw9flMQs3jgJg0YkAqXl+Zf5/QxWvwc79+IYhSYn3uZRE+nbQJ79OJ
YHNYSt1SNuGVx1zlWyUs6O0uz5pzCFf/UfsnNbJgNsyI7XiERrvSO8UsC4Xh
R80v7idMvqlf0wazcLeyJMHpA0KDxnM2ypqF9fFdj3xzCWe0f54dHBWB81oS
48sndNP6VQ37sJDVZ5zyzLPk6m9urFawkHB8d82OfMJfsXxB8pCFkMAFlwAB
4R1Fce9EkhhGpnkPwhnCNXmT5EiPGM54JF6JFxImrCRMyBJZSN9T/16siHDT
3de3p4wIoU/YFJ7JEl4K1T5TvMrA1iK7lQwxIcc85l3XlA+B8sBVcYFlr7tm
4OkqH6Rek8slEkJ5Zugr51r50NI8/pPsAKFIHeYeweeDKuDUnEpKqGps2+bp
xodcXds1VSGhdL/Ba6Q5Fw7oItoqigiDTsTX36zMBf+zdVPag4Qlcy1dZRF8
uCV/Z1L9IeGTRfnv6V18CBT0urcUE0pe7o0f25EH3xs7sr4+RDjamvnk2YU8
iIxekXQeJnzwkq2OE5IPhe3WQz/KCBXOaUtVGwVwxsQu9x0hvDgz+sP6iABM
N7iePR8RvjBnsq+vYcCsf1QzVGLpU6urhicEU8Hi+GAp4eUvhn9r/EsIdW90
ZU+XEeo7BaE5GSIINgx3T8sJfas3jsR9KwIb5zyH20cJXaM3/72Xw4Iyrbfz
Xjmh47+vSXJKWVg6VOhtVBA+VLRcl0axwPnMOLfyMeF423eb2rtEwGQY1LZK
Qr/K3VuVfiL4yuztZl1BWDRvF2Y4L4RmXdB9TqWFp6p6HJ2EUOtSX8U5Rrgh
T5l97GcGOoLK/ByOE76tL3CU6RiQcb2f8zpBqI1pb1vNZiAkzrvPQ0V4TZa4
M2YbA03xf1wNqiL0X4s9528SQJTRuzv8JKHPgOvFCTcGDPt6lKHVFh6r3lXO
Y8BtllMf9wnh5IJs2kHPQHLokPzdGsv/IUWiTxcZCG6I7NhXS1inaY++ZSWE
eN2btyWnCK9yUxq6GwSQKVWMs6cJTVPtIZe4+eDErXWWqwmX7dWnS+/yod9+
ZbtcQ2jvkczr2JILaQOLKQot4eBY6vlICQ/+AxW/0Oo=
                 "]]}}},
             Annotation[#, "Charting`Private`Tag$3501#1"]& ]}, {}, {}},
          AspectRatio->1,
          Axes->{False, False},
          AxesLabel->{None, None},
          AxesOrigin->{3.3999264*^9, 113.66001088991749`},
          DisplayFunction->Identity,
          Frame->{{True, True}, {True, True}},
          FrameLabel->{{None, None}, {None, None}},
          FrameStyle->Directive[
            Opacity[0.5], 
            Thickness[Tiny], 
            RGBColor[0.368417, 0.506779, 0.709798]],
          FrameTicks->{{None, None}, {None, None}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImagePadding->All,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          
          Method->{
           "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "ScalingFunctions" -> None, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                 Part[#, 1]], 
                (
                Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                 Part[#, 2]]}& )}},
          
          PlotRange->{{3399926400, 3431721600}, {113.66001088991749`, 
            197.76433307021927`}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.1], 
             Scaled[0.1]}, {
             Scaled[0.1], 
             Scaled[0.1]}},
          Ticks->{Automatic, Automatic}], GridBox[{
           {
            TagBox[
             TemplateBox[{RowBox[{
                 TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"28 Sep 2007\"", "SummaryItem"]}],RowBox[{
                 TagBox["\" to \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"30 Sep 2008\"", "SummaryItem"]}]},
              "RowDefault"],
             "SummaryItem"], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Data points: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["13",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Paths: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Regular: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["False",
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Output dimension: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Metadata: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2",
              "SummaryItem"], "\[InvisibleSpace]", 
             TagBox["\<\" properties\"\>",
              "SummaryItemAnnotation"]}], 
            RowBox[{
             TagBox["\<\"Minimum increment: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["2505600",
              "SummaryItem"]}]},
           {
            TagBox["\<\"\"\>",
             "SummaryItem"], 
            RowBox[{
             TagBox["\<\"Resampling: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"LinearInterpolation\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[
  Automatic, {{{153.47, 189.95, 182.22, 198.08, 135.36, 125.02, 143.5, 173.95,
     188.75, 167.44, 158.95, 169.53, 113.66}}, {{{3399926400, 3402777600, 
    3405369600, 3408048000, 3410726400, 3413232000, 3415910400, 3418502400, 
    3421094400, 3423772800, 3426451200, 3428956800, 3431721600}}}, 1, {
    "Continuous", 1}, {"Discrete", 1}, 1, {
    MetaInformation -> {"name" -> "AAPL Equity: Px_Last", "type" -> "value"}, 
     ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6029613383204765`*^9, 3.60296138262201*^9}, {
   3.6328715192930365`*^9, 3.6328715417154875`*^9}, 3.6328721054387245`*^9, 
   3.633088966943593*^9, 3.6330893526382413`*^9, 3.633089606131159*^9, 
   3.633089910564449*^9, 3.667301222882148*^9, 3.667301615984632*^9, 
   3.693677858429516*^9, 3.6937434124552584`*^9, 
   3.6937523833873663`*^9},ExpressionUUID->"9811481d-f8ae-482e-a8f2-\
ca602c6166d3"]
}, Open  ]],

Cell["\<\
msBBGgetHistory records type and name in this TemporalData as Metadata, so it \
can be easily retrieved thusly:\
\>", "Text",
 CellChangeTimes->{{3.667301638699931*^9, 3.6673016390699525`*^9}, {
  3.667301863411784*^9, 
  3.667301900452903*^9}},ExpressionUUID->"8ce052e4-12f9-43d6-b20f-\
da9e7c626ba3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"histExample", "[", "\"\<name\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.667301624996147*^9, 
  3.6673016336916447`*^9}},ExpressionUUID->"c808e041-8fd9-422e-a2a2-\
1e68cf757ff4"],

Cell[BoxData["\<\"AAPL Equity: Px_Last\"\>"], "Output",
 CellChangeTimes->{{3.667301630755477*^9, 3.667301633901657*^9}, 
   3.6936778607526484`*^9, 3.6937434143073645`*^9, 
   3.693752385454485*^9},ExpressionUUID->"801ad143-6364-4ef9-9ff8-\
a9c0e6387674"]
}, Open  ]],

Cell["You can tap the Bloomberg output with", "Text",
 CellChangeTimes->{{3.6330898587026567`*^9, 
  3.633089901908188*^9}},ExpressionUUID->"e72c4299-5000-4fc7-8e72-\
29c50497fd3f"],

Cell["Historical intraday data comes from separate functions:", "Text",
 CellChangeTimes->{{3.6673019150577383`*^9, 
  3.6673019310996556`*^9}},ExpressionUUID->"c60eba6e-275b-465f-be9a-\
cfd85af65ea2"]
}, Closed]],

Cell[CellGroupData[{

Cell["intraday", "Subsection",
 CellChangeTimes->{{3.6936770791269417`*^9, 
  3.6936770801500006`*^9}},ExpressionUUID->"e69cdff7-e253-44cc-a14c-\
137e379a79cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"msBBGintraday", "[", 
   RowBox[{"\"\<AAPL US Equity\>\"", ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "35", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.453722229078125*^9, 3.45372224440625*^9}, {
   3.45372252646875*^9, 3.453722563296875*^9}, {3.45372283796875*^9, 
   3.453722852375*^9}, {3.453723053*^9, 3.453723074375*^9}, {
   3.453723404671875*^9, 3.453723405109375*^9}, {3.453723643*^9, 
   3.453723643421875*^9}, {3.45372459578125*^9, 3.45372459971875*^9}, {
   3.453724728734375*^9, 3.45372473225*^9}, {3.45372511259375*^9, 
   3.453725113015625*^9}, {3.4592743951875*^9, 3.459274444046875*^9}, {
   3.459274482484375*^9, 3.45927448271875*^9}, {3.459274547890625*^9, 
   3.45927459928125*^9}, {3.459274696375*^9, 3.45927470203125*^9}, {
   3.4592748145625*^9, 3.459274836265625*^9}, {3.459526650144084*^9, 
   3.459526656644084*^9}, {3.459526911097209*^9, 3.459526921456584*^9}, {
   3.459528595940959*^9, 3.459528596394084*^9}, {3.459528738690959*^9, 
   3.459528742753459*^9}, 3.459528828269084*^9, {3.459528866784709*^9, 
   3.459528869409709*^9}, {3.459528908925334*^9, 3.459528909565959*^9}, {
   3.459528946659709*^9, 3.459528946925334*^9}, {3.459530212628459*^9, 
   3.459530217050334*^9}, {3.459536738925334*^9, 3.459536748456584*^9}, {
   3.459537472362834*^9, 3.459537509644084*^9}, {3.459537555878459*^9, 
   3.459537559894084*^9}, {3.459538035800334*^9, 3.459538035987834*^9}, {
   3.459538288581584*^9, 3.459538288737834*^9}, {3.459538354831584*^9, 
   3.459538363269084*^9}, {3.459538432909709*^9, 3.459538433222209*^9}, {
   3.459538939315959*^9, 3.459538939847209*^9}, {3.602961402848167*^9, 
   3.602961440288308*^9}, {3.632872113189006*^9, 3.6328721856448746`*^9}, {
   3.6936778836359572`*^9, 
   3.693677885905087*^9}},ExpressionUUID->"2c9523a8-e560-46c8-9e9e-\
cf4926667799"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.81`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "200"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:01\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.8`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:01\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "30", ",", "1.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.8`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"970"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:34:59\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "34", ",", "59.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.86`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:35:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "35", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.851`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"Time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:35:00\"", 
                  StyleBox[
                   RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
                    RowBox[{"TimeObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14", ",", "35", ",", "0.`"}], "}"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
                    RowBox[{"TimeZone", "\[Rule]", 
                    RowBox[{"-", "5.`"}]}]}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"Price\"\>", "\[Rule]", "109.86`"}], ",", 
             RowBox[{"\<\"Size\"\>", "\[Rule]", "100"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23886571504005273217, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23886571504005273217, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23886571504005273217, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23886571504005273217 === $SessionID, 
   Out[22], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.459538949628459*^9, {3.602961403760219*^9, 3.602961441387371*^9}, {
   3.6328721298300576`*^9, 3.632872186644769*^9}, 3.633089005179681*^9, 
   3.63308935682585*^9, 3.693677862603754*^9, 3.693677893052496*^9, 
   3.6937434397278185`*^9, 
   3.6937523943899956`*^9},ExpressionUUID->"a0775886-84c5-45c3-a93e-\
70d434fff422"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["intraday bars", "Subsection",
 CellChangeTimes->{{3.693677083024165*^9, 
  3.6936770845732536`*^9}},ExpressionUUID->"a854135f-a5a0-4fcf-81ee-\
65e2d407e1f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"msBBGintradayBars", "[", 
   RowBox[{"\"\<INDU Index\>\"", ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "14", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"2016", ",", "12", ",", "02", ",", "15", ",", "30", ",", "00"}],
       "}"}], "]"}], ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.454587848335125*^9, 3.454587859507*^9}, {
   3.45458790747575*^9, 3.454587927960125*^9}, {3.45458807360075*^9, 
   3.45458809510075*^9}, {3.459275881515625*^9, 3.45927592615625*^9}, {
   3.459276168515625*^9, 3.4592761741875*^9}, {3.459276238203125*^9, 
   3.459276300421875*^9}, {3.459276330921875*^9, 3.459276410234375*^9}, {
   3.45927644059375*^9, 3.459276440921875*^9}, {3.4592768755625*^9, 
   3.459276880734375*^9}, {3.459276914078125*^9, 3.45927691478125*^9}, {
   3.459276982796875*^9, 3.459277007109375*^9}, {3.459529880003459*^9, 
   3.459530002284709*^9}, {3.459530269034709*^9, 3.459530284925334*^9}, {
   3.459531241440959*^9, 3.459531277034709*^9}, {3.459531384425334*^9, 
   3.459531387597209*^9}, {3.459532305581584*^9, 3.459532307831584*^9}, {
   3.459534557331584*^9, 3.459534561800334*^9}, {3.459535735472209*^9, 
   3.459535738894084*^9}, {3.459536102940959*^9, 3.459536103206584*^9}, 
   3.459536596815959*^9, {3.602961457161274*^9, 3.6029614889120893`*^9}, {
   3.6328722194274797`*^9, 3.632872285601246*^9}, {3.6936778753664846`*^9, 
   3.6936778908123674`*^9}},ExpressionUUID->"69ef3cfe-5363-4eb8-93a9-\
8e06f7ec6263"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:30:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "30", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19158.88`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19166.86`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.82`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19164.88`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:40:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "40", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19164.64`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19168.18`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19160.94`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 14:50:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"14", ",", "50", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19167.34`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19157.22`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19157.29`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:00:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "0", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19156.81`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19164.67`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19155.69`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19162.59`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:10:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "10", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19162.25`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19162.44`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.55`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19154.64`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Time\"\>", "\[Rule]", 
      TemplateBox[{RowBox[{"\"Fri 2 Dec 2016 15:20:00\"", 
          StyleBox[
           RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
             RowBox[{"-", "5.`"}]}], FontColor -> GrayLevel[0.5]]}],
        RowBox[{"DateObject", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2016", ",", "12", ",", "2"}], "}"}], ",", 
            RowBox[{"TimeObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"15", ",", "20", ",", "0.`"}], "}"}], ",", 
                RowBox[{"TimeZone", "\[Rule]", 
                  RowBox[{"-", "5.`"}]}]}], "]"}], ",", 
            RowBox[{"TimeZone", "\[Rule]", 
              RowBox[{"-", "5.`"}]}]}], "]"}]},
       "DateObject",
       Editable->False]}], ",", 
     RowBox[{"\<\"Open\"\>", "\[Rule]", "19154.64`"}], ",", 
     RowBox[{"\<\"High\"\>", "\[Rule]", "19173.99`"}], ",", 
     RowBox[{"\<\"Low\"\>", "\[Rule]", "19154.43`"}], ",", 
     RowBox[{"\<\"Close\"\>", "\[Rule]", "19173.34`"}], ",", 
     RowBox[{"\<\"Tick Counts\"\>", "\[Rule]", "600"}], ",", 
     RowBox[{"\<\"Shares\"\>", "\[Rule]", "0"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.454587860835125*^9, {3.45458791016325*^9, 3.454587929257*^9}, {
   3.4545880750695*^9, 3.4545880968195*^9}, 3.454670632374875*^9, {
   3.45927583465625*^9, 3.45927584103125*^9}, 3.45927587253125*^9, 
   3.459275908296875*^9, 3.459275940140625*^9, 3.4592761865625*^9, {
   3.4592762426875*^9, 3.459276365453125*^9}, {3.459276398*^9, 
   3.459276447859375*^9}, 3.459276890546875*^9, 3.459276925328125*^9, {
   3.459276997140625*^9, 3.45927701709375*^9}, {3.459529895065959*^9, 
   3.459529945065959*^9}, {3.459529975722209*^9, 3.459530002956584*^9}, 
   3.459530197800334*^9, {3.459530270456584*^9, 3.459530286253459*^9}, 
   3.459531244940959*^9, 3.459531288925334*^9, 3.459531395284709*^9, 
   3.459531581878459*^9, 3.459531981284709*^9, 3.459532017128459*^9, 
   3.459532173347209*^9, 3.459532232519084*^9, 3.459532338097209*^9, 
   3.459532711753459*^9, 3.459532813394084*^9, 3.459533406128459*^9, 
   3.459533587128459*^9, 3.459534563237834*^9, 3.459535730628459*^9, 
   3.459535815581584*^9, 3.459535947440959*^9, 3.459536129909709*^9, 
   3.459536580862834*^9, 3.459536665534709*^9, 3.459539127315959*^9, {
   3.6029614704700346`*^9, 3.602961490077156*^9}, {3.632872243631094*^9, 
   3.632872286163984*^9}, 3.6330890070385294`*^9, 3.6330893604665155`*^9, 
   3.6936778934105167`*^9, 3.6937434506384425`*^9, 
   3.6937524013643947`*^9},ExpressionUUID->"617004d2-e49c-42a4-a061-\
c51e9c6bc332"]
}, Open  ]],

Cell["\<\
If you will be calling these functions repeatedly, it makes sense to leave \
the link live and save the time of relaunching it.\
\>", "Text",
 CellChangeTimes->{{3.6673019350458813`*^9, 
  3.667301952387873*^9}},ExpressionUUID->"98a2c6a0-62be-47f3-b0e7-\
47ec205922d5"]
}, Closed]],

Cell[CellGroupData[{

Cell["with persistent link", "Subsection",
 CellChangeTimes->{{3.6936770944928207`*^9, 
  3.6936770974079876`*^9}},ExpressionUUID->"cbd39f99-2690-4167-93a8-\
4be39430e92f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bbgLink", "=", 
   RowBox[{"msBBGmakeLink", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"msBBGhistory", "[", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Px_Close_1D\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"\<\>\"", ",", 
     "\"\<Day\>\"", ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "False"}], ",", 
     RowBox[{"LinkObject", "\[Rule]", "bbgLink"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"msBBGhistory", "[", 
    RowBox[{"\"\<IBM US Equity\>\"", ",", "\"\<Px_Close_1D\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2015", ",", "1", ",", "1"}], "}"}], ",", "\"\<\>\"", ",", 
     "\"\<Day\>\"", ",", 
     RowBox[{"\"\<use DPDF\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"LinkObject", "\[Rule]", "bbgLink"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uninstall", "[", "bbgLink", "]"}], ";", 
  RowBox[{"Remove", "[", "bbgLink", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Callout", "[", 
      RowBox[{
       RowBox[{"x1", "/", 
        RowBox[{"x1", "[", "\"\<FirstValue\>\"", "]"}]}], ",", 
       "\"\<without dividends\>\""}], "]"}], ",", 
     RowBox[{"Callout", "[", 
      RowBox[{
       RowBox[{"x2", "/", 
        RowBox[{"x2", "[", "\"\<FirstValue\>\"", "]"}]}], ",", 
       "\"\<with dividends\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Historical IBM Returns\>\""}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.666032367807501*^9, 3.666032413613121*^9}, {
   3.6660324702643614`*^9, 3.6660324990340066`*^9}, {3.6661042983254642`*^9, 
   3.6661043204035883`*^9}, {3.666365406708767*^9, 3.666365406779771*^9}, {
   3.6664447529678645`*^9, 3.6664447588882027`*^9}, {3.6936773574358606`*^9, 
   3.6936774426137323`*^9}, {3.6936779295905857`*^9, 
   3.6936779522108793`*^9}, {3.6937390539199643`*^9, 3.6937390688198166`*^9}, 
   3.693739511370129*^9, {3.693743533277169*^9, 3.693743615102849*^9}, 
   3.693743816597374*^9, {3.693744189505703*^9, 3.6937441910157895`*^9}, {
   3.6937583257542505`*^9, 3.693758325856256*^9}, 
   3.6937584016895933`*^9},ExpressionUUID->"b589238c-bef6-4843-b45b-\
df5ff166d442"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    TagBox[{{
       {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1: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
4joMSax+yRxczp//tTaI6lkLtzUxjvoWzSzrNIfnVutr735/nPphJJzsKowI
zIpgWFjdH06jfvggXJ/Xr7Usjvqhoy/PsfZdSv08HLYVjhO2UT/Pg9n25RKt
J5PhXh586ZbddL7awQ/Pc2L5n29z6XzVHs5Y31Uy0YrOh+fCEnc247P8mwQP
W7HlmDblv6R6XTTEH/29aMSHJAn1sy9sNvvSVOdMyr8BLmQLOMp/AX7F/iDK
Xw2z5ehfZt9Zc7FfkR80/W8E9cN6+PZxYQaj9eRZuPaO4SU/HeqHZ3D9vzm+
rvuon7UCMP+OEw54qJ5n4NfzNTZ/8qe8VfCTy/Fll8SUt0WgSj2k1nD8vdGz
z4ZTPU/BnYXbdZ/q+QR2rJz0Vr+R8qrNQ7+MXn4l0IP2m5bwhhPy5PA1tN+c
Arsbh+8u/0Xnq//BHWbVNkyqpv3mP/j9PdtT/q9pv2kRhP4WltPltN90hysS
FLdjutD5SUyQyvljxp8glfPGMrNg3M8d3lfC6DxDzQ1+wiZ0Oo9YDkumrF0b
Q+eRvpnwWx39nvn0/UrTEMwPcWdDdrWk/fwkWDIut/FOVzqPWApfFZZbdJ4q
ywhROW+Ul8AVm28nTTOk853xof9bn9B5yuJQlfPSjDS4ue8E/x+mlL8IPrDm
yIJq+nvUvsFci6DOb+jnk6VhPPf1WGPpRjr/LtgDYzM5+aYZ5b8Fs/bTovxf
wlTfz3Sdr1JPxU64pHT7ylSeziNuwLNTvx5OqKHziDq4m4ZwYkbnEZ0X8Jyv
V/0PrVx6XyCGAewo6Pz6GnzWXe1rQSqdR9TA81svOTfiGfWH3kKe0xkjzCDU
H47wjqDGCm85nacEwevbdnzZ7hH1gyic5zINVmzfTFY4hKuc34gCYTfX9IKD
xlTvLTAGs4Dl2XS+oy3FeqJcN2mZNp2f2MO+7ECG8vrD42Obu+z6//dFG6Uq
z2tyNnzxeEXQl3b0/mXwIuzHD1rkqmfR+DAHnuc232j3GxofEuE/TQOw4qPx
7Tzs9W2V2SRNyv8CjjATTuConj4RPLep9sv3ITU0PqyDWwe/P2eRTeODHJ5b
FLBy32jK/yxCNb/mYp6LZRtmqmc8PMax4ELZGarnadgh+MV0WTjlr4RNdE8F
37GjftBYovJ+QmYFJ/kLK0qq70n4wSWxcUR76ofHsGafo26+7pS/Gd5U3Ss0
/iXl7xuJ/YxRenEjvf8o84Qn/XawenWMxotHkSr1Sf4LT7/h/i+2msbn3kt5
7soi45DzOjQ+S2C2vexH43M0bPH0W8hGe6rv76Uq6w1Fr2W4vv9nTtvWNN65
wmGeWQ+qu9B4FwXbLa7Sm+lC491BGDf3wd/tNN6ZRvFc+rPTneykNN5NhBvv
Cy8YKX8kHM8ajPKnw6fsd6ElKX9xlMp4Khm3HPv7FxPwCFN/RMBe7AUY9fc+
GIuR2NpvNF7fhm/9qX+SoKD8X+Gs4gaPWz/oeQtfgeezuFWKjT6NF7vhDdkx
3Xptpv64Bfs6zXqVfpj64zOMwbvDuELqb4No1EsYrun9knIHHJX7LTyC3geZ
XIdHCcvr4TTe8dEq74fkTjEYz0bufiGh80xxPjxIOC6j9y/Sj/Ay4fVvMI1v
urEq41fZCHjWh7Whi6xpfAuCl+Pp9lLQ+PAO3p51U3dzLfWzThzPyc8KfxHl
HRan8vybBMCvo7k/2uGUd3OcyvscRfuVPPf3WsE++700fwyF2euPVZTfD57I
HgjKnwQvvrx9tRadN2dchBWv1muvuU7zh50M82G5jsH2DJo/ZsPsdV46jc8J
sHA6UppN4/M52Cl6TtT7LBqfnwufHyG8wKB6rl2FfIVH/HTp+xRZ8MjI5efb
0/sB0VPYyavxaSm9vxK3XI1+bQhY6pxG9TsN25Yo8uSbKF8FLJw+eJ6ifOrx
WK+yB5Dy9YMXX492UTyi+eFE/P/Wf1S/cvizj7K6Yw7Nb01wbpPwwo7y9lnD
c8JpdTq9j1B4wKtsDLbkXaN6NcKTNLb9ZyGn+22+FvtfrRdhtvlKp/8DT8k3
6Q==
         "]]}}},
     Annotation[#, {{Callout}, Charting`Private`Tag$6914, {1}}]& ], 
    TagBox[{{
       {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
        1.6], LineBox[CompressedData["
1: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
YvAfqvJEcw==
         "]]}}},
     Annotation[#, {{Callout}, Charting`Private`Tag$6914, {
       2}}]& ]}, {}, {{{}, {{
       {GrayLevel[0.4], AbsoluteThickness[
        0.5], {LineBox[{
          Scaled[{0.02, 0}, {3.6936864*^9, 1.0464348042882072`}], 
           Offset[{3, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.0464348042882072`}]], 
           Offset[{7, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]], 
           Offset[{12, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]]}], 
         LineBox[{
          Scaled[{0.02, 0}, {3.6936864*^9, 1.1217839498501303`}], 
           Offset[{3, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.1217839498501303`}]], 
           Offset[{7, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406`}]], 
           Offset[{12, 0}, 
            Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406`}]]}]}, {
         InsetBox["\<\"without dividends\"\>", Offset[{15, 0}, 
          Scaled[{0.02, 0}, {3.6936864*^9, 1.046433150029441}]], 
          ImageScaled[{0, 0.5}]], 
         InsetBox["\<\"with dividends\"\>", Offset[{15, 0}, 
          Scaled[{0.02, 0}, {3.6936864*^9, 1.1217778770722406}]], 
          ImageScaled[{0, 0.5}]]}, {}, {}}}}}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6291456*^9, 0.7146325398697294},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
       (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
         Automatic]& , {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
        SlotSequence[1]], {Identity, Identity}]& }}, {{
     Automatic, Automatic}, {{{3.6290592*^9, 
        FormBox["\"2015\"", TraditionalForm], {0.0125, 0.}}, {3.6605952*^9, 
        FormBox["\"2016\"", TraditionalForm], {0.0125, 0.}}, {3.6922176*^9, 
        FormBox["\"2017\"", TraditionalForm], {0.0125, 0.}}, {3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6368352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6446976*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6526464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6684576*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.67632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6842688*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}, {{3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0125, 0.}}, {3.6290592*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6368352*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6446976*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6526464*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6605952*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6684576*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.67632*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6842688*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}, {3.6922176*^9, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.0075, 0.}}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 112}, {All, All}},
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Historical IBM Returns\"", TraditionalForm],
  PlotRange->{{3.6291456*^9, 3.6936864*^9}, {0.7345425081027175, 
   1.132741872762479}},
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.666032377566059*^9, 3.666032414401166*^9}, {
   3.6660324893344517`*^9, 3.666032500373083*^9}, 3.6661043233786097`*^9, 
   3.666361673755254*^9, 3.666444765712593*^9, {3.6936779259033747`*^9, 
   3.6936779537479677`*^9}, 3.693743458577896*^9, 3.6937435518442307`*^9, 
   3.693743754011794*^9, 3.6937438208046145`*^9, 3.6937441940699644`*^9, 
   3.6937524057176437`*^9, 3.6937582458436794`*^9, 
   3.69375832819739*^9},ExpressionUUID->"a2083804-a1e4-41ab-9d58-\
682eb827d2ad"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["with overrides", "Subsection",
 CellChangeTimes->{{3.669987171045767*^9, 3.6699871731718884`*^9}, {
  3.693677107494564*^9, 
  3.693677108482621*^9}},ExpressionUUID->"1903b0b3-0389-4d4b-9def-\
2496d27fa247"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"msBBGcurrent", "[", 
  RowBox[{"\"\<AAPL US Equity\>\"", ",", "\"\<BETA_RAW_OVERRIDABLE\>\"", ",", 
   RowBox[{"\"\<noisy\>\"", "\[Rule]", "False"}], ",", 
   RowBox[{"\"\<overrides\>\"", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
      "\"\<BETA_OVERRIDE_REL_INDEX\>\"", "\[Rule]", "\"\<NDX Index\>\""}], 
      ",", " ", 
      RowBox[{"\"\<BETA_OVERRIDE_START_DT\>\"", "\[Rule]", 
       RowBox[{"bbgifyDate", "[", 
        RowBox[{"{", 
         RowBox[{"2015", ",", "2", ",", "3"}], "}"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<BETA_OVERRIDE_END_DT\>\"", "\[Rule]", 
       RowBox[{"bbgifyDate", "[", 
        RowBox[{"{", 
         RowBox[{"2015", ",", "12", ",", "3"}], "}"}], "]"}]}]}], "|>"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6936774554474664`*^9, 3.6936774655390434`*^9}, {
  3.6936779704449224`*^9, 3.693677981607561*^9}, {3.693678085131482*^9, 
  3.693678086087537*^9}, {3.693743761491222*^9, 
  3.693743763138316*^9}},ExpressionUUID->"53337966-9ae8-48b4-817d-\
1a6a6c87f69d"],

Cell[BoxData["1.206323`"], "Output",
 CellChangeTimes->{3.6936780871525974`*^9, 
  3.6937524077277584`*^9},ExpressionUUID->"f27425d8-1066-46b6-9b2e-\
53db3f18fc05"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1061, 1006},
WindowMargins->{{Automatic, 334}, {Automatic, 21}},
ShowSelection->True,
Magnification:>0.95 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 360, 6, 93, "Title",ExpressionUUID->"f7b3f1db-4cc6-49f7-ac71-a248d3a512c4"],
Cell[930, 30, 924, 13, 29, "Subsubtitle",ExpressionUUID->"684d0070-b082-4307-91e1-eb78660cda5b"],
Cell[1857, 45, 5806, 97, 489, "Text",ExpressionUUID->"96684083-591c-400d-9cf1-83e17358c1d4"],
Cell[CellGroupData[{
Cell[7688, 146, 159, 3, 64, "Section",ExpressionUUID->"622cc096-70a7-4bc4-b94d-0d8dae2185f9"],
Cell[CellGroupData[{
Cell[7872, 153, 159, 3, 51, "Subsection",ExpressionUUID->"4050c2d1-07e1-4023-ad43-4428ea66582a"],
Cell[8034, 158, 1588, 41, 90, "Input",ExpressionUUID->"c4e23fa5-f392-4960-830d-7d8a0e747f0c",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[9659, 204, 209, 4, 36, "Subsection",ExpressionUUID->"b4b56d4c-69c6-4f52-bbf3-cab0a1592245"],
Cell[9871, 210, 2528, 49, 164, "Input",ExpressionUUID->"919242f1-4ce9-4fc2-bf92-4ead2016ce02",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[12424, 263, 161, 3, 29, "Subsubsection",ExpressionUUID->"fc52165b-06f9-47d6-b35d-dd47d23d7880"],
Cell[CellGroupData[{
Cell[12610, 270, 659, 16, 18, "Input",ExpressionUUID->"bdface67-2428-4d2b-85be-0e5496fa55cf"],
Cell[13272, 288, 13168, 275, 50, "Output",ExpressionUUID->"dfb37434-ff93-4344-b50a-fb8e2a0915f0"]
}, Open  ]],
Cell[26455, 566, 284, 7, 18, "Input",ExpressionUUID->"7fe8e33a-e221-47a1-ae8b-497813f70477"],
Cell[26742, 575, 1742, 48, 111, "Input",ExpressionUUID->"26f7807e-c8e9-47d6-afc3-15c159a6b770"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[28533, 629, 213, 4, 36, "Subsection",ExpressionUUID->"5405d94a-4b7b-4a55-8138-8b61e96136f7"],
Cell[28749, 635, 24041, 413, 908, "Input",ExpressionUUID->"2d097cf8-1523-4bcf-b6d4-e807c5e132f5",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[52827, 1053, 159, 3, 51, "Subsection",ExpressionUUID->"5d3ceeb3-3cab-48b8-be3f-1d7184964283"],
Cell[52989, 1058, 15446, 338, 1340, "Input",ExpressionUUID->"b5ea7fc4-0d90-4eb6-b24b-448b7196c0ce",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[68472, 1401, 158, 3, 51, "Subsection",ExpressionUUID->"85eb331d-b9ca-4145-97f8-ff3c01a08d80"],
Cell[68633, 1406, 15023, 347, 629, "Input",ExpressionUUID->"49db0b0c-4a77-4674-a1f2-eb0b60ab1d32",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[83693, 1758, 165, 3, 36, "Subsection",ExpressionUUID->"e34991ec-1b2d-4894-80c2-702d8ce7af3c"],
Cell[83861, 1763, 15478, 333, 904, "Input",ExpressionUUID->"e9c5ba28-89a1-45fa-895f-96f49f970319",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99388, 2102, 182, 3, 64, "Section",ExpressionUUID->"a0f7d849-bdc5-4a14-b353-a1a18ada7f45"],
Cell[CellGroupData[{
Cell[99595, 2109, 213, 4, 51, "Subsection",ExpressionUUID->"e5c55abc-b391-45d5-b0c5-ce1adae7eda3"],
Cell[99811, 2115, 161, 3, 26, "Text",ExpressionUUID->"254aa1eb-afb7-4b06-bf14-775c1d046a42"],
Cell[CellGroupData[{
Cell[99997, 2122, 301, 6, 21, "Input",ExpressionUUID->"432272e8-5804-4608-83f4-9b92bcfb462f"],
Cell[100301, 2130, 210, 4, 24, "Output",ExpressionUUID->"10383d62-1c1a-4daa-b0c4-65f7fc8413d6"]
}, Open  ]],
Cell[100526, 2137, 414, 8, 43, "Text",ExpressionUUID->"484a0ca6-7f48-44dc-94f2-ad16222679e7"],
Cell[CellGroupData[{
Cell[100965, 2149, 828, 15, 21, "Input",ExpressionUUID->"4e4ca461-f0e8-46a0-8c9e-11574ac03320"],
Cell[101796, 2166, 519, 12, 24, "Output",ExpressionUUID->"ae1edf53-e11f-4f54-8f0d-88a6c0659aff"]
}, Open  ]],
Cell[102330, 2181, 181, 3, 26, "Text",ExpressionUUID->"95bf3117-6673-45c2-bb4a-a32ff05301f2"],
Cell[CellGroupData[{
Cell[102536, 2188, 490, 9, 21, "Input",ExpressionUUID->"0d3ae542-fbf7-4ed9-b9b0-36d2b66d09b9"],
Cell[103029, 2199, 516, 8, 24, "Output",ExpressionUUID->"37071713-8267-4771-8c7e-be0fd1515013"]
}, Open  ]],
Cell[103560, 2210, 322, 7, 26, "Text",ExpressionUUID->"168885e3-8e5f-4914-9965-28e42cf12f92"],
Cell[CellGroupData[{
Cell[103907, 2221, 386, 8, 21, "Input",ExpressionUUID->"7f01b2f5-04c0-411a-be60-a0e29332597f"],
Cell[104296, 2231, 94861, 1870, 453, "Output",ExpressionUUID->"cdf33615-ab77-45e8-98c4-fdeba2e40f8a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[199206, 4107, 160, 3, 36, "Subsection",ExpressionUUID->"147b9cbb-442a-4b92-b37e-7335117c149b"],
Cell[199369, 4112, 202, 3, 26, "Text",ExpressionUUID->"21b373ed-6bbc-4b54-905f-41276429fade"],
Cell[CellGroupData[{
Cell[199596, 4119, 769, 13, 21, "Input",ExpressionUUID->"f1eaf078-c858-4cef-9ee4-ef363031d065"],
Cell[200368, 4134, 14750, 345, 55, "Output",ExpressionUUID->"9811481d-f8ae-482e-a8f2-ca602c6166d3"]
}, Open  ]],
Cell[215133, 4482, 312, 7, 26, "Text",ExpressionUUID->"8ce052e4-12f9-43d6-b20f-da9e7c626ba3"],
Cell[CellGroupData[{
Cell[215470, 4493, 203, 4, 21, "Input",ExpressionUUID->"c808e041-8fd9-422e-a2a2-1e68cf757ff4"],
Cell[215676, 4499, 256, 4, 24, "Output",ExpressionUUID->"801ad143-6364-4ef9-9ff8-a9c0e6387674"]
}, Open  ]],
Cell[215947, 4506, 181, 3, 26, "Text",ExpressionUUID->"e72c4299-5000-4fc7-8e72-29c50497fd3f"],
Cell[216131, 4511, 201, 3, 26, "Text",ExpressionUUID->"c60eba6e-275b-465f-be9a-cfd85af65ea2"]
}, Closed]],
Cell[CellGroupData[{
Cell[216369, 4519, 160, 3, 36, "Subsection",ExpressionUUID->"e69cdff7-e253-44cc-a14c-137e379a79cd"],
Cell[CellGroupData[{
Cell[216554, 4526, 2170, 37, 21, "Input",ExpressionUUID->"2c9523a8-e560-46c8-9e9e-cf4926667799"],
Cell[218727, 4565, 15117, 353, 189, "Output",ExpressionUUID->"a0775886-84c5-45c3-a93e-70d434fff422"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[233893, 4924, 163, 3, 36, "Subsection",ExpressionUUID->"a854135f-a5a0-4fcf-81ee-65e2d407e1f0"],
Cell[CellGroupData[{
Cell[234081, 4931, 1615, 28, 21, "Input",ExpressionUUID->"69ef3cfe-5363-4eb8-93a9-8e06f7ec6263"],
Cell[235699, 4961, 8919, 192, 169, "Output",ExpressionUUID->"617004d2-e49c-42a4-a061-c51e9c6bc332"]
}, Open  ]],
Cell[244633, 5156, 279, 6, 26, "Text",ExpressionUUID->"98a2c6a0-62be-47f3-b0e7-47ec205922d5"]
}, Closed]],
Cell[CellGroupData[{
Cell[244949, 5167, 172, 3, 36, "Subsection",ExpressionUUID->"cbd39f99-2690-4167-93a8-4be39430e92f"],
Cell[CellGroupData[{
Cell[245146, 5174, 2626, 59, 95, "Input",ExpressionUUID->"b589238c-bef6-4843-b45b-df5ff166d442"],
Cell[247775, 5235, 24603, 477, 250, "Output",ExpressionUUID->"a2083804-a1e4-41ab-9d58-682eb827d2ad"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[272427, 5718, 213, 4, 36, "Subsection",ExpressionUUID->"1903b0b3-0389-4d4b-9def-2496d27fa247"],
Cell[CellGroupData[{
Cell[272665, 5726, 1044, 23, 64, "Input",ExpressionUUID->"53337966-9ae8-48b4-817d-1a6a6c87f69d"],
Cell[273712, 5751, 164, 3, 30, "Output",ExpressionUUID->"f27425d8-1066-46b6-9b2e-53db3f18fc05"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

